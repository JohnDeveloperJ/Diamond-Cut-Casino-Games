{
	"id": "f5fa2ee606626230bff674f20224249c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"Common.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {SafeERC20, IERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n//import \"hardhat/console.sol\";\n\ninterface IBankRoll {\n    function getIsGame(address game) external view returns (bool);\n\n    function getIsValidWager(\n        address game,\n        address tokenAddress\n    ) external view returns (bool);\n\n    function transferPayout(\n        address player,\n        uint256 payout,\n        address token\n    ) external;\n\n    function getOwner() external view returns (address);\n\n    function isPlayerSuspended(\n        address player\n    ) external view returns (bool, uint256);\n}\n\ninterface IVRFCoordinatorV2 is VRFCoordinatorV2Interface {\n    function getFeeConfig()\n        external\n        view\n        returns (\n            uint32,\n            uint32,\n            uint32,\n            uint32,\n            uint32,\n            uint24,\n            uint24,\n            uint24,\n            uint24\n        );\n}\n\ncontract Common is ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    uint256 public VRFFees;\n    address public ChainLinkVRF;\n    address public _trustedForwarder;\n\n    uint64 constant BLOCK_NUMBER_REFUND = 1000;\n\n    AggregatorV3Interface public LINK_ETH_FEED;\n    IVRFCoordinatorV2 public IChainLinkVRF;\n    IBankRoll public Bankroll;\n\n    error NotApprovedBankroll();\n    error InvalidValue(uint256 required, uint256 sent);\n    error TransferFailed();\n    error RefundFailed();\n    error NotOwner(address want, address have);\n    error ZeroWager();\n    error PlayerSuspended(uint256 suspensionTime);\n\n    /**\n     * @dev function to transfer the player wager to bankroll, and charge for VRF fee\n     * , reverts if bankroll doesn't approve game or token\n     * @param tokenAddress address of the token the wager is made on\n     * @param wager total amount wagered\n     */\n\n    function _transferWager(\n        address tokenAddress,\n        uint256 wager,\n        uint256 gasAmount,\n        address msgSender\n    ) internal returns (uint256 VRFfee) {\n        if (!Bankroll.getIsValidWager(address(this), tokenAddress)) {\n            revert NotApprovedBankroll();\n        }\n        if (wager == 0) {\n            revert ZeroWager();\n        }\n        (bool suspended, uint256 suspendedTime) = Bankroll.isPlayerSuspended(\n            msgSender\n        );\n        if (suspended) {\n            revert PlayerSuspended(suspendedTime);\n        }\n        VRFfee = getVRFFee(gasAmount);\n\n        if (tokenAddress == address(0)) {\n            if (msg.value < wager + VRFfee) {\n                revert InvalidValue(wager + VRFfee, msg.value);\n            }\n            _refundExcessValue(msg.value - (VRFfee + wager));\n        } else {\n            if (msg.value < VRFfee) {\n                revert InvalidValue(VRFfee, msg.value);\n            }\n\n            IERC20(tokenAddress).safeTransferFrom(\n                msgSender,\n                address(this),\n                wager\n            );\n\n            _refundExcessValue(msg.value - VRFfee);\n        }\n        VRFFees += VRFfee;\n    }\n\n    /**\n     * @dev function to transfer the wager held by the game contract to the bankroll\n     * @param tokenAddress address of the token to transfer\n     * @param amount token amount to transfer\n     */\n    function _transferToBankroll(\n        address tokenAddress,\n        uint256 amount\n    ) internal {\n        if (tokenAddress == address(0)) {\n            (bool success, ) = payable(address(Bankroll)).call{value: amount}(\n                \"\"\n            );\n            if (!success) {\n                revert RefundFailed();\n            }\n        } else {\n            IERC20(tokenAddress).safeTransfer(address(Bankroll), amount);\n        }\n    }\n\n    /**\n     * @dev calculates in form of native token the fee charged by chainlink VRF\n     * @return fee amount of fee user has to pay\n     */\n    function getVRFFee(uint256 gasAmount) public view returns (uint256 fee) {\n        (, int256 answer, , , ) = LINK_ETH_FEED.latestRoundData();\n        (uint32 fulfillmentFlatFeeLinkPPMTier1, , , , , , , , ) = IChainLinkVRF\n            .getFeeConfig();\n\n        fee =\n            tx.gasprice *\n            (gasAmount) +\n            ((1e12 *\n                uint256(fulfillmentFlatFeeLinkPPMTier1) *\n                uint256(answer)) / 1e18);\n    }\n\n    /**\n     * @dev returns to user the excess fee sent to pay for the VRF\n     * @param refund amount to send back to user\n     */\n    function _refundExcessValue(uint256 refund) internal {\n        if (refund == 0) {\n            return;\n        }\n        (bool success, ) = payable(msg.sender).call{value: refund}(\"\");\n        if (!success) {\n            revert RefundFailed();\n        }\n    }\n\n    /**\n     * @dev function to charge user for VRF\n     */\n    function _payVRFFee(uint256 gasAmount) internal returns (uint256 VRFfee) {\n        VRFfee = getVRFFee(gasAmount);\n        if (msg.value < VRFfee) {\n            revert InvalidValue(VRFfee, msg.value);\n        }\n        _refundExcessValue(msg.value - VRFfee);\n        VRFFees += VRFfee;\n    }\n\n    /**\n     * @dev function to transfer VRF fees acumulated in the contract to the Bankroll\n     * Can only be called by owner\n     */\n    function transferFees(address to) external nonReentrant {\n        if (msg.sender != Bankroll.getOwner()) {\n            revert NotOwner(Bankroll.getOwner(), msg.sender);\n        }\n        uint256 fee = VRFFees;\n        VRFFees = 0;\n        (bool success, ) = payable(address(to)).call{value: fee}(\"\");\n        if (!success) {\n            revert TransferFailed();\n        }\n    }\n\n    /**\n     * @dev function to transfer wager to game contract, without charging for VRF\n     * @param tokenAddress tokenAddress the wager is made on\n     * @param wager wager amount\n     */\n    function _transferWagerPvPNoVRF(\n        address tokenAddress,\n        uint256 wager\n    ) internal {\n        if (!Bankroll.getIsValidWager(address(this), tokenAddress)) {\n            revert NotApprovedBankroll();\n        }\n        if (tokenAddress == address(0)) {\n            if (!(msg.value == wager)) {\n                revert InvalidValue(wager, msg.value);\n            }\n        } else {\n            IERC20(tokenAddress).safeTransferFrom(\n                msg.sender,\n                address(this),\n                wager\n            );\n        }\n    }\n\n    /**\n     * @dev function to transfer wager to game contract, including charge for VRF\n     * @param tokenAddress tokenAddress the wager is made on\n     * @param wager wager amount\n     */\n    function _transferWagerPvP(\n        address tokenAddress,\n        uint256 wager,\n        uint256 gasAmount\n    ) internal {\n        if (!Bankroll.getIsValidWager(address(this), tokenAddress)) {\n            revert NotApprovedBankroll();\n        }\n\n        uint256 VRFfee = getVRFFee(gasAmount);\n        if (tokenAddress == address(0)) {\n            if (msg.value < wager + VRFfee) {\n                revert InvalidValue(wager, msg.value);\n            }\n\n            _refundExcessValue(msg.value - (VRFfee + wager));\n        } else {\n            if (msg.value < VRFfee) {\n                revert InvalidValue(VRFfee, msg.value);\n            }\n\n            IERC20(tokenAddress).safeTransferFrom(\n                msg.sender,\n                address(this),\n                wager\n            );\n            _refundExcessValue(msg.value - VRFfee);\n        }\n        VRFFees += VRFfee;\n    }\n\n    /**\n     * @dev transfers payout from the game contract to the players\n     * @param player address of the player to transfer the payout to\n     * @param payout amount of payout to transfer\n     * @param tokenAddress address of the token that payout will be transfered\n     */\n    function _transferPayoutPvP(\n        address player,\n        uint256 payout,\n        address tokenAddress\n    ) internal {\n        if (tokenAddress == address(0)) {\n            (bool success, ) = payable(player).call{value: payout}(\"\");\n            if (!success) {\n                revert TransferFailed();\n            }\n        } else {\n            IERC20(tokenAddress).safeTransfer(player, payout);\n        }\n    }\n\n    /**\n     * @dev transfers house edge from game contract to bankroll\n     * @param amount amount to transfer\n     * @param tokenAddress address of token to transfer\n     */\n    function _transferHouseEdgePvP(\n        uint256 amount,\n        address tokenAddress\n    ) internal {\n        if (tokenAddress == address(0)) {\n            (bool success, ) = payable(address(Bankroll)).call{value: amount}(\n                \"\"\n            );\n            if (!success) {\n                revert TransferFailed();\n            }\n        } else {\n            IERC20(tokenAddress).safeTransfer(address(Bankroll), amount);\n        }\n    }\n\n    /**\n     * @dev function to request bankroll to give payout to player\n     * @param player address of the player\n     * @param payout amount of payout to give\n     * @param tokenAddress address of the token in which to give the payout\n     */\n    function _transferPayout(\n        address player,\n        uint256 payout,\n        address tokenAddress\n    ) internal {\n        Bankroll.transferPayout(player, payout, tokenAddress);\n    }\n\n    /**\n     * @dev function to send the request for randomness to chainlink\n     * @param numWords number of random numbers required\n     */\n    function _requestRandomWords(\n        uint32 numWords\n    ) internal returns (uint256 s_requestId) {\n        s_requestId = VRFCoordinatorV2Interface(ChainLinkVRF)\n            .requestRandomWords(\n                0xd729dc84e21ae57ffb6be0053bf2b0668aa2aaf300a2a7b2ddf7dc0bb6e875a8,\n                576,\n                3,\n                2500000,\n                numWords\n            );\n    }\n\n    function isTrustedForwarder(address forwarder) public view returns (bool) {\n        return forwarder == _trustedForwarder;\n    }\n\n    function _msgSender() internal view returns (address ret) {\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\n            // At this point we know that the sender is a trusted forwarder,\n            // so we trust that the last bytes of msg.data are the verified sender address.\n            // extract sender address from the end of msg.data\n            assembly {\n                ret := shr(96, calldataload(sub(calldatasize(), 20)))\n            }\n        } else {\n            ret = msg.sender;\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"VRFCoordinatorV2Interface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "acceptSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "addConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "cancelSubscription",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createSubscription",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRequestConfig",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "getSubscription",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "balance",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "reqCount",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "consumers",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "pendingRequestExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "removeConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "keyHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "uint16",
									"name": "minimumRequestConfirmations",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "callbackGasLimit",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "numWords",
									"type": "uint32"
								}
							],
							"name": "requestRandomWords",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "requestSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint64)": {
								"details": "will revert if original owner of subId has not requested that msg.sender become the new owner.",
								"params": {
									"subId": "- ID of the subscription"
								}
							},
							"addConsumer(uint64,address)": {
								"params": {
									"consumer": "- New consumer which can use the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"cancelSubscription(uint64,address)": {
								"params": {
									"subId": "- ID of the subscription",
									"to": "- Where to send the remaining LINK to"
								}
							},
							"createSubscription()": {
								"details": "You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));",
								"returns": {
									"subId": "- A unique subscription id."
								}
							},
							"getRequestConfig()": {
								"returns": {
									"_0": "minimumRequestConfirmations global min for request confirmations",
									"_1": "maxGasLimit global max for request gas limit",
									"_2": "s_provingKeyHashes list of registered key hashes"
								}
							},
							"getSubscription(uint64)": {
								"params": {
									"subId": "- ID of the subscription"
								},
								"returns": {
									"balance": "- LINK balance of the subscription in juels.",
									"consumers": "- list of consumer address which are able to use this subscription.",
									"owner": "- owner of the subscription.",
									"reqCount": "- number of requests for this subscription, determines fee tier."
								}
							},
							"removeConsumer(uint64,address)": {
								"params": {
									"consumer": "- Consumer to remove from the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": {
								"params": {
									"callbackGasLimit": "- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]",
									"keyHash": "- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.",
									"minimumRequestConfirmations": "- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].",
									"numWords": "- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.",
									"subId": "- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."
								},
								"returns": {
									"requestId": "- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."
								}
							},
							"requestSubscriptionOwnerTransfer(uint64,address)": {
								"params": {
									"newOwner": "- proposed new owner of the subscription",
									"subId": "- ID of the subscription"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptSubscriptionOwnerTransfer(uint64)": "82359740",
							"addConsumer(uint64,address)": "7341c10c",
							"cancelSubscription(uint64,address)": "d7ae1d30",
							"createSubscription()": "a21a23e4",
							"getRequestConfig()": "00012291",
							"getSubscription(uint64)": "a47c7696",
							"pendingRequestExists(uint64)": "e82ad7d4",
							"removeConsumer(uint64,address)": "9f87fad7",
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": "5d3b1d30",
							"requestSubscriptionOwnerTransfer(uint64,address)": "04c357cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint64)": {
								"notice": "Request subscription owner transfer."
							},
							"addConsumer(uint64,address)": {
								"notice": "Add a consumer to a VRF subscription."
							},
							"cancelSubscription(uint64,address)": {
								"notice": "Cancel a subscription"
							},
							"createSubscription()": {
								"notice": "Create a VRF subscription."
							},
							"getRequestConfig()": {
								"notice": "Get configuration relevant for making requests"
							},
							"getSubscription(uint64)": {
								"notice": "Get a VRF subscription."
							},
							"removeConsumer(uint64,address)": {
								"notice": "Remove a consumer from a VRF subscription."
							},
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": {
								"notice": "Request a set of random words."
							},
							"requestSubscriptionOwnerTransfer(uint64,address)": {
								"notice": "Request subscription owner transfer."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 152,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208b3e8bb3a0e0e08373dba86aad725ebd5b02cdff994120708c9ef6b8e1c314d564736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208b3e8bb3a0e0e08373dba86aad725ebd5b02cdff994120708c9ef6b8e1c314d564736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 RETURNDATACOPY DUP12 0xB3 LOG0 0xE0 0xE0 DUP4 PUSH20 0xDBA86AAD725EBD5B02CDFF994120708C9EF6B8E1 0xC3 EQ 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208b3e8bb3a0e0e08373dba86aad725ebd5b02cdff994120708c9ef6b8e1c314d564736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 RETURNDATACOPY DUP12 0xB3 LOG0 0xE0 0xE0 DUP4 PUSH20 0xDBA86AAD725EBD5B02CDFF994120708C9EF6B8E1 0xC3 EQ 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208b3e8bb3a0e0e08373dba86aad725ebd5b02cdff994120708c9ef6b8e1c314d564736f6c63430008150033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"Common.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bdcbe0d35aee9e5c6bfe9a2ed00df4bd9be9cda43838df67716e3ef70019a5c464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bdcbe0d35aee9e5c6bfe9a2ed00df4bd9be9cda43838df67716e3ef70019a5c464736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xCB 0xE0 0xD3 GAS 0xEE SWAP15 0x5C PUSH12 0xFE9A2ED00DF4BD9BE9CDA438 CODESIZE 0xDF PUSH8 0x716E3EF70019A5C4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "195:6066:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bdcbe0d35aee9e5c6bfe9a2ed00df4bd9be9cda43838df67716e3ef70019a5c464736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xCB 0xE0 0xD3 GAS 0xEE SWAP15 0x5C PUSH12 0xFE9A2ED00DF4BD9BE9CDA438 CODESIZE 0xDF PUSH8 0x716E3EF70019A5C4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "195:6066:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bdcbe0d35aee9e5c6bfe9a2ed00df4bd9be9cda43838df67716e3ef70019a5c464736f6c63430008150033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"Common.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Common.sol": {
				"Common": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "required",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sent",
									"type": "uint256"
								}
							],
							"name": "InvalidValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotApprovedBankroll",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								}
							],
							"name": "NotOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "suspensionTime",
									"type": "uint256"
								}
							],
							"name": "PlayerSuspended",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RefundFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroWager",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Bankroll",
							"outputs": [
								{
									"internalType": "contract IBankRoll",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ChainLinkVRF",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "IChainLinkVRF",
							"outputs": [
								{
									"internalType": "contract IVRFCoordinatorV2",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LINK_ETH_FEED",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VRFFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_trustedForwarder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gasAmount",
									"type": "uint256"
								}
							],
							"name": "getVRFFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"name": "isTrustedForwarder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getVRFFee(uint256)": {
								"details": "calculates in form of native token the fee charged by chainlink VRF",
								"returns": {
									"fee": "amount of fee user has to pay"
								}
							},
							"transferFees(address)": {
								"details": "function to transfer VRF fees acumulated in the contract to the Bankroll Can only be called by owner"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Common.sol\":1220:10635  contract Common is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Common.sol\":1220:10635  contract Common is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Common.sol\":1220:10635  contract Common is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8bd16114\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8bd16114\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8d7c16d2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x953995ea\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xad178361\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd0bcfc0c\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x4dd189d5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x56c022bb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x572b6c05\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x63dc4ef5\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Common.sol\":1491:1529  IVRFCoordinatorV2 public IChainLinkVRF */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common.sol\":1355:1387  address public _trustedForwarder */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common.sol\":9967:10095  function isTrustedForwarder(address forwarder) public view returns (bool) {... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common.sol\":5443:5820  function transferFees(address to) external nonReentrant {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      stop\n        /* \"Common.sol\":4106:4549  function getVRFFee(uint256 gasAmount) public view returns (uint256 fee) {... */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common.sol\":1294:1316  uint256 public VRFFees */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common.sol\":1322:1349  address public ChainLinkVRF */\n    tag_9:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common.sol\":1443:1485  AggregatorV3Interface public LINK_ETH_FEED */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common.sol\":1535:1560  IBankRoll public Bankroll */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common.sol\":1491:1529  IVRFCoordinatorV2 public IChainLinkVRF */\n    tag_14:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Common.sol\":1355:1387  address public _trustedForwarder */\n    tag_18:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Common.sol\":9967:10095  function isTrustedForwarder(address forwarder) public view returns (bool) {... */\n    tag_24:\n        /* \"Common.sol\":10035:10039  bool */\n      0x00\n        /* \"Common.sol\":10071:10088  _trustedForwarder */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common.sol\":10058:10088  forwarder == _trustedForwarder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common.sol\":10058:10067  forwarder */\n      dup3\n        /* \"Common.sol\":10058:10088  forwarder == _trustedForwarder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Common.sol\":10051:10088  return forwarder == _trustedForwarder */\n      swap1\n      pop\n        /* \"Common.sol\":9967:10095  function isTrustedForwarder(address forwarder) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Common.sol\":5443:5820  function transferFees(address to) external nonReentrant {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_52\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_53\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_52:\n        /* \"Common.sol\":5527:5535  Bankroll */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common.sol\":5527:5544  Bankroll.getOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x893d20e8\n        /* \"Common.sol\":5527:5546  Bankroll.getOwner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"Common.sol\":5513:5546  msg.sender != Bankroll.getOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common.sol\":5513:5523  msg.sender */\n      caller\n        /* \"Common.sol\":5513:5546  msg.sender != Bankroll.getOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Common.sol\":5509:5621  if (msg.sender != Bankroll.getOwner()) {... */\n      tag_59\n      jumpi\n        /* \"Common.sol\":5578:5586  Bankroll */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common.sol\":5578:5595  Bankroll.getOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x893d20e8\n        /* \"Common.sol\":5578:5597  Bankroll.getOwner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_62:\n        /* \"Common.sol\":5599:5609  msg.sender */\n      caller\n        /* \"Common.sol\":5569:5610  NotOwner(Bankroll.getOwner(), msg.sender) */\n      mload(0x40)\n      0x23295f0e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Common.sol\":5509:5621  if (msg.sender != Bankroll.getOwner()) {... */\n    tag_59:\n        /* \"Common.sol\":5630:5641  uint256 fee */\n      0x00\n        /* \"Common.sol\":5644:5651  VRFFees */\n      sload(0x01)\n        /* \"Common.sol\":5630:5651  uint256 fee = VRFFees */\n      swap1\n      pop\n        /* \"Common.sol\":5671:5672  0 */\n      0x00\n        /* \"Common.sol\":5661:5668  VRFFees */\n      0x01\n        /* \"Common.sol\":5661:5672  VRFFees = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Common.sol\":5683:5695  bool success */\n      0x00\n        /* \"Common.sol\":5717:5719  to */\n      dup3\n        /* \"Common.sol\":5701:5726  payable(address(to)).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common.sol\":5734:5737  fee */\n      dup3\n        /* \"Common.sol\":5701:5742  payable(address(to)).call{value: fee}(\"\") */\n      mload(0x40)\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_69\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_68)\n    tag_69:\n      0x60\n      swap2\n      pop\n    tag_68:\n      pop\n        /* \"Common.sol\":5682:5742  (bool success, ) = payable(address(to)).call{value: fee}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Common.sol\":5757:5764  success */\n      dup1\n        /* \"Common.sol\":5752:5814  if (!success) {... */\n      tag_70\n      jumpi\n        /* \"Common.sol\":5787:5803  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Common.sol\":5752:5814  if (!success) {... */\n    tag_70:\n        /* \"Common.sol\":5499:5820  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_71\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_71:\n        /* \"Common.sol\":5443:5820  function transferFees(address to) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Common.sol\":4106:4549  function getVRFFee(uint256 gasAmount) public view returns (uint256 fee) {... */\n    tag_33:\n        /* \"Common.sol\":4165:4176  uint256 fee */\n      0x00\n        /* \"Common.sol\":4191:4204  int256 answer */\n      dup1\n        /* \"Common.sol\":4214:4227  LINK_ETH_FEED */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common.sol\":4214:4243  LINK_ETH_FEED.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"Common.sol\":4214:4245  LINK_ETH_FEED.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"Common.sol\":4188:4245  (, int256 answer, , , ) = LINK_ETH_FEED.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"Common.sol\":4256:4293  uint32 fulfillmentFlatFeeLinkPPMTier1 */\n      0x00\n        /* \"Common.sol\":4313:4326  IChainLinkVRF */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common.sol\":4313:4352  IChainLinkVRF... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5fbbc0d2\n        /* \"Common.sol\":4313:4354  IChainLinkVRF... */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x0120\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"Common.sol\":4255:4354  (uint32 fulfillmentFlatFeeLinkPPMTier1, , , , , , , , ) = IChainLinkVRF... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Common.sol\":4537:4541  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Common.sol\":4526:4532  answer */\n      dup3\n        /* \"Common.sol\":4468:4498  fulfillmentFlatFeeLinkPPMTier1 */\n      dup3\n        /* \"Common.sol\":4460:4499  uint256(fulfillmentFlatFeeLinkPPMTier1) */\n      0xffffffff\n      and\n        /* \"Common.sol\":4437:4441  1e12 */\n      0xe8d4a51000\n        /* \"Common.sol\":4437:4499  1e12 *... */\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"Common.sol\":4437:4533  1e12 *... */\n      tag_84\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_84:\n        /* \"Common.sol\":4436:4541  (1e12 *... */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"Common.sol\":4410:4419  gasAmount */\n      dup5\n        /* \"Common.sol\":4383:4394  tx.gasprice */\n      gasprice\n        /* \"Common.sol\":4383:4420  tx.gasprice *... */\n      tag_87\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_87:\n        /* \"Common.sol\":4383:4542  tx.gasprice *... */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"Common.sol\":4365:4542  fee =... */\n      swap3\n      pop\n        /* \"Common.sol\":4178:4549  {... */\n      pop\n      pop\n        /* \"Common.sol\":4106:4549  function getVRFFee(uint256 gasAmount) public view returns (uint256 fee) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Common.sol\":1294:1316  uint256 public VRFFees */\n    tag_37:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"Common.sol\":1322:1349  address public ChainLinkVRF */\n    tag_40:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Common.sol\":1443:1485  AggregatorV3Interface public LINK_ETH_FEED */\n    tag_43:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Common.sol\":1535:1560  IBankRoll public Bankroll */\n    tag_47:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_95:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_96:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_97:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_144\n        /* \"#utility.yul\":306:340   */\n      tag_145\n        /* \"#utility.yul\":315:339   */\n      tag_146\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_95\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":306:340   */\n      tag_96\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":288:341   */\n      tag_95\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_98:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_148\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_97\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:636   */\n    tag_99:\n        /* \"#utility.yul\":560:569   */\n      0x00\n        /* \"#utility.yul\":593:630   */\n      tag_150\n        /* \"#utility.yul\":624:629   */\n      dup3\n        /* \"#utility.yul\":593:630   */\n      tag_98\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":580:630   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":642:823   */\n    tag_100:\n        /* \"#utility.yul\":754:816   */\n      tag_152\n        /* \"#utility.yul\":810:815   */\n      dup2\n        /* \"#utility.yul\":754:816   */\n      tag_99\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":749:752   */\n      dup3\n        /* \"#utility.yul\":742:817   */\n      mstore\n        /* \"#utility.yul\":642:823   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":829:1101   */\n    tag_16:\n        /* \"#utility.yul\":947:951   */\n      0x00\n        /* \"#utility.yul\":985:987   */\n      0x20\n        /* \"#utility.yul\":974:983   */\n      dup3\n        /* \"#utility.yul\":970:988   */\n      add\n        /* \"#utility.yul\":962:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":998:1094   */\n      tag_154\n        /* \"#utility.yul\":1091:1092   */\n      0x00\n        /* \"#utility.yul\":1080:1089   */\n      dup4\n        /* \"#utility.yul\":1076:1093   */\n      add\n        /* \"#utility.yul\":1067:1073   */\n      dup5\n        /* \"#utility.yul\":998:1094   */\n      tag_100\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":829:1101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1107:1203   */\n    tag_101:\n        /* \"#utility.yul\":1144:1151   */\n      0x00\n        /* \"#utility.yul\":1173:1197   */\n      tag_156\n        /* \"#utility.yul\":1191:1196   */\n      dup3\n        /* \"#utility.yul\":1173:1197   */\n      tag_95\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1162:1197   */\n      swap1\n      pop\n        /* \"#utility.yul\":1107:1203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1209:1327   */\n    tag_102:\n        /* \"#utility.yul\":1296:1320   */\n      tag_158\n        /* \"#utility.yul\":1314:1319   */\n      dup2\n        /* \"#utility.yul\":1296:1320   */\n      tag_101\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1291:1294   */\n      dup3\n        /* \"#utility.yul\":1284:1321   */\n      mstore\n        /* \"#utility.yul\":1209:1327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1333:1555   */\n    tag_20:\n        /* \"#utility.yul\":1426:1430   */\n      0x00\n        /* \"#utility.yul\":1464:1466   */\n      0x20\n        /* \"#utility.yul\":1453:1462   */\n      dup3\n        /* \"#utility.yul\":1449:1467   */\n      add\n        /* \"#utility.yul\":1441:1467   */\n      swap1\n      pop\n        /* \"#utility.yul\":1477:1548   */\n      tag_160\n        /* \"#utility.yul\":1545:1546   */\n      0x00\n        /* \"#utility.yul\":1534:1543   */\n      dup4\n        /* \"#utility.yul\":1530:1547   */\n      add\n        /* \"#utility.yul\":1521:1527   */\n      dup5\n        /* \"#utility.yul\":1477:1548   */\n      tag_102\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1333:1555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1642:1759   */\n    tag_104:\n        /* \"#utility.yul\":1751:1752   */\n      0x00\n        /* \"#utility.yul\":1748:1749   */\n      dup1\n        /* \"#utility.yul\":1741:1753   */\n      revert\n        /* \"#utility.yul\":1888:2010   */\n    tag_106:\n        /* \"#utility.yul\":1961:1985   */\n      tag_165\n        /* \"#utility.yul\":1979:1984   */\n      dup2\n        /* \"#utility.yul\":1961:1985   */\n      tag_101\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1954:1959   */\n      dup2\n        /* \"#utility.yul\":1951:1986   */\n      eq\n        /* \"#utility.yul\":1941:2004   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2000:2001   */\n      0x00\n        /* \"#utility.yul\":1997:1998   */\n      dup1\n        /* \"#utility.yul\":1990:2002   */\n      revert\n        /* \"#utility.yul\":1941:2004   */\n    tag_166:\n        /* \"#utility.yul\":1888:2010   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2016:2155   */\n    tag_107:\n        /* \"#utility.yul\":2062:2067   */\n      0x00\n        /* \"#utility.yul\":2100:2106   */\n      dup2\n        /* \"#utility.yul\":2087:2107   */\n      calldataload\n        /* \"#utility.yul\":2078:2107   */\n      swap1\n      pop\n        /* \"#utility.yul\":2116:2149   */\n      tag_168\n        /* \"#utility.yul\":2143:2148   */\n      dup2\n        /* \"#utility.yul\":2116:2149   */\n      tag_106\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2016:2155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2161:2490   */\n    tag_23:\n        /* \"#utility.yul\":2220:2226   */\n      0x00\n        /* \"#utility.yul\":2269:2271   */\n      0x20\n        /* \"#utility.yul\":2257:2266   */\n      dup3\n        /* \"#utility.yul\":2248:2255   */\n      dup5\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2356   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2275:2354   */\n      tag_171\n      tag_104\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2237:2356   */\n    tag_170:\n        /* \"#utility.yul\":2395:2396   */\n      0x00\n        /* \"#utility.yul\":2420:2473   */\n      tag_172\n        /* \"#utility.yul\":2465:2472   */\n      dup5\n        /* \"#utility.yul\":2456:2462   */\n      dup3\n        /* \"#utility.yul\":2445:2454   */\n      dup6\n        /* \"#utility.yul\":2441:2463   */\n      add\n        /* \"#utility.yul\":2420:2473   */\n      tag_107\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2410:2473   */\n      swap2\n      pop\n        /* \"#utility.yul\":2366:2483   */\n      pop\n        /* \"#utility.yul\":2161:2490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2496:2586   */\n    tag_108:\n        /* \"#utility.yul\":2530:2537   */\n      0x00\n        /* \"#utility.yul\":2573:2578   */\n      dup2\n        /* \"#utility.yul\":2566:2579   */\n      iszero\n        /* \"#utility.yul\":2559:2580   */\n      iszero\n        /* \"#utility.yul\":2548:2580   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2592:2701   */\n    tag_109:\n        /* \"#utility.yul\":2673:2694   */\n      tag_175\n        /* \"#utility.yul\":2688:2693   */\n      dup2\n        /* \"#utility.yul\":2673:2694   */\n      tag_108\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2668:2671   */\n      dup3\n        /* \"#utility.yul\":2661:2695   */\n      mstore\n        /* \"#utility.yul\":2592:2701   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2707:2917   */\n    tag_26:\n        /* \"#utility.yul\":2794:2798   */\n      0x00\n        /* \"#utility.yul\":2832:2834   */\n      0x20\n        /* \"#utility.yul\":2821:2830   */\n      dup3\n        /* \"#utility.yul\":2817:2835   */\n      add\n        /* \"#utility.yul\":2809:2835   */\n      swap1\n      pop\n        /* \"#utility.yul\":2845:2910   */\n      tag_177\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2896:2905   */\n      dup4\n        /* \"#utility.yul\":2892:2909   */\n      add\n        /* \"#utility.yul\":2883:2889   */\n      dup5\n        /* \"#utility.yul\":2845:2910   */\n      tag_109\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2707:2917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3000   */\n    tag_110:\n        /* \"#utility.yul\":2960:2967   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2978:2994   */\n      swap1\n      pop\n        /* \"#utility.yul\":2923:3000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3006:3128   */\n    tag_111:\n        /* \"#utility.yul\":3079:3103   */\n      tag_180\n        /* \"#utility.yul\":3097:3102   */\n      dup2\n        /* \"#utility.yul\":3079:3103   */\n      tag_110\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3072:3077   */\n      dup2\n        /* \"#utility.yul\":3069:3104   */\n      eq\n        /* \"#utility.yul\":3059:3122   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":3118:3119   */\n      0x00\n        /* \"#utility.yul\":3115:3116   */\n      dup1\n        /* \"#utility.yul\":3108:3120   */\n      revert\n        /* \"#utility.yul\":3059:3122   */\n    tag_181:\n        /* \"#utility.yul\":3006:3128   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3134:3273   */\n    tag_112:\n        /* \"#utility.yul\":3180:3185   */\n      0x00\n        /* \"#utility.yul\":3218:3224   */\n      dup2\n        /* \"#utility.yul\":3205:3225   */\n      calldataload\n        /* \"#utility.yul\":3196:3225   */\n      swap1\n      pop\n        /* \"#utility.yul\":3234:3267   */\n      tag_183\n        /* \"#utility.yul\":3261:3266   */\n      dup2\n        /* \"#utility.yul\":3234:3267   */\n      tag_111\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3134:3273   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3279:3608   */\n    tag_32:\n        /* \"#utility.yul\":3338:3344   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3375:3384   */\n      dup3\n        /* \"#utility.yul\":3366:3373   */\n      dup5\n        /* \"#utility.yul\":3362:3385   */\n      sub\n        /* \"#utility.yul\":3358:3390   */\n      slt\n        /* \"#utility.yul\":3355:3474   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":3393:3472   */\n      tag_186\n      tag_104\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3355:3474   */\n    tag_185:\n        /* \"#utility.yul\":3513:3514   */\n      0x00\n        /* \"#utility.yul\":3538:3591   */\n      tag_187\n        /* \"#utility.yul\":3583:3590   */\n      dup5\n        /* \"#utility.yul\":3574:3580   */\n      dup3\n        /* \"#utility.yul\":3563:3572   */\n      dup6\n        /* \"#utility.yul\":3559:3581   */\n      add\n        /* \"#utility.yul\":3538:3591   */\n      tag_112\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3528:3591   */\n      swap2\n      pop\n        /* \"#utility.yul\":3484:3601   */\n      pop\n        /* \"#utility.yul\":3279:3608   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3614:3732   */\n    tag_113:\n        /* \"#utility.yul\":3701:3725   */\n      tag_189\n        /* \"#utility.yul\":3719:3724   */\n      dup2\n        /* \"#utility.yul\":3701:3725   */\n      tag_110\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3696:3699   */\n      dup3\n        /* \"#utility.yul\":3689:3726   */\n      mstore\n        /* \"#utility.yul\":3614:3732   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3738:3960   */\n    tag_35:\n        /* \"#utility.yul\":3831:3835   */\n      0x00\n        /* \"#utility.yul\":3869:3871   */\n      0x20\n        /* \"#utility.yul\":3858:3867   */\n      dup3\n        /* \"#utility.yul\":3854:3872   */\n      add\n        /* \"#utility.yul\":3846:3872   */\n      swap1\n      pop\n        /* \"#utility.yul\":3882:3953   */\n      tag_191\n        /* \"#utility.yul\":3950:3951   */\n      0x00\n        /* \"#utility.yul\":3939:3948   */\n      dup4\n        /* \"#utility.yul\":3935:3952   */\n      add\n        /* \"#utility.yul\":3926:3932   */\n      dup5\n        /* \"#utility.yul\":3882:3953   */\n      tag_113\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3738:3960   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3966:4120   */\n    tag_114:\n        /* \"#utility.yul\":4044:4053   */\n      0x00\n        /* \"#utility.yul\":4077:4114   */\n      tag_193\n        /* \"#utility.yul\":4108:4113   */\n      dup3\n        /* \"#utility.yul\":4077:4114   */\n      tag_98\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4064:4114   */\n      swap1\n      pop\n        /* \"#utility.yul\":3966:4120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4126:4313   */\n    tag_115:\n        /* \"#utility.yul\":4241:4306   */\n      tag_195\n        /* \"#utility.yul\":4300:4305   */\n      dup2\n        /* \"#utility.yul\":4241:4306   */\n      tag_114\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4236:4239   */\n      dup3\n        /* \"#utility.yul\":4229:4307   */\n      mstore\n        /* \"#utility.yul\":4126:4313   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4319:4597   */\n    tag_45:\n        /* \"#utility.yul\":4440:4444   */\n      0x00\n        /* \"#utility.yul\":4478:4480   */\n      0x20\n        /* \"#utility.yul\":4467:4476   */\n      dup3\n        /* \"#utility.yul\":4463:4481   */\n      add\n        /* \"#utility.yul\":4455:4481   */\n      swap1\n      pop\n        /* \"#utility.yul\":4491:4590   */\n      tag_197\n        /* \"#utility.yul\":4587:4588   */\n      0x00\n        /* \"#utility.yul\":4576:4585   */\n      dup4\n        /* \"#utility.yul\":4572:4589   */\n      add\n        /* \"#utility.yul\":4563:4569   */\n      dup5\n        /* \"#utility.yul\":4491:4590   */\n      tag_115\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4319:4597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4603:4746   */\n    tag_116:\n        /* \"#utility.yul\":4670:4679   */\n      0x00\n        /* \"#utility.yul\":4703:4740   */\n      tag_199\n        /* \"#utility.yul\":4734:4739   */\n      dup3\n        /* \"#utility.yul\":4703:4740   */\n      tag_98\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4690:4740   */\n      swap1\n      pop\n        /* \"#utility.yul\":4603:4746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4752:4917   */\n    tag_117:\n        /* \"#utility.yul\":4856:4910   */\n      tag_201\n        /* \"#utility.yul\":4904:4909   */\n      dup2\n        /* \"#utility.yul\":4856:4910   */\n      tag_116\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4851:4854   */\n      dup3\n        /* \"#utility.yul\":4844:4911   */\n      mstore\n        /* \"#utility.yul\":4752:4917   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4923:5179   */\n    tag_49:\n        /* \"#utility.yul\":5033:5037   */\n      0x00\n        /* \"#utility.yul\":5071:5073   */\n      0x20\n        /* \"#utility.yul\":5060:5069   */\n      dup3\n        /* \"#utility.yul\":5056:5074   */\n      add\n        /* \"#utility.yul\":5048:5074   */\n      swap1\n      pop\n        /* \"#utility.yul\":5084:5172   */\n      tag_203\n        /* \"#utility.yul\":5169:5170   */\n      0x00\n        /* \"#utility.yul\":5158:5167   */\n      dup4\n        /* \"#utility.yul\":5154:5171   */\n      add\n        /* \"#utility.yul\":5145:5151   */\n      dup5\n        /* \"#utility.yul\":5084:5172   */\n      tag_117\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4923:5179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5185:5328   */\n    tag_118:\n        /* \"#utility.yul\":5242:5247   */\n      0x00\n        /* \"#utility.yul\":5273:5279   */\n      dup2\n        /* \"#utility.yul\":5267:5280   */\n      mload\n        /* \"#utility.yul\":5258:5280   */\n      swap1\n      pop\n        /* \"#utility.yul\":5289:5322   */\n      tag_205\n        /* \"#utility.yul\":5316:5321   */\n      dup2\n        /* \"#utility.yul\":5289:5322   */\n      tag_106\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5185:5328   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5334:5685   */\n    tag_58:\n        /* \"#utility.yul\":5404:5410   */\n      0x00\n        /* \"#utility.yul\":5453:5455   */\n      0x20\n        /* \"#utility.yul\":5441:5450   */\n      dup3\n        /* \"#utility.yul\":5432:5439   */\n      dup5\n        /* \"#utility.yul\":5428:5451   */\n      sub\n        /* \"#utility.yul\":5424:5456   */\n      slt\n        /* \"#utility.yul\":5421:5540   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":5459:5538   */\n      tag_208\n      tag_104\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5421:5540   */\n    tag_207:\n        /* \"#utility.yul\":5579:5580   */\n      0x00\n        /* \"#utility.yul\":5604:5668   */\n      tag_209\n        /* \"#utility.yul\":5660:5667   */\n      dup5\n        /* \"#utility.yul\":5651:5657   */\n      dup3\n        /* \"#utility.yul\":5640:5649   */\n      dup6\n        /* \"#utility.yul\":5636:5658   */\n      add\n        /* \"#utility.yul\":5604:5668   */\n      tag_118\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5594:5668   */\n      swap2\n      pop\n        /* \"#utility.yul\":5550:5678   */\n      pop\n        /* \"#utility.yul\":5334:5685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5691:6023   */\n    tag_64:\n        /* \"#utility.yul\":5812:5816   */\n      0x00\n        /* \"#utility.yul\":5850:5852   */\n      0x40\n        /* \"#utility.yul\":5839:5848   */\n      dup3\n        /* \"#utility.yul\":5835:5853   */\n      add\n        /* \"#utility.yul\":5827:5853   */\n      swap1\n      pop\n        /* \"#utility.yul\":5863:5934   */\n      tag_211\n        /* \"#utility.yul\":5931:5932   */\n      0x00\n        /* \"#utility.yul\":5920:5929   */\n      dup4\n        /* \"#utility.yul\":5916:5933   */\n      add\n        /* \"#utility.yul\":5907:5913   */\n      dup6\n        /* \"#utility.yul\":5863:5934   */\n      tag_102\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5944:6016   */\n      tag_212\n        /* \"#utility.yul\":6012:6014   */\n      0x20\n        /* \"#utility.yul\":6001:6010   */\n      dup4\n        /* \"#utility.yul\":5997:6015   */\n      add\n        /* \"#utility.yul\":5988:5994   */\n      dup5\n        /* \"#utility.yul\":5944:6016   */\n      tag_102\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5691:6023   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6029:6176   */\n    tag_119:\n        /* \"#utility.yul\":6130:6141   */\n      0x00\n        /* \"#utility.yul\":6167:6170   */\n      dup2\n        /* \"#utility.yul\":6152:6170   */\n      swap1\n      pop\n        /* \"#utility.yul\":6029:6176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6182:6296   */\n    tag_120:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6302:6700   */\n    tag_121:\n        /* \"#utility.yul\":6461:6464   */\n      0x00\n        /* \"#utility.yul\":6482:6565   */\n      tag_216\n        /* \"#utility.yul\":6563:6564   */\n      0x00\n        /* \"#utility.yul\":6558:6561   */\n      dup4\n        /* \"#utility.yul\":6482:6565   */\n      tag_119\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6475:6565   */\n      swap2\n      pop\n        /* \"#utility.yul\":6574:6667   */\n      tag_217\n        /* \"#utility.yul\":6663:6666   */\n      dup3\n        /* \"#utility.yul\":6574:6667   */\n      tag_120\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6692:6693   */\n      0x00\n        /* \"#utility.yul\":6687:6690   */\n      dup3\n        /* \"#utility.yul\":6683:6694   */\n      add\n        /* \"#utility.yul\":6676:6694   */\n      swap1\n      pop\n        /* \"#utility.yul\":6302:6700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6706:7085   */\n    tag_66:\n        /* \"#utility.yul\":6890:6893   */\n      0x00\n        /* \"#utility.yul\":6912:7059   */\n      tag_219\n        /* \"#utility.yul\":7055:7058   */\n      dup3\n        /* \"#utility.yul\":6912:7059   */\n      tag_121\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6905:7059   */\n      swap2\n      pop\n        /* \"#utility.yul\":7076:7079   */\n      dup2\n        /* \"#utility.yul\":7069:7079   */\n      swap1\n      pop\n        /* \"#utility.yul\":6706:7085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7091:7196   */\n    tag_122:\n        /* \"#utility.yul\":7127:7134   */\n      0x00\n        /* \"#utility.yul\":7167:7189   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":7160:7165   */\n      dup3\n        /* \"#utility.yul\":7156:7190   */\n      and\n        /* \"#utility.yul\":7145:7190   */\n      swap1\n      pop\n        /* \"#utility.yul\":7091:7196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7202:7322   */\n    tag_123:\n        /* \"#utility.yul\":7274:7297   */\n      tag_222\n        /* \"#utility.yul\":7291:7296   */\n      dup2\n        /* \"#utility.yul\":7274:7297   */\n      tag_122\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7267:7272   */\n      dup2\n        /* \"#utility.yul\":7264:7298   */\n      eq\n        /* \"#utility.yul\":7254:7316   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":7312:7313   */\n      0x00\n        /* \"#utility.yul\":7309:7310   */\n      dup1\n        /* \"#utility.yul\":7302:7314   */\n      revert\n        /* \"#utility.yul\":7254:7316   */\n    tag_223:\n        /* \"#utility.yul\":7202:7322   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7328:7469   */\n    tag_124:\n        /* \"#utility.yul\":7384:7389   */\n      0x00\n        /* \"#utility.yul\":7415:7421   */\n      dup2\n        /* \"#utility.yul\":7409:7422   */\n      mload\n        /* \"#utility.yul\":7400:7422   */\n      swap1\n      pop\n        /* \"#utility.yul\":7431:7463   */\n      tag_225\n        /* \"#utility.yul\":7457:7462   */\n      dup2\n        /* \"#utility.yul\":7431:7463   */\n      tag_123\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7328:7469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7475:7551   */\n    tag_125:\n        /* \"#utility.yul\":7511:7518   */\n      0x00\n        /* \"#utility.yul\":7540:7545   */\n      dup2\n        /* \"#utility.yul\":7529:7545   */\n      swap1\n      pop\n        /* \"#utility.yul\":7475:7551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7557:7677   */\n    tag_126:\n        /* \"#utility.yul\":7629:7652   */\n      tag_228\n        /* \"#utility.yul\":7646:7651   */\n      dup2\n        /* \"#utility.yul\":7629:7652   */\n      tag_125\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7622:7627   */\n      dup2\n        /* \"#utility.yul\":7619:7653   */\n      eq\n        /* \"#utility.yul\":7609:7671   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":7667:7668   */\n      0x00\n        /* \"#utility.yul\":7664:7665   */\n      dup1\n        /* \"#utility.yul\":7657:7669   */\n      revert\n        /* \"#utility.yul\":7609:7671   */\n    tag_229:\n        /* \"#utility.yul\":7557:7677   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7683:7824   */\n    tag_127:\n        /* \"#utility.yul\":7739:7744   */\n      0x00\n        /* \"#utility.yul\":7770:7776   */\n      dup2\n        /* \"#utility.yul\":7764:7777   */\n      mload\n        /* \"#utility.yul\":7755:7777   */\n      swap1\n      pop\n        /* \"#utility.yul\":7786:7818   */\n      tag_231\n        /* \"#utility.yul\":7812:7817   */\n      dup2\n        /* \"#utility.yul\":7786:7818   */\n      tag_126\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7683:7824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7830:7973   */\n    tag_128:\n        /* \"#utility.yul\":7887:7892   */\n      0x00\n        /* \"#utility.yul\":7918:7924   */\n      dup2\n        /* \"#utility.yul\":7912:7925   */\n      mload\n        /* \"#utility.yul\":7903:7925   */\n      swap1\n      pop\n        /* \"#utility.yul\":7934:7967   */\n      tag_233\n        /* \"#utility.yul\":7961:7966   */\n      dup2\n        /* \"#utility.yul\":7934:7967   */\n      tag_111\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7830:7973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7979:8950   */\n    tag_77:\n        /* \"#utility.yul\":8082:8088   */\n      0x00\n        /* \"#utility.yul\":8090:8096   */\n      dup1\n        /* \"#utility.yul\":8098:8104   */\n      0x00\n        /* \"#utility.yul\":8106:8112   */\n      dup1\n        /* \"#utility.yul\":8114:8120   */\n      0x00\n        /* \"#utility.yul\":8163:8166   */\n      0xa0\n        /* \"#utility.yul\":8151:8160   */\n      dup7\n        /* \"#utility.yul\":8142:8149   */\n      dup9\n        /* \"#utility.yul\":8138:8161   */\n      sub\n        /* \"#utility.yul\":8134:8167   */\n      slt\n        /* \"#utility.yul\":8131:8251   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":8170:8249   */\n      tag_236\n      tag_104\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":8131:8251   */\n    tag_235:\n        /* \"#utility.yul\":8290:8291   */\n      0x00\n        /* \"#utility.yul\":8315:8378   */\n      tag_237\n        /* \"#utility.yul\":8370:8377   */\n      dup9\n        /* \"#utility.yul\":8361:8367   */\n      dup3\n        /* \"#utility.yul\":8350:8359   */\n      dup10\n        /* \"#utility.yul\":8346:8368   */\n      add\n        /* \"#utility.yul\":8315:8378   */\n      tag_124\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":8305:8378   */\n      swap6\n      pop\n        /* \"#utility.yul\":8261:8388   */\n      pop\n        /* \"#utility.yul\":8427:8429   */\n      0x20\n        /* \"#utility.yul\":8453:8516   */\n      tag_238\n        /* \"#utility.yul\":8508:8515   */\n      dup9\n        /* \"#utility.yul\":8499:8505   */\n      dup3\n        /* \"#utility.yul\":8488:8497   */\n      dup10\n        /* \"#utility.yul\":8484:8506   */\n      add\n        /* \"#utility.yul\":8453:8516   */\n      tag_127\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8443:8516   */\n      swap5\n      pop\n        /* \"#utility.yul\":8398:8526   */\n      pop\n        /* \"#utility.yul\":8565:8567   */\n      0x40\n        /* \"#utility.yul\":8591:8655   */\n      tag_239\n        /* \"#utility.yul\":8647:8654   */\n      dup9\n        /* \"#utility.yul\":8638:8644   */\n      dup3\n        /* \"#utility.yul\":8627:8636   */\n      dup10\n        /* \"#utility.yul\":8623:8645   */\n      add\n        /* \"#utility.yul\":8591:8655   */\n      tag_128\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8581:8655   */\n      swap4\n      pop\n        /* \"#utility.yul\":8536:8665   */\n      pop\n        /* \"#utility.yul\":8704:8706   */\n      0x60\n        /* \"#utility.yul\":8730:8794   */\n      tag_240\n        /* \"#utility.yul\":8786:8793   */\n      dup9\n        /* \"#utility.yul\":8777:8783   */\n      dup3\n        /* \"#utility.yul\":8766:8775   */\n      dup10\n        /* \"#utility.yul\":8762:8784   */\n      add\n        /* \"#utility.yul\":8730:8794   */\n      tag_128\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8720:8794   */\n      swap3\n      pop\n        /* \"#utility.yul\":8675:8804   */\n      pop\n        /* \"#utility.yul\":8843:8846   */\n      0x80\n        /* \"#utility.yul\":8870:8933   */\n      tag_241\n        /* \"#utility.yul\":8925:8932   */\n      dup9\n        /* \"#utility.yul\":8916:8922   */\n      dup3\n        /* \"#utility.yul\":8905:8914   */\n      dup10\n        /* \"#utility.yul\":8901:8923   */\n      add\n        /* \"#utility.yul\":8870:8933   */\n      tag_124\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8860:8933   */\n      swap2\n      pop\n        /* \"#utility.yul\":8814:8943   */\n      pop\n        /* \"#utility.yul\":7979:8950   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8956:9049   */\n    tag_129:\n        /* \"#utility.yul\":8992:8999   */\n      0x00\n        /* \"#utility.yul\":9032:9042   */\n      0xffffffff\n        /* \"#utility.yul\":9025:9030   */\n      dup3\n        /* \"#utility.yul\":9021:9043   */\n      and\n        /* \"#utility.yul\":9010:9043   */\n      swap1\n      pop\n        /* \"#utility.yul\":8956:9049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9055:9175   */\n    tag_130:\n        /* \"#utility.yul\":9127:9150   */\n      tag_244\n        /* \"#utility.yul\":9144:9149   */\n      dup2\n        /* \"#utility.yul\":9127:9150   */\n      tag_129\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9120:9125   */\n      dup2\n        /* \"#utility.yul\":9117:9151   */\n      eq\n        /* \"#utility.yul\":9107:9169   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":9165:9166   */\n      0x00\n        /* \"#utility.yul\":9162:9163   */\n      dup1\n        /* \"#utility.yul\":9155:9167   */\n      revert\n        /* \"#utility.yul\":9107:9169   */\n    tag_245:\n        /* \"#utility.yul\":9055:9175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9181:9322   */\n    tag_131:\n        /* \"#utility.yul\":9237:9242   */\n      0x00\n        /* \"#utility.yul\":9268:9274   */\n      dup2\n        /* \"#utility.yul\":9262:9275   */\n      mload\n        /* \"#utility.yul\":9253:9275   */\n      swap1\n      pop\n        /* \"#utility.yul\":9284:9316   */\n      tag_247\n        /* \"#utility.yul\":9310:9315   */\n      dup2\n        /* \"#utility.yul\":9284:9316   */\n      tag_130\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":9181:9322   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9328:9419   */\n    tag_132:\n        /* \"#utility.yul\":9364:9371   */\n      0x00\n        /* \"#utility.yul\":9404:9412   */\n      0xffffff\n        /* \"#utility.yul\":9397:9402   */\n      dup3\n        /* \"#utility.yul\":9393:9413   */\n      and\n        /* \"#utility.yul\":9382:9413   */\n      swap1\n      pop\n        /* \"#utility.yul\":9328:9419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9425:9545   */\n    tag_133:\n        /* \"#utility.yul\":9497:9520   */\n      tag_250\n        /* \"#utility.yul\":9514:9519   */\n      dup2\n        /* \"#utility.yul\":9497:9520   */\n      tag_132\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":9490:9495   */\n      dup2\n        /* \"#utility.yul\":9487:9521   */\n      eq\n        /* \"#utility.yul\":9477:9539   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":9535:9536   */\n      0x00\n        /* \"#utility.yul\":9532:9533   */\n      dup1\n        /* \"#utility.yul\":9525:9537   */\n      revert\n        /* \"#utility.yul\":9477:9539   */\n    tag_251:\n        /* \"#utility.yul\":9425:9545   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9551:9692   */\n    tag_134:\n        /* \"#utility.yul\":9607:9612   */\n      0x00\n        /* \"#utility.yul\":9638:9644   */\n      dup2\n        /* \"#utility.yul\":9632:9645   */\n      mload\n        /* \"#utility.yul\":9623:9645   */\n      swap1\n      pop\n        /* \"#utility.yul\":9654:9686   */\n      tag_253\n        /* \"#utility.yul\":9680:9685   */\n      dup2\n        /* \"#utility.yul\":9654:9686   */\n      tag_133\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9551:9692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9698:11285   */\n    tag_81:\n        /* \"#utility.yul\":9831:9837   */\n      0x00\n        /* \"#utility.yul\":9839:9845   */\n      dup1\n        /* \"#utility.yul\":9847:9853   */\n      0x00\n        /* \"#utility.yul\":9855:9861   */\n      dup1\n        /* \"#utility.yul\":9863:9869   */\n      0x00\n        /* \"#utility.yul\":9871:9877   */\n      dup1\n        /* \"#utility.yul\":9879:9885   */\n      0x00\n        /* \"#utility.yul\":9887:9893   */\n      dup1\n        /* \"#utility.yul\":9895:9901   */\n      0x00\n        /* \"#utility.yul\":9944:9947   */\n      0x0120\n        /* \"#utility.yul\":9932:9941   */\n      dup11\n        /* \"#utility.yul\":9923:9930   */\n      dup13\n        /* \"#utility.yul\":9919:9942   */\n      sub\n        /* \"#utility.yul\":9915:9948   */\n      slt\n        /* \"#utility.yul\":9912:10032   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":9951:10030   */\n      tag_256\n      tag_104\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9912:10032   */\n    tag_255:\n        /* \"#utility.yul\":10071:10072   */\n      0x00\n        /* \"#utility.yul\":10096:10159   */\n      tag_257\n        /* \"#utility.yul\":10151:10158   */\n      dup13\n        /* \"#utility.yul\":10142:10148   */\n      dup3\n        /* \"#utility.yul\":10131:10140   */\n      dup14\n        /* \"#utility.yul\":10127:10149   */\n      add\n        /* \"#utility.yul\":10096:10159   */\n      tag_131\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":10086:10159   */\n      swap10\n      pop\n        /* \"#utility.yul\":10042:10169   */\n      pop\n        /* \"#utility.yul\":10208:10210   */\n      0x20\n        /* \"#utility.yul\":10234:10297   */\n      tag_258\n        /* \"#utility.yul\":10289:10296   */\n      dup13\n        /* \"#utility.yul\":10280:10286   */\n      dup3\n        /* \"#utility.yul\":10269:10278   */\n      dup14\n        /* \"#utility.yul\":10265:10287   */\n      add\n        /* \"#utility.yul\":10234:10297   */\n      tag_131\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":10224:10297   */\n      swap9\n      pop\n        /* \"#utility.yul\":10179:10307   */\n      pop\n        /* \"#utility.yul\":10346:10348   */\n      0x40\n        /* \"#utility.yul\":10372:10435   */\n      tag_259\n        /* \"#utility.yul\":10427:10434   */\n      dup13\n        /* \"#utility.yul\":10418:10424   */\n      dup3\n        /* \"#utility.yul\":10407:10416   */\n      dup14\n        /* \"#utility.yul\":10403:10425   */\n      add\n        /* \"#utility.yul\":10372:10435   */\n      tag_131\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10362:10435   */\n      swap8\n      pop\n        /* \"#utility.yul\":10317:10445   */\n      pop\n        /* \"#utility.yul\":10484:10486   */\n      0x60\n        /* \"#utility.yul\":10510:10573   */\n      tag_260\n        /* \"#utility.yul\":10565:10572   */\n      dup13\n        /* \"#utility.yul\":10556:10562   */\n      dup3\n        /* \"#utility.yul\":10545:10554   */\n      dup14\n        /* \"#utility.yul\":10541:10563   */\n      add\n        /* \"#utility.yul\":10510:10573   */\n      tag_131\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":10500:10573   */\n      swap7\n      pop\n        /* \"#utility.yul\":10455:10583   */\n      pop\n        /* \"#utility.yul\":10622:10625   */\n      0x80\n        /* \"#utility.yul\":10649:10712   */\n      tag_261\n        /* \"#utility.yul\":10704:10711   */\n      dup13\n        /* \"#utility.yul\":10695:10701   */\n      dup3\n        /* \"#utility.yul\":10684:10693   */\n      dup14\n        /* \"#utility.yul\":10680:10702   */\n      add\n        /* \"#utility.yul\":10649:10712   */\n      tag_131\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":10639:10712   */\n      swap6\n      pop\n        /* \"#utility.yul\":10593:10722   */\n      pop\n        /* \"#utility.yul\":10761:10764   */\n      0xa0\n        /* \"#utility.yul\":10788:10851   */\n      tag_262\n        /* \"#utility.yul\":10843:10850   */\n      dup13\n        /* \"#utility.yul\":10834:10840   */\n      dup3\n        /* \"#utility.yul\":10823:10832   */\n      dup14\n        /* \"#utility.yul\":10819:10841   */\n      add\n        /* \"#utility.yul\":10788:10851   */\n      tag_134\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":10778:10851   */\n      swap5\n      pop\n        /* \"#utility.yul\":10732:10861   */\n      pop\n        /* \"#utility.yul\":10900:10903   */\n      0xc0\n        /* \"#utility.yul\":10927:10990   */\n      tag_263\n        /* \"#utility.yul\":10982:10989   */\n      dup13\n        /* \"#utility.yul\":10973:10979   */\n      dup3\n        /* \"#utility.yul\":10962:10971   */\n      dup14\n        /* \"#utility.yul\":10958:10980   */\n      add\n        /* \"#utility.yul\":10927:10990   */\n      tag_134\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":10917:10990   */\n      swap4\n      pop\n        /* \"#utility.yul\":10871:11000   */\n      pop\n        /* \"#utility.yul\":11039:11042   */\n      0xe0\n        /* \"#utility.yul\":11066:11129   */\n      tag_264\n        /* \"#utility.yul\":11121:11128   */\n      dup13\n        /* \"#utility.yul\":11112:11118   */\n      dup3\n        /* \"#utility.yul\":11101:11110   */\n      dup14\n        /* \"#utility.yul\":11097:11119   */\n      add\n        /* \"#utility.yul\":11066:11129   */\n      tag_134\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":11056:11129   */\n      swap3\n      pop\n        /* \"#utility.yul\":11010:11139   */\n      pop\n        /* \"#utility.yul\":11178:11181   */\n      0x0100\n        /* \"#utility.yul\":11205:11268   */\n      tag_265\n        /* \"#utility.yul\":11260:11267   */\n      dup13\n        /* \"#utility.yul\":11251:11257   */\n      dup3\n        /* \"#utility.yul\":11240:11249   */\n      dup14\n        /* \"#utility.yul\":11236:11258   */\n      add\n        /* \"#utility.yul\":11205:11268   */\n      tag_134\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":11195:11268   */\n      swap2\n      pop\n        /* \"#utility.yul\":11149:11278   */\n      pop\n        /* \"#utility.yul\":9698:11285   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      jump\t// out\n        /* \"#utility.yul\":11291:11471   */\n    tag_135:\n        /* \"#utility.yul\":11339:11416   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11336:11337   */\n      0x00\n        /* \"#utility.yul\":11329:11417   */\n      mstore\n        /* \"#utility.yul\":11436:11440   */\n      0x11\n        /* \"#utility.yul\":11433:11434   */\n      0x04\n        /* \"#utility.yul\":11426:11441   */\n      mstore\n        /* \"#utility.yul\":11460:11464   */\n      0x24\n        /* \"#utility.yul\":11457:11458   */\n      0x00\n        /* \"#utility.yul\":11450:11465   */\n      revert\n        /* \"#utility.yul\":11477:11887   */\n    tag_83:\n        /* \"#utility.yul\":11517:11524   */\n      0x00\n        /* \"#utility.yul\":11540:11560   */\n      tag_268\n        /* \"#utility.yul\":11558:11559   */\n      dup3\n        /* \"#utility.yul\":11540:11560   */\n      tag_110\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":11535:11560   */\n      swap2\n      pop\n        /* \"#utility.yul\":11574:11594   */\n      tag_269\n        /* \"#utility.yul\":11592:11593   */\n      dup4\n        /* \"#utility.yul\":11574:11594   */\n      tag_110\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":11569:11594   */\n      swap3\n      pop\n        /* \"#utility.yul\":11629:11630   */\n      dup3\n        /* \"#utility.yul\":11626:11627   */\n      dup3\n        /* \"#utility.yul\":11622:11631   */\n      mul\n        /* \"#utility.yul\":11651:11681   */\n      tag_270\n        /* \"#utility.yul\":11669:11680   */\n      dup2\n        /* \"#utility.yul\":11651:11681   */\n      tag_110\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":11640:11681   */\n      swap2\n      pop\n        /* \"#utility.yul\":11830:11831   */\n      dup3\n        /* \"#utility.yul\":11821:11828   */\n      dup3\n        /* \"#utility.yul\":11817:11832   */\n      div\n        /* \"#utility.yul\":11814:11815   */\n      dup5\n        /* \"#utility.yul\":11811:11833   */\n      eq\n        /* \"#utility.yul\":11791:11792   */\n      dup4\n        /* \"#utility.yul\":11784:11793   */\n      iszero\n        /* \"#utility.yul\":11764:11847   */\n      or\n        /* \"#utility.yul\":11741:11880   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":11860:11878   */\n      tag_272\n      tag_135\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":11741:11880   */\n    tag_271:\n        /* \"#utility.yul\":11525:11887   */\n      pop\n        /* \"#utility.yul\":11477:11887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11893:12073   */\n    tag_136:\n        /* \"#utility.yul\":11941:12018   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11938:11939   */\n      0x00\n        /* \"#utility.yul\":11931:12019   */\n      mstore\n        /* \"#utility.yul\":12038:12042   */\n      0x12\n        /* \"#utility.yul\":12035:12036   */\n      0x04\n        /* \"#utility.yul\":12028:12043   */\n      mstore\n        /* \"#utility.yul\":12062:12066   */\n      0x24\n        /* \"#utility.yul\":12059:12060   */\n      0x00\n        /* \"#utility.yul\":12052:12067   */\n      revert\n        /* \"#utility.yul\":12079:12264   */\n    tag_86:\n        /* \"#utility.yul\":12119:12120   */\n      0x00\n        /* \"#utility.yul\":12136:12156   */\n      tag_275\n        /* \"#utility.yul\":12154:12155   */\n      dup3\n        /* \"#utility.yul\":12136:12156   */\n      tag_110\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":12131:12156   */\n      swap2\n      pop\n        /* \"#utility.yul\":12170:12190   */\n      tag_276\n        /* \"#utility.yul\":12188:12189   */\n      dup4\n        /* \"#utility.yul\":12170:12190   */\n      tag_110\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":12165:12190   */\n      swap3\n      pop\n        /* \"#utility.yul\":12209:12210   */\n      dup3\n        /* \"#utility.yul\":12199:12234   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":12214:12232   */\n      tag_278\n      tag_136\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":12199:12234   */\n    tag_277:\n        /* \"#utility.yul\":12256:12257   */\n      dup3\n        /* \"#utility.yul\":12253:12254   */\n      dup3\n        /* \"#utility.yul\":12249:12258   */\n      div\n        /* \"#utility.yul\":12244:12258   */\n      swap1\n      pop\n        /* \"#utility.yul\":12079:12264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12270:12461   */\n    tag_89:\n        /* \"#utility.yul\":12310:12313   */\n      0x00\n        /* \"#utility.yul\":12329:12349   */\n      tag_280\n        /* \"#utility.yul\":12347:12348   */\n      dup3\n        /* \"#utility.yul\":12329:12349   */\n      tag_110\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":12324:12349   */\n      swap2\n      pop\n        /* \"#utility.yul\":12363:12383   */\n      tag_281\n        /* \"#utility.yul\":12381:12382   */\n      dup4\n        /* \"#utility.yul\":12363:12383   */\n      tag_110\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":12358:12383   */\n      swap3\n      pop\n        /* \"#utility.yul\":12406:12407   */\n      dup3\n        /* \"#utility.yul\":12403:12404   */\n      dup3\n        /* \"#utility.yul\":12399:12408   */\n      add\n        /* \"#utility.yul\":12392:12408   */\n      swap1\n      pop\n        /* \"#utility.yul\":12427:12430   */\n      dup1\n        /* \"#utility.yul\":12424:12425   */\n      dup3\n        /* \"#utility.yul\":12421:12431   */\n      gt\n        /* \"#utility.yul\":12418:12454   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":12434:12452   */\n      tag_283\n      tag_135\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":12418:12454   */\n    tag_282:\n        /* \"#utility.yul\":12270:12461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12467:12636   */\n    tag_137:\n        /* \"#utility.yul\":12551:12562   */\n      0x00\n        /* \"#utility.yul\":12585:12591   */\n      dup3\n        /* \"#utility.yul\":12580:12583   */\n      dup3\n        /* \"#utility.yul\":12573:12592   */\n      mstore\n        /* \"#utility.yul\":12625:12629   */\n      0x20\n        /* \"#utility.yul\":12620:12623   */\n      dup3\n        /* \"#utility.yul\":12616:12630   */\n      add\n        /* \"#utility.yul\":12601:12630   */\n      swap1\n      pop\n        /* \"#utility.yul\":12467:12636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12642:12823   */\n    tag_138:\n        /* \"#utility.yul\":12782:12815   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12778:12779   */\n      0x00\n        /* \"#utility.yul\":12770:12776   */\n      dup3\n        /* \"#utility.yul\":12766:12780   */\n      add\n        /* \"#utility.yul\":12759:12816   */\n      mstore\n        /* \"#utility.yul\":12642:12823   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12829:13195   */\n    tag_139:\n        /* \"#utility.yul\":12971:12974   */\n      0x00\n        /* \"#utility.yul\":12992:13059   */\n      tag_287\n        /* \"#utility.yul\":13056:13058   */\n      0x1f\n        /* \"#utility.yul\":13051:13054   */\n      dup4\n        /* \"#utility.yul\":12992:13059   */\n      tag_137\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":12985:13059   */\n      swap2\n      pop\n        /* \"#utility.yul\":13068:13161   */\n      tag_288\n        /* \"#utility.yul\":13157:13160   */\n      dup3\n        /* \"#utility.yul\":13068:13161   */\n      tag_138\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":13186:13188   */\n      0x20\n        /* \"#utility.yul\":13181:13184   */\n      dup3\n        /* \"#utility.yul\":13177:13189   */\n      add\n        /* \"#utility.yul\":13170:13189   */\n      swap1\n      pop\n        /* \"#utility.yul\":12829:13195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13201:13620   */\n    tag_93:\n        /* \"#utility.yul\":13367:13371   */\n      0x00\n        /* \"#utility.yul\":13405:13407   */\n      0x20\n        /* \"#utility.yul\":13394:13403   */\n      dup3\n        /* \"#utility.yul\":13390:13408   */\n      add\n        /* \"#utility.yul\":13382:13408   */\n      swap1\n      pop\n        /* \"#utility.yul\":13454:13463   */\n      dup2\n        /* \"#utility.yul\":13448:13452   */\n      dup2\n        /* \"#utility.yul\":13444:13464   */\n      sub\n        /* \"#utility.yul\":13440:13441   */\n      0x00\n        /* \"#utility.yul\":13429:13438   */\n      dup4\n        /* \"#utility.yul\":13425:13442   */\n      add\n        /* \"#utility.yul\":13418:13465   */\n      mstore\n        /* \"#utility.yul\":13482:13613   */\n      tag_290\n        /* \"#utility.yul\":13608:13612   */\n      dup2\n        /* \"#utility.yul\":13482:13613   */\n      tag_139\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":13474:13613   */\n      swap1\n      pop\n        /* \"#utility.yul\":13201:13620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208ecce7068ac551b06790010a6380579a06b83d9d50a0cf58277b80203433fb7264736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_160": {
									"entryPoint": null,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060015f81905550610dd8806100245f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c80638bd16114116100645780638bd161141461011d5780638d7c16d21461014d578063953995ea1461016b578063ad17836114610189578063d0bcfc0c146101a757610091565b80634dd189d51461009557806356c022bb146100b3578063572b6c05146100d157806363dc4ef514610101575b5f80fd5b61009d6101c5565b6040516100aa919061077d565b60405180910390f35b6100bb6101ea565b6040516100c891906107b6565b60405180910390f35b6100eb60048036038101906100e691906107fd565b61020f565b6040516100f89190610842565b60405180910390f35b61011b600480360381019061011691906107fd565b610267565b005b6101376004803603810190610132919061088e565b6104b4565b60405161014491906108c8565b60405180910390f35b610155610638565b60405161016291906108c8565b60405180910390f35b61017361063e565b60405161018091906107b6565b60405180910390f35b610191610663565b60405161019e9190610901565b60405180910390f35b6101af610688565b6040516101bc919061093a565b60405180910390f35b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b61026f6106ad565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102fd9190610967565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103fb5760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610399573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103bd9190610967565b336040517f23295f0e0000000000000000000000000000000000000000000000000000000081526004016103f2929190610992565b60405180910390fd5b5f60015490505f6001819055505f8273ffffffffffffffffffffffffffffffffffffffff168260405161042d906109e6565b5f6040518083038185875af1925050503d805f8114610467576040519150601f19603f3d011682016040523d82523d5f602084013e61046c565b606091505b50509050806104a7576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50506104b16106fa565b50565b5f8060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610520573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105449190610a80565b5050509150505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fbbc0d26040518163ffffffff1660e01b815260040161012060405180830381865afa1580156105b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105da9190610b68565b50505050505050509050670de0b6b3a7640000828263ffffffff1664e8d4a510006106059190610c59565b61060f9190610c59565b6106199190610cc7565b843a6106259190610c59565b61062f9190610cf7565b92505050919050565b60015481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f54036106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e890610d84565b60405180910390fd5b60025f81905550565b60015f81905550565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61074561074061073b84610703565b610722565b610703565b9050919050565b5f6107568261072b565b9050919050565b5f6107678261074c565b9050919050565b6107778161075d565b82525050565b5f6020820190506107905f83018461076e565b92915050565b5f6107a082610703565b9050919050565b6107b081610796565b82525050565b5f6020820190506107c95f8301846107a7565b92915050565b5f80fd5b6107dc81610796565b81146107e6575f80fd5b50565b5f813590506107f7816107d3565b92915050565b5f60208284031215610812576108116107cf565b5b5f61081f848285016107e9565b91505092915050565b5f8115159050919050565b61083c81610828565b82525050565b5f6020820190506108555f830184610833565b92915050565b5f819050919050565b61086d8161085b565b8114610877575f80fd5b50565b5f8135905061088881610864565b92915050565b5f602082840312156108a3576108a26107cf565b5b5f6108b08482850161087a565b91505092915050565b6108c28161085b565b82525050565b5f6020820190506108db5f8301846108b9565b92915050565b5f6108eb8261074c565b9050919050565b6108fb816108e1565b82525050565b5f6020820190506109145f8301846108f2565b92915050565b5f6109248261074c565b9050919050565b6109348161091a565b82525050565b5f60208201905061094d5f83018461092b565b92915050565b5f81519050610961816107d3565b92915050565b5f6020828403121561097c5761097b6107cf565b5b5f61098984828501610953565b91505092915050565b5f6040820190506109a55f8301856107a7565b6109b260208301846107a7565b9392505050565b5f81905092915050565b50565b5f6109d15f836109b9565b91506109dc826109c3565b5f82019050919050565b5f6109f0826109c6565b9150819050919050565b5f69ffffffffffffffffffff82169050919050565b610a18816109fa565b8114610a22575f80fd5b50565b5f81519050610a3381610a0f565b92915050565b5f819050919050565b610a4b81610a39565b8114610a55575f80fd5b50565b5f81519050610a6681610a42565b92915050565b5f81519050610a7a81610864565b92915050565b5f805f805f60a08688031215610a9957610a986107cf565b5b5f610aa688828901610a25565b9550506020610ab788828901610a58565b9450506040610ac888828901610a6c565b9350506060610ad988828901610a6c565b9250506080610aea88828901610a25565b9150509295509295909350565b5f63ffffffff82169050919050565b610b0f81610af7565b8114610b19575f80fd5b50565b5f81519050610b2a81610b06565b92915050565b5f62ffffff82169050919050565b610b4781610b30565b8114610b51575f80fd5b50565b5f81519050610b6281610b3e565b92915050565b5f805f805f805f805f6101208a8c031215610b8657610b856107cf565b5b5f610b938c828d01610b1c565b9950506020610ba48c828d01610b1c565b9850506040610bb58c828d01610b1c565b9750506060610bc68c828d01610b1c565b9650506080610bd78c828d01610b1c565b95505060a0610be88c828d01610b54565b94505060c0610bf98c828d01610b54565b93505060e0610c0a8c828d01610b54565b925050610100610c1c8c828d01610b54565b9150509295985092959850929598565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c638261085b565b9150610c6e8361085b565b9250828202610c7c8161085b565b91508282048414831517610c9357610c92610c2c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610cd18261085b565b9150610cdc8361085b565b925082610cec57610ceb610c9a565b5b828204905092915050565b5f610d018261085b565b9150610d0c8361085b565b9250828201905080821115610d2457610d23610c2c565b5b92915050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610d6e601f83610d2a565b9150610d7982610d3a565b602082019050919050565b5f6020820190508181035f830152610d9b81610d62565b905091905056fea26469706673582212208ecce7068ac551b06790010a6380579a06b83d9d50a0cf58277b80203433fb7264736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH2 0xDD8 DUP1 PUSH2 0x24 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BD16114 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8BD16114 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x8D7C16D2 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x953995EA EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xAD178361 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xD0BCFC0C EQ PUSH2 0x1A7 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x4DD189D5 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x56C022BB EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x63DC4EF5 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x893D20E8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3FB JUMPI PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x893D20E8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x399 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD PUSH32 0x23295F0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F2 SWAP3 SWAP2 SWAP1 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x42D SWAP1 PUSH2 0x9E6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x46C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x4B1 PUSH2 0x6FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x520 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x544 SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5FBBC0D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0xB68 JUMP JUMPDEST POP POP POP POP POP POP POP POP SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 DUP3 PUSH4 0xFFFFFFFF AND PUSH5 0xE8D4A51000 PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0x60F SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0x619 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST DUP5 GASPRICE PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0x62F SWAP2 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x6F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E8 SWAP1 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x745 PUSH2 0x740 PUSH2 0x73B DUP5 PUSH2 0x703 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x756 DUP3 PUSH2 0x72B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x767 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x777 DUP2 PUSH2 0x75D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x790 PUSH0 DUP4 ADD DUP5 PUSH2 0x76E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7A0 DUP3 PUSH2 0x703 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B0 DUP2 PUSH2 0x796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x7A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7DC DUP2 PUSH2 0x796 JUMP JUMPDEST DUP2 EQ PUSH2 0x7E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7F7 DUP2 PUSH2 0x7D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x812 JUMPI PUSH2 0x811 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x81F DUP5 DUP3 DUP6 ADD PUSH2 0x7E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83C DUP2 PUSH2 0x828 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x855 PUSH0 DUP4 ADD DUP5 PUSH2 0x833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86D DUP2 PUSH2 0x85B JUMP JUMPDEST DUP2 EQ PUSH2 0x877 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x888 DUP2 PUSH2 0x864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A3 JUMPI PUSH2 0x8A2 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8B0 DUP5 DUP3 DUP6 ADD PUSH2 0x87A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C2 DUP2 PUSH2 0x85B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8DB PUSH0 DUP4 ADD DUP5 PUSH2 0x8B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8EB DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FB DUP2 PUSH2 0x8E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x914 PUSH0 DUP4 ADD DUP5 PUSH2 0x8F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x924 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x934 DUP2 PUSH2 0x91A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94D PUSH0 DUP4 ADD DUP5 PUSH2 0x92B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x961 DUP2 PUSH2 0x7D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x989 DUP5 DUP3 DUP6 ADD PUSH2 0x953 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9A5 PUSH0 DUP4 ADD DUP6 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x9B2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x9D1 PUSH0 DUP4 PUSH2 0x9B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x9DC DUP3 PUSH2 0x9C3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9F0 DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA18 DUP2 PUSH2 0x9FA JUMP JUMPDEST DUP2 EQ PUSH2 0xA22 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA33 DUP2 PUSH2 0xA0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4B DUP2 PUSH2 0xA39 JUMP JUMPDEST DUP2 EQ PUSH2 0xA55 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA66 DUP2 PUSH2 0xA42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA7A DUP2 PUSH2 0x864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA99 JUMPI PUSH2 0xA98 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAA6 DUP9 DUP3 DUP10 ADD PUSH2 0xA25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xAB7 DUP9 DUP3 DUP10 ADD PUSH2 0xA58 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xAC8 DUP9 DUP3 DUP10 ADD PUSH2 0xA6C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xAD9 DUP9 DUP3 DUP10 ADD PUSH2 0xA6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xAEA DUP9 DUP3 DUP10 ADD PUSH2 0xA25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0F DUP2 PUSH2 0xAF7 JUMP JUMPDEST DUP2 EQ PUSH2 0xB19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB2A DUP2 PUSH2 0xB06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB47 DUP2 PUSH2 0xB30 JUMP JUMPDEST DUP2 EQ PUSH2 0xB51 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB62 DUP2 PUSH2 0xB3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0xB86 JUMPI PUSH2 0xB85 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB93 DUP13 DUP3 DUP14 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0xBA4 DUP13 DUP3 DUP14 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0xBB5 DUP13 DUP3 DUP14 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0xBC6 DUP13 DUP3 DUP14 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0xBD7 DUP13 DUP3 DUP14 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0xBE8 DUP13 DUP3 DUP14 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0xBF9 DUP13 DUP3 DUP14 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 PUSH2 0xC0A DUP13 DUP3 DUP14 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH2 0xC1C DUP13 DUP3 DUP14 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC63 DUP3 PUSH2 0x85B JUMP JUMPDEST SWAP2 POP PUSH2 0xC6E DUP4 PUSH2 0x85B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC7C DUP2 PUSH2 0x85B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC93 JUMPI PUSH2 0xC92 PUSH2 0xC2C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCD1 DUP3 PUSH2 0x85B JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP4 PUSH2 0x85B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0xC9A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD01 DUP3 PUSH2 0x85B JUMP JUMPDEST SWAP2 POP PUSH2 0xD0C DUP4 PUSH2 0x85B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD24 JUMPI PUSH2 0xD23 PUSH2 0xC2C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD6E PUSH1 0x1F DUP4 PUSH2 0xD2A JUMP JUMPDEST SWAP2 POP PUSH2 0xD79 DUP3 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xD62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xCC 0xE7 MOD DUP11 0xC5 MLOAD 0xB0 PUSH8 0x90010A6380579A06 0xB8 RETURNDATASIZE SWAP14 POP LOG0 0xCF PC 0x27 PUSH28 0x80203433FB7264736F6C634300081500330000000000000000000000 ",
							"sourceMap": "1220:9415:7:-:0;;;;;;;;;;;;;1716:1:2;1821:7;:22;;;;1220:9415:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Bankroll_959": {
									"entryPoint": 1672,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ChainLinkVRF_945": {
									"entryPoint": 1598,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@IChainLinkVRF_956": {
									"entryPoint": 453,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LINK_ETH_FEED_953": {
									"entryPoint": 1635,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VRFFees_943": {
									"entryPoint": 1592,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_194": {
									"entryPoint": 1786,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_186": {
									"entryPoint": 1709,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_trustedForwarder_947": {
									"entryPoint": 490,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getVRFFee_1208": {
									"entryPoint": 1204,
									"id": 1208,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isTrustedForwarder_1644": {
									"entryPoint": 527,
									"id": 1644,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFees_1334": {
									"entryPoint": 615,
									"id": 1334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 2648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24_fromMemory": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 2597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32t_uint32t_uint32t_uint32t_uint32t_uint24t_uint24t_uint24t_uint24_fromMemory": {
									"entryPoint": 2920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 9
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack": {
									"entryPoint": 2290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IBankRoll_$911_to_t_address_fromStack": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IVRFCoordinatorV2_$935_to_t_address_fromStack": {
									"entryPoint": 1902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": 2305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBankRoll_$911__to_t_address__fromStack_reversed": {
									"entryPoint": 2362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IVRFCoordinatorV2_$935__to_t_address__fromStack_reversed": {
									"entryPoint": 1917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 2617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 2864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorV3Interface_$45_to_t_address": {
									"entryPoint": 2273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBankRoll_$911_to_t_address": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IVRFCoordinatorV2_$935_to_t_address": {
									"entryPoint": 1885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3116,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 2499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 2878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 2822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13623:8",
										"nodeType": "YulBlock",
										"src": "0:13623:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:8",
													"nodeType": "YulBlock",
													"src": "52:81:8",
													"statements": [
														{
															"nativeSrc": "62:65:8",
															"nodeType": "YulAssignment",
															"src": "62:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:8",
																		"nodeType": "YulLiteral",
																		"src": "84:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:8"
																},
																"nativeSrc": "73:54:8",
																"nodeType": "YulFunctionCall",
																"src": "73:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:8",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:8",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:126:8"
											},
											{
												"body": {
													"nativeSrc": "171:28:8",
													"nodeType": "YulBlock",
													"src": "171:28:8",
													"statements": [
														{
															"nativeSrc": "181:12:8",
															"nodeType": "YulAssignment",
															"src": "181:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:8",
																"nodeType": "YulIdentifier",
																"src": "188:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:8",
														"nodeType": "YulTypedName",
														"src": "157:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:8",
														"nodeType": "YulTypedName",
														"src": "167:3:8",
														"type": ""
													}
												],
												"src": "139:60:8"
											},
											{
												"body": {
													"nativeSrc": "265:82:8",
													"nodeType": "YulBlock",
													"src": "265:82:8",
													"statements": [
														{
															"nativeSrc": "275:66:8",
															"nodeType": "YulAssignment",
															"src": "275:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:8"
																				},
																				"nativeSrc": "315:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:8"
																		},
																		"nativeSrc": "306:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:8"
																},
																"nativeSrc": "288:53:8",
																"nodeType": "YulFunctionCall",
																"src": "288:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:8",
														"nodeType": "YulTypedName",
														"src": "245:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:8",
														"nodeType": "YulTypedName",
														"src": "255:9:8",
														"type": ""
													}
												],
												"src": "205:142:8"
											},
											{
												"body": {
													"nativeSrc": "413:66:8",
													"nodeType": "YulBlock",
													"src": "413:66:8",
													"statements": [
														{
															"nativeSrc": "423:50:8",
															"nodeType": "YulAssignment",
															"src": "423:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:8"
																},
																"nativeSrc": "436:37:8",
																"nodeType": "YulFunctionCall",
																"src": "436:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:8",
														"nodeType": "YulTypedName",
														"src": "393:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:8",
														"nodeType": "YulTypedName",
														"src": "403:9:8",
														"type": ""
													}
												],
												"src": "353:126:8"
											},
											{
												"body": {
													"nativeSrc": "570:66:8",
													"nodeType": "YulBlock",
													"src": "570:66:8",
													"statements": [
														{
															"nativeSrc": "580:50:8",
															"nodeType": "YulAssignment",
															"src": "580:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "624:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "624:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "593:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "593:30:8"
																},
																"nativeSrc": "593:37:8",
																"nodeType": "YulFunctionCall",
																"src": "593:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "580:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "580:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IVRFCoordinatorV2_$935_to_t_address",
												"nativeSrc": "485:151:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "550:5:8",
														"nodeType": "YulTypedName",
														"src": "550:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "560:9:8",
														"nodeType": "YulTypedName",
														"src": "560:9:8",
														"type": ""
													}
												],
												"src": "485:151:8"
											},
											{
												"body": {
													"nativeSrc": "732:91:8",
													"nodeType": "YulBlock",
													"src": "732:91:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "749:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "749:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "810:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "810:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IVRFCoordinatorV2_$935_to_t_address",
																			"nativeSrc": "754:55:8",
																			"nodeType": "YulIdentifier",
																			"src": "754:55:8"
																		},
																		"nativeSrc": "754:62:8",
																		"nodeType": "YulFunctionCall",
																		"src": "754:62:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "742:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "742:6:8"
																},
																"nativeSrc": "742:75:8",
																"nodeType": "YulFunctionCall",
																"src": "742:75:8"
															},
															"nativeSrc": "742:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "742:75:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IVRFCoordinatorV2_$935_to_t_address_fromStack",
												"nativeSrc": "642:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:8",
														"nodeType": "YulTypedName",
														"src": "720:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:8",
														"nodeType": "YulTypedName",
														"src": "727:3:8",
														"type": ""
													}
												],
												"src": "642:181:8"
											},
											{
												"body": {
													"nativeSrc": "952:149:8",
													"nodeType": "YulBlock",
													"src": "952:149:8",
													"statements": [
														{
															"nativeSrc": "962:26:8",
															"nodeType": "YulAssignment",
															"src": "962:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "974:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "974:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "985:2:8",
																		"nodeType": "YulLiteral",
																		"src": "985:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "970:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "970:3:8"
																},
																"nativeSrc": "970:18:8",
																"nodeType": "YulFunctionCall",
																"src": "970:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "962:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "962:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1067:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1067:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1080:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1080:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1091:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1091:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1076:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1076:3:8"
																		},
																		"nativeSrc": "1076:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1076:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IVRFCoordinatorV2_$935_to_t_address_fromStack",
																	"nativeSrc": "998:68:8",
																	"nodeType": "YulIdentifier",
																	"src": "998:68:8"
																},
																"nativeSrc": "998:96:8",
																"nodeType": "YulFunctionCall",
																"src": "998:96:8"
															},
															"nativeSrc": "998:96:8",
															"nodeType": "YulExpressionStatement",
															"src": "998:96:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IVRFCoordinatorV2_$935__to_t_address__fromStack_reversed",
												"nativeSrc": "829:272:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "924:9:8",
														"nodeType": "YulTypedName",
														"src": "924:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "936:6:8",
														"nodeType": "YulTypedName",
														"src": "936:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "947:4:8",
														"nodeType": "YulTypedName",
														"src": "947:4:8",
														"type": ""
													}
												],
												"src": "829:272:8"
											},
											{
												"body": {
													"nativeSrc": "1152:51:8",
													"nodeType": "YulBlock",
													"src": "1152:51:8",
													"statements": [
														{
															"nativeSrc": "1162:35:8",
															"nodeType": "YulAssignment",
															"src": "1162:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1191:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1191:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1173:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1173:17:8"
																},
																"nativeSrc": "1173:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1173:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1162:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1162:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1107:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1134:5:8",
														"nodeType": "YulTypedName",
														"src": "1134:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1144:7:8",
														"nodeType": "YulTypedName",
														"src": "1144:7:8",
														"type": ""
													}
												],
												"src": "1107:96:8"
											},
											{
												"body": {
													"nativeSrc": "1274:53:8",
													"nodeType": "YulBlock",
													"src": "1274:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1291:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1291:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1314:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1314:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1296:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "1296:17:8"
																		},
																		"nativeSrc": "1296:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1296:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1284:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1284:6:8"
																},
																"nativeSrc": "1284:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1284:37:8"
															},
															"nativeSrc": "1284:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1284:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1209:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1262:5:8",
														"nodeType": "YulTypedName",
														"src": "1262:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1269:3:8",
														"nodeType": "YulTypedName",
														"src": "1269:3:8",
														"type": ""
													}
												],
												"src": "1209:118:8"
											},
											{
												"body": {
													"nativeSrc": "1431:124:8",
													"nodeType": "YulBlock",
													"src": "1431:124:8",
													"statements": [
														{
															"nativeSrc": "1441:26:8",
															"nodeType": "YulAssignment",
															"src": "1441:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1453:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1453:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1464:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1464:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1449:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1449:3:8"
																},
																"nativeSrc": "1449:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1449:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1441:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1441:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1521:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1521:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1534:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1534:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1545:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1545:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1530:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1530:3:8"
																		},
																		"nativeSrc": "1530:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1530:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1477:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1477:43:8"
																},
																"nativeSrc": "1477:71:8",
																"nodeType": "YulFunctionCall",
																"src": "1477:71:8"
															},
															"nativeSrc": "1477:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "1477:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1333:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1403:9:8",
														"nodeType": "YulTypedName",
														"src": "1403:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1415:6:8",
														"nodeType": "YulTypedName",
														"src": "1415:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1426:4:8",
														"nodeType": "YulTypedName",
														"src": "1426:4:8",
														"type": ""
													}
												],
												"src": "1333:222:8"
											},
											{
												"body": {
													"nativeSrc": "1601:35:8",
													"nodeType": "YulBlock",
													"src": "1601:35:8",
													"statements": [
														{
															"nativeSrc": "1611:19:8",
															"nodeType": "YulAssignment",
															"src": "1611:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1627:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1627:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1621:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1621:5:8"
																},
																"nativeSrc": "1621:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1621:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1611:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1611:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1561:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1594:6:8",
														"nodeType": "YulTypedName",
														"src": "1594:6:8",
														"type": ""
													}
												],
												"src": "1561:75:8"
											},
											{
												"body": {
													"nativeSrc": "1731:28:8",
													"nodeType": "YulBlock",
													"src": "1731:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1748:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1748:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1751:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1751:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1741:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1741:6:8"
																},
																"nativeSrc": "1741:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1741:12:8"
															},
															"nativeSrc": "1741:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1741:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1642:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1642:117:8"
											},
											{
												"body": {
													"nativeSrc": "1854:28:8",
													"nodeType": "YulBlock",
													"src": "1854:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1871:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1871:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1874:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1874:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1864:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1864:6:8"
																},
																"nativeSrc": "1864:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1864:12:8"
															},
															"nativeSrc": "1864:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1864:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1765:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1765:117:8"
											},
											{
												"body": {
													"nativeSrc": "1931:79:8",
													"nodeType": "YulBlock",
													"src": "1931:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1988:16:8",
																"nodeType": "YulBlock",
																"src": "1988:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1997:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1997:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2000:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2000:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1990:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1990:6:8"
																			},
																			"nativeSrc": "1990:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1990:12:8"
																		},
																		"nativeSrc": "1990:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1990:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1954:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1954:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1979:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1979:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1961:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1961:17:8"
																				},
																				"nativeSrc": "1961:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1961:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1951:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1951:2:8"
																		},
																		"nativeSrc": "1951:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1951:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:8"
																},
																"nativeSrc": "1944:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1944:43:8"
															},
															"nativeSrc": "1941:63:8",
															"nodeType": "YulIf",
															"src": "1941:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1888:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1924:5:8",
														"nodeType": "YulTypedName",
														"src": "1924:5:8",
														"type": ""
													}
												],
												"src": "1888:122:8"
											},
											{
												"body": {
													"nativeSrc": "2068:87:8",
													"nodeType": "YulBlock",
													"src": "2068:87:8",
													"statements": [
														{
															"nativeSrc": "2078:29:8",
															"nodeType": "YulAssignment",
															"src": "2078:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2100:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2100:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2087:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2087:12:8"
																},
																"nativeSrc": "2087:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2087:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2078:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2078:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2143:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2143:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2116:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2116:26:8"
																},
																"nativeSrc": "2116:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2116:33:8"
															},
															"nativeSrc": "2116:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2116:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2016:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2046:6:8",
														"nodeType": "YulTypedName",
														"src": "2046:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2054:3:8",
														"nodeType": "YulTypedName",
														"src": "2054:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2062:5:8",
														"nodeType": "YulTypedName",
														"src": "2062:5:8",
														"type": ""
													}
												],
												"src": "2016:139:8"
											},
											{
												"body": {
													"nativeSrc": "2227:263:8",
													"nodeType": "YulBlock",
													"src": "2227:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2273:83:8",
																"nodeType": "YulBlock",
																"src": "2273:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2275:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2275:77:8"
																			},
																			"nativeSrc": "2275:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2275:79:8"
																		},
																		"nativeSrc": "2275:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2248:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2257:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2244:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:8"
																		},
																		"nativeSrc": "2244:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2269:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2240:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:8"
																},
																"nativeSrc": "2240:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2240:32:8"
															},
															"nativeSrc": "2237:119:8",
															"nodeType": "YulIf",
															"src": "2237:119:8"
														},
														{
															"nativeSrc": "2366:117:8",
															"nodeType": "YulBlock",
															"src": "2366:117:8",
															"statements": [
																{
																	"nativeSrc": "2381:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2381:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2395:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2395:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2385:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2385:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2410:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2410:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2445:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2445:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2456:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2456:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2441:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2441:3:8"
																				},
																				"nativeSrc": "2441:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2441:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2465:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2465:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2420:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2420:20:8"
																		},
																		"nativeSrc": "2420:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2420:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2410:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2410:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2161:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2197:9:8",
														"nodeType": "YulTypedName",
														"src": "2197:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2208:7:8",
														"nodeType": "YulTypedName",
														"src": "2208:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2220:6:8",
														"nodeType": "YulTypedName",
														"src": "2220:6:8",
														"type": ""
													}
												],
												"src": "2161:329:8"
											},
											{
												"body": {
													"nativeSrc": "2538:48:8",
													"nodeType": "YulBlock",
													"src": "2538:48:8",
													"statements": [
														{
															"nativeSrc": "2548:32:8",
															"nodeType": "YulAssignment",
															"src": "2548:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2573:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2573:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2566:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2566:6:8"
																		},
																		"nativeSrc": "2566:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2566:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2559:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2559:6:8"
																},
																"nativeSrc": "2559:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2559:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2548:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2548:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2496:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2520:5:8",
														"nodeType": "YulTypedName",
														"src": "2520:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2530:7:8",
														"nodeType": "YulTypedName",
														"src": "2530:7:8",
														"type": ""
													}
												],
												"src": "2496:90:8"
											},
											{
												"body": {
													"nativeSrc": "2651:50:8",
													"nodeType": "YulBlock",
													"src": "2651:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2668:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2668:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2688:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2688:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2673:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "2673:14:8"
																		},
																		"nativeSrc": "2673:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2673:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2661:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2661:6:8"
																},
																"nativeSrc": "2661:34:8",
																"nodeType": "YulFunctionCall",
																"src": "2661:34:8"
															},
															"nativeSrc": "2661:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "2661:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2592:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2639:5:8",
														"nodeType": "YulTypedName",
														"src": "2639:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2646:3:8",
														"nodeType": "YulTypedName",
														"src": "2646:3:8",
														"type": ""
													}
												],
												"src": "2592:109:8"
											},
											{
												"body": {
													"nativeSrc": "2799:118:8",
													"nodeType": "YulBlock",
													"src": "2799:118:8",
													"statements": [
														{
															"nativeSrc": "2809:26:8",
															"nodeType": "YulAssignment",
															"src": "2809:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2821:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2821:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2832:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2832:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2817:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2817:3:8"
																},
																"nativeSrc": "2817:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2817:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2809:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2883:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2883:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2896:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2896:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2907:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2907:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2892:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2892:3:8"
																		},
																		"nativeSrc": "2892:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2845:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "2845:37:8"
																},
																"nativeSrc": "2845:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2845:65:8"
															},
															"nativeSrc": "2845:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "2845:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2707:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2771:9:8",
														"nodeType": "YulTypedName",
														"src": "2771:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2783:6:8",
														"nodeType": "YulTypedName",
														"src": "2783:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2794:4:8",
														"nodeType": "YulTypedName",
														"src": "2794:4:8",
														"type": ""
													}
												],
												"src": "2707:210:8"
											},
											{
												"body": {
													"nativeSrc": "2968:32:8",
													"nodeType": "YulBlock",
													"src": "2968:32:8",
													"statements": [
														{
															"nativeSrc": "2978:16:8",
															"nodeType": "YulAssignment",
															"src": "2978:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2989:5:8",
																"nodeType": "YulIdentifier",
																"src": "2989:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2978:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2978:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2923:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2950:5:8",
														"nodeType": "YulTypedName",
														"src": "2950:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2960:7:8",
														"nodeType": "YulTypedName",
														"src": "2960:7:8",
														"type": ""
													}
												],
												"src": "2923:77:8"
											},
											{
												"body": {
													"nativeSrc": "3049:79:8",
													"nodeType": "YulBlock",
													"src": "3049:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3106:16:8",
																"nodeType": "YulBlock",
																"src": "3106:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3115:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3115:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3118:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3118:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3108:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3108:6:8"
																			},
																			"nativeSrc": "3108:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3108:12:8"
																		},
																		"nativeSrc": "3108:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3108:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3072:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3072:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3097:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3097:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3079:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3079:17:8"
																				},
																				"nativeSrc": "3079:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3079:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3069:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3069:2:8"
																		},
																		"nativeSrc": "3069:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3069:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3062:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3062:6:8"
																},
																"nativeSrc": "3062:43:8",
																"nodeType": "YulFunctionCall",
																"src": "3062:43:8"
															},
															"nativeSrc": "3059:63:8",
															"nodeType": "YulIf",
															"src": "3059:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3006:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3042:5:8",
														"nodeType": "YulTypedName",
														"src": "3042:5:8",
														"type": ""
													}
												],
												"src": "3006:122:8"
											},
											{
												"body": {
													"nativeSrc": "3186:87:8",
													"nodeType": "YulBlock",
													"src": "3186:87:8",
													"statements": [
														{
															"nativeSrc": "3196:29:8",
															"nodeType": "YulAssignment",
															"src": "3196:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3218:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3218:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3205:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3205:12:8"
																},
																"nativeSrc": "3205:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3205:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3196:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3196:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3261:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3261:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3234:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3234:26:8"
																},
																"nativeSrc": "3234:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3234:33:8"
															},
															"nativeSrc": "3234:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3234:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3134:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3164:6:8",
														"nodeType": "YulTypedName",
														"src": "3164:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3172:3:8",
														"nodeType": "YulTypedName",
														"src": "3172:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3180:5:8",
														"nodeType": "YulTypedName",
														"src": "3180:5:8",
														"type": ""
													}
												],
												"src": "3134:139:8"
											},
											{
												"body": {
													"nativeSrc": "3345:263:8",
													"nodeType": "YulBlock",
													"src": "3345:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3391:83:8",
																"nodeType": "YulBlock",
																"src": "3391:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3393:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3393:77:8"
																			},
																			"nativeSrc": "3393:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3393:79:8"
																		},
																		"nativeSrc": "3393:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3393:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3366:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3366:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3375:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3375:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3362:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3362:3:8"
																		},
																		"nativeSrc": "3362:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3362:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3358:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3358:3:8"
																},
																"nativeSrc": "3358:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3358:32:8"
															},
															"nativeSrc": "3355:119:8",
															"nodeType": "YulIf",
															"src": "3355:119:8"
														},
														{
															"nativeSrc": "3484:117:8",
															"nodeType": "YulBlock",
															"src": "3484:117:8",
															"statements": [
																{
																	"nativeSrc": "3499:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3499:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3513:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3513:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3503:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3503:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3528:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3528:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3563:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3563:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3574:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3574:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3559:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3559:3:8"
																				},
																				"nativeSrc": "3559:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3559:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3583:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3583:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3538:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3538:20:8"
																		},
																		"nativeSrc": "3538:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3538:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3528:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3528:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3279:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3315:9:8",
														"nodeType": "YulTypedName",
														"src": "3315:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3326:7:8",
														"nodeType": "YulTypedName",
														"src": "3326:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3338:6:8",
														"nodeType": "YulTypedName",
														"src": "3338:6:8",
														"type": ""
													}
												],
												"src": "3279:329:8"
											},
											{
												"body": {
													"nativeSrc": "3679:53:8",
													"nodeType": "YulBlock",
													"src": "3679:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3696:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3696:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3719:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3719:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3701:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3701:17:8"
																		},
																		"nativeSrc": "3701:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3701:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3689:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3689:6:8"
																},
																"nativeSrc": "3689:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3689:37:8"
															},
															"nativeSrc": "3689:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3689:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3614:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3667:5:8",
														"nodeType": "YulTypedName",
														"src": "3667:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3674:3:8",
														"nodeType": "YulTypedName",
														"src": "3674:3:8",
														"type": ""
													}
												],
												"src": "3614:118:8"
											},
											{
												"body": {
													"nativeSrc": "3836:124:8",
													"nodeType": "YulBlock",
													"src": "3836:124:8",
													"statements": [
														{
															"nativeSrc": "3846:26:8",
															"nodeType": "YulAssignment",
															"src": "3846:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3858:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3858:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3869:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3869:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3854:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3854:3:8"
																},
																"nativeSrc": "3854:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3854:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3846:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3846:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3926:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3926:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3939:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3939:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3950:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3950:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3935:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3935:3:8"
																		},
																		"nativeSrc": "3935:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3935:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3882:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3882:43:8"
																},
																"nativeSrc": "3882:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3882:71:8"
															},
															"nativeSrc": "3882:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3882:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3738:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3808:9:8",
														"nodeType": "YulTypedName",
														"src": "3808:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3820:6:8",
														"nodeType": "YulTypedName",
														"src": "3820:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3831:4:8",
														"nodeType": "YulTypedName",
														"src": "3831:4:8",
														"type": ""
													}
												],
												"src": "3738:222:8"
											},
											{
												"body": {
													"nativeSrc": "4054:66:8",
													"nodeType": "YulBlock",
													"src": "4054:66:8",
													"statements": [
														{
															"nativeSrc": "4064:50:8",
															"nodeType": "YulAssignment",
															"src": "4064:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4108:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4108:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4077:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4077:30:8"
																},
																"nativeSrc": "4077:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4077:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4064:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4064:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
												"nativeSrc": "3966:154:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4034:5:8",
														"nodeType": "YulTypedName",
														"src": "4034:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4044:9:8",
														"nodeType": "YulTypedName",
														"src": "4044:9:8",
														"type": ""
													}
												],
												"src": "3966:154:8"
											},
											{
												"body": {
													"nativeSrc": "4219:94:8",
													"nodeType": "YulBlock",
													"src": "4219:94:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4236:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4300:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4300:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
																			"nativeSrc": "4241:58:8",
																			"nodeType": "YulIdentifier",
																			"src": "4241:58:8"
																		},
																		"nativeSrc": "4241:65:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4241:65:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4229:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:8"
																},
																"nativeSrc": "4229:78:8",
																"nodeType": "YulFunctionCall",
																"src": "4229:78:8"
															},
															"nativeSrc": "4229:78:8",
															"nodeType": "YulExpressionStatement",
															"src": "4229:78:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
												"nativeSrc": "4126:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4207:5:8",
														"nodeType": "YulTypedName",
														"src": "4207:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4214:3:8",
														"nodeType": "YulTypedName",
														"src": "4214:3:8",
														"type": ""
													}
												],
												"src": "4126:187:8"
											},
											{
												"body": {
													"nativeSrc": "4445:152:8",
													"nodeType": "YulBlock",
													"src": "4445:152:8",
													"statements": [
														{
															"nativeSrc": "4455:26:8",
															"nodeType": "YulAssignment",
															"src": "4455:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4467:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4467:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4478:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4478:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4463:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4463:3:8"
																},
																"nativeSrc": "4463:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4463:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4455:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4455:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4563:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4563:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4576:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4576:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4587:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4587:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4572:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4572:3:8"
																		},
																		"nativeSrc": "4572:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4572:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
																	"nativeSrc": "4491:71:8",
																	"nodeType": "YulIdentifier",
																	"src": "4491:71:8"
																},
																"nativeSrc": "4491:99:8",
																"nodeType": "YulFunctionCall",
																"src": "4491:99:8"
															},
															"nativeSrc": "4491:99:8",
															"nodeType": "YulExpressionStatement",
															"src": "4491:99:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "4319:278:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4417:9:8",
														"nodeType": "YulTypedName",
														"src": "4417:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4429:6:8",
														"nodeType": "YulTypedName",
														"src": "4429:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4440:4:8",
														"nodeType": "YulTypedName",
														"src": "4440:4:8",
														"type": ""
													}
												],
												"src": "4319:278:8"
											},
											{
												"body": {
													"nativeSrc": "4680:66:8",
													"nodeType": "YulBlock",
													"src": "4680:66:8",
													"statements": [
														{
															"nativeSrc": "4690:50:8",
															"nodeType": "YulAssignment",
															"src": "4690:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4734:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4734:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4703:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4703:30:8"
																},
																"nativeSrc": "4703:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4703:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4690:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4690:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBankRoll_$911_to_t_address",
												"nativeSrc": "4603:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4660:5:8",
														"nodeType": "YulTypedName",
														"src": "4660:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4670:9:8",
														"nodeType": "YulTypedName",
														"src": "4670:9:8",
														"type": ""
													}
												],
												"src": "4603:143:8"
											},
											{
												"body": {
													"nativeSrc": "4834:83:8",
													"nodeType": "YulBlock",
													"src": "4834:83:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4851:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4851:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4904:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4904:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBankRoll_$911_to_t_address",
																			"nativeSrc": "4856:47:8",
																			"nodeType": "YulIdentifier",
																			"src": "4856:47:8"
																		},
																		"nativeSrc": "4856:54:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4856:54:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4844:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4844:6:8"
																},
																"nativeSrc": "4844:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4844:67:8"
															},
															"nativeSrc": "4844:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4844:67:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBankRoll_$911_to_t_address_fromStack",
												"nativeSrc": "4752:165:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4822:5:8",
														"nodeType": "YulTypedName",
														"src": "4822:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4829:3:8",
														"nodeType": "YulTypedName",
														"src": "4829:3:8",
														"type": ""
													}
												],
												"src": "4752:165:8"
											},
											{
												"body": {
													"nativeSrc": "5038:141:8",
													"nodeType": "YulBlock",
													"src": "5038:141:8",
													"statements": [
														{
															"nativeSrc": "5048:26:8",
															"nodeType": "YulAssignment",
															"src": "5048:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5060:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5060:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5071:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5071:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5056:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5056:3:8"
																},
																"nativeSrc": "5056:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5056:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5048:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5048:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5145:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5145:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5158:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5158:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5169:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5169:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5154:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5154:3:8"
																		},
																		"nativeSrc": "5154:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5154:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBankRoll_$911_to_t_address_fromStack",
																	"nativeSrc": "5084:60:8",
																	"nodeType": "YulIdentifier",
																	"src": "5084:60:8"
																},
																"nativeSrc": "5084:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5084:88:8"
															},
															"nativeSrc": "5084:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5084:88:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBankRoll_$911__to_t_address__fromStack_reversed",
												"nativeSrc": "4923:256:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5010:9:8",
														"nodeType": "YulTypedName",
														"src": "5010:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5022:6:8",
														"nodeType": "YulTypedName",
														"src": "5022:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5033:4:8",
														"nodeType": "YulTypedName",
														"src": "5033:4:8",
														"type": ""
													}
												],
												"src": "4923:256:8"
											},
											{
												"body": {
													"nativeSrc": "5248:80:8",
													"nodeType": "YulBlock",
													"src": "5248:80:8",
													"statements": [
														{
															"nativeSrc": "5258:22:8",
															"nodeType": "YulAssignment",
															"src": "5258:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5273:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5273:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5267:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5267:5:8"
																},
																"nativeSrc": "5267:13:8",
																"nodeType": "YulFunctionCall",
																"src": "5267:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5258:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5258:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5316:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5316:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "5289:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "5289:26:8"
																},
																"nativeSrc": "5289:33:8",
																"nodeType": "YulFunctionCall",
																"src": "5289:33:8"
															},
															"nativeSrc": "5289:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "5289:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "5185:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5226:6:8",
														"nodeType": "YulTypedName",
														"src": "5226:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5234:3:8",
														"nodeType": "YulTypedName",
														"src": "5234:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5242:5:8",
														"nodeType": "YulTypedName",
														"src": "5242:5:8",
														"type": ""
													}
												],
												"src": "5185:143:8"
											},
											{
												"body": {
													"nativeSrc": "5411:274:8",
													"nodeType": "YulBlock",
													"src": "5411:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5457:83:8",
																"nodeType": "YulBlock",
																"src": "5457:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5459:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5459:77:8"
																			},
																			"nativeSrc": "5459:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5459:79:8"
																		},
																		"nativeSrc": "5459:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5459:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5432:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5432:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5441:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5441:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5428:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5428:3:8"
																		},
																		"nativeSrc": "5428:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5428:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5453:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5453:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5424:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5424:3:8"
																},
																"nativeSrc": "5424:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5424:32:8"
															},
															"nativeSrc": "5421:119:8",
															"nodeType": "YulIf",
															"src": "5421:119:8"
														},
														{
															"nativeSrc": "5550:128:8",
															"nodeType": "YulBlock",
															"src": "5550:128:8",
															"statements": [
																{
																	"nativeSrc": "5565:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5565:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5579:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5579:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5569:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5569:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5594:74:8",
																	"nodeType": "YulAssignment",
																	"src": "5594:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5640:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5640:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5651:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5651:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5636:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5636:3:8"
																				},
																				"nativeSrc": "5636:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5636:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5660:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5660:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5604:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "5604:31:8"
																		},
																		"nativeSrc": "5604:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5604:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5594:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5594:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "5334:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5381:9:8",
														"nodeType": "YulTypedName",
														"src": "5381:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5392:7:8",
														"nodeType": "YulTypedName",
														"src": "5392:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5404:6:8",
														"nodeType": "YulTypedName",
														"src": "5404:6:8",
														"type": ""
													}
												],
												"src": "5334:351:8"
											},
											{
												"body": {
													"nativeSrc": "5817:206:8",
													"nodeType": "YulBlock",
													"src": "5817:206:8",
													"statements": [
														{
															"nativeSrc": "5827:26:8",
															"nodeType": "YulAssignment",
															"src": "5827:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5839:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5839:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5850:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5850:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5835:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5835:3:8"
																},
																"nativeSrc": "5835:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5835:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5827:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5827:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5907:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5907:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5920:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5931:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5931:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5916:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:8"
																		},
																		"nativeSrc": "5916:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5916:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5863:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5863:43:8"
																},
																"nativeSrc": "5863:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5863:71:8"
															},
															"nativeSrc": "5863:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5863:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5988:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5988:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6001:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6001:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6012:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6012:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5997:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5997:3:8"
																		},
																		"nativeSrc": "5997:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5997:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5944:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5944:43:8"
																},
																"nativeSrc": "5944:72:8",
																"nodeType": "YulFunctionCall",
																"src": "5944:72:8"
															},
															"nativeSrc": "5944:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "5944:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "5691:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5781:9:8",
														"nodeType": "YulTypedName",
														"src": "5781:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5793:6:8",
														"nodeType": "YulTypedName",
														"src": "5793:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5801:6:8",
														"nodeType": "YulTypedName",
														"src": "5801:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5812:4:8",
														"nodeType": "YulTypedName",
														"src": "5812:4:8",
														"type": ""
													}
												],
												"src": "5691:332:8"
											},
											{
												"body": {
													"nativeSrc": "6142:34:8",
													"nodeType": "YulBlock",
													"src": "6142:34:8",
													"statements": [
														{
															"nativeSrc": "6152:18:8",
															"nodeType": "YulAssignment",
															"src": "6152:18:8",
															"value": {
																"name": "pos",
																"nativeSrc": "6167:3:8",
																"nodeType": "YulIdentifier",
																"src": "6167:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6152:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "6152:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6029:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6114:3:8",
														"nodeType": "YulTypedName",
														"src": "6114:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6119:6:8",
														"nodeType": "YulTypedName",
														"src": "6119:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6130:11:8",
														"nodeType": "YulTypedName",
														"src": "6130:11:8",
														"type": ""
													}
												],
												"src": "6029:147:8"
											},
											{
												"body": {
													"nativeSrc": "6288:8:8",
													"nodeType": "YulBlock",
													"src": "6288:8:8",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "6182:114:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6280:6:8",
														"nodeType": "YulTypedName",
														"src": "6280:6:8",
														"type": ""
													}
												],
												"src": "6182:114:8"
											},
											{
												"body": {
													"nativeSrc": "6465:235:8",
													"nodeType": "YulBlock",
													"src": "6465:235:8",
													"statements": [
														{
															"nativeSrc": "6475:90:8",
															"nodeType": "YulAssignment",
															"src": "6475:90:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6558:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6558:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6563:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6563:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6482:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "6482:75:8"
																},
																"nativeSrc": "6482:83:8",
																"nodeType": "YulFunctionCall",
																"src": "6482:83:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6475:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6475:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6663:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6663:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "6574:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "6574:88:8"
																},
																"nativeSrc": "6574:93:8",
																"nodeType": "YulFunctionCall",
																"src": "6574:93:8"
															},
															"nativeSrc": "6574:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "6574:93:8"
														},
														{
															"nativeSrc": "6676:18:8",
															"nodeType": "YulAssignment",
															"src": "6676:18:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6687:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6687:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6692:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6692:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6683:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6683:3:8"
																},
																"nativeSrc": "6683:11:8",
																"nodeType": "YulFunctionCall",
																"src": "6683:11:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6676:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6676:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6302:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6453:3:8",
														"nodeType": "YulTypedName",
														"src": "6453:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6461:3:8",
														"nodeType": "YulTypedName",
														"src": "6461:3:8",
														"type": ""
													}
												],
												"src": "6302:398:8"
											},
											{
												"body": {
													"nativeSrc": "6894:191:8",
													"nodeType": "YulBlock",
													"src": "6894:191:8",
													"statements": [
														{
															"nativeSrc": "6905:154:8",
															"nodeType": "YulAssignment",
															"src": "6905:154:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7055:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7055:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6912:141:8",
																	"nodeType": "YulIdentifier",
																	"src": "6912:141:8"
																},
																"nativeSrc": "6912:147:8",
																"nodeType": "YulFunctionCall",
																"src": "6912:147:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6905:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6905:3:8"
																}
															]
														},
														{
															"nativeSrc": "7069:10:8",
															"nodeType": "YulAssignment",
															"src": "7069:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "7076:3:8",
																"nodeType": "YulIdentifier",
																"src": "7076:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7069:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7069:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6706:379:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6881:3:8",
														"nodeType": "YulTypedName",
														"src": "6881:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6890:3:8",
														"nodeType": "YulTypedName",
														"src": "6890:3:8",
														"type": ""
													}
												],
												"src": "6706:379:8"
											},
											{
												"body": {
													"nativeSrc": "7135:61:8",
													"nodeType": "YulBlock",
													"src": "7135:61:8",
													"statements": [
														{
															"nativeSrc": "7145:45:8",
															"nodeType": "YulAssignment",
															"src": "7145:45:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7160:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7160:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7167:22:8",
																		"nodeType": "YulLiteral",
																		"src": "7167:22:8",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7156:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7156:3:8"
																},
																"nativeSrc": "7156:34:8",
																"nodeType": "YulFunctionCall",
																"src": "7156:34:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7145:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7145:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "7091:105:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7117:5:8",
														"nodeType": "YulTypedName",
														"src": "7117:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7127:7:8",
														"nodeType": "YulTypedName",
														"src": "7127:7:8",
														"type": ""
													}
												],
												"src": "7091:105:8"
											},
											{
												"body": {
													"nativeSrc": "7244:78:8",
													"nodeType": "YulBlock",
													"src": "7244:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7300:16:8",
																"nodeType": "YulBlock",
																"src": "7300:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7309:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7309:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7312:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7312:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7302:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7302:6:8"
																			},
																			"nativeSrc": "7302:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7302:12:8"
																		},
																		"nativeSrc": "7302:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7302:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7267:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7267:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7291:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7291:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "7274:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "7274:16:8"
																				},
																				"nativeSrc": "7274:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7274:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7264:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7264:2:8"
																		},
																		"nativeSrc": "7264:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7264:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7257:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7257:6:8"
																},
																"nativeSrc": "7257:42:8",
																"nodeType": "YulFunctionCall",
																"src": "7257:42:8"
															},
															"nativeSrc": "7254:62:8",
															"nodeType": "YulIf",
															"src": "7254:62:8"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "7202:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7237:5:8",
														"nodeType": "YulTypedName",
														"src": "7237:5:8",
														"type": ""
													}
												],
												"src": "7202:120:8"
											},
											{
												"body": {
													"nativeSrc": "7390:79:8",
													"nodeType": "YulBlock",
													"src": "7390:79:8",
													"statements": [
														{
															"nativeSrc": "7400:22:8",
															"nodeType": "YulAssignment",
															"src": "7400:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7415:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7415:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7409:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7409:5:8"
																},
																"nativeSrc": "7409:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7409:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7400:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7400:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7457:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7457:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "7431:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "7431:25:8"
																},
																"nativeSrc": "7431:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7431:32:8"
															},
															"nativeSrc": "7431:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "7431:32:8"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "7328:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7368:6:8",
														"nodeType": "YulTypedName",
														"src": "7368:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7376:3:8",
														"nodeType": "YulTypedName",
														"src": "7376:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7384:5:8",
														"nodeType": "YulTypedName",
														"src": "7384:5:8",
														"type": ""
													}
												],
												"src": "7328:141:8"
											},
											{
												"body": {
													"nativeSrc": "7519:32:8",
													"nodeType": "YulBlock",
													"src": "7519:32:8",
													"statements": [
														{
															"nativeSrc": "7529:16:8",
															"nodeType": "YulAssignment",
															"src": "7529:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "7540:5:8",
																"nodeType": "YulIdentifier",
																"src": "7540:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7529:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7529:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "7475:76:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7501:5:8",
														"nodeType": "YulTypedName",
														"src": "7501:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7511:7:8",
														"nodeType": "YulTypedName",
														"src": "7511:7:8",
														"type": ""
													}
												],
												"src": "7475:76:8"
											},
											{
												"body": {
													"nativeSrc": "7599:78:8",
													"nodeType": "YulBlock",
													"src": "7599:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7655:16:8",
																"nodeType": "YulBlock",
																"src": "7655:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7664:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7664:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7667:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7667:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7657:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7657:6:8"
																			},
																			"nativeSrc": "7657:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7657:12:8"
																		},
																		"nativeSrc": "7657:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7657:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7622:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7622:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7646:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7646:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "7629:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "7629:16:8"
																				},
																				"nativeSrc": "7629:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7629:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7619:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7619:2:8"
																		},
																		"nativeSrc": "7619:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7619:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7612:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7612:6:8"
																},
																"nativeSrc": "7612:42:8",
																"nodeType": "YulFunctionCall",
																"src": "7612:42:8"
															},
															"nativeSrc": "7609:62:8",
															"nodeType": "YulIf",
															"src": "7609:62:8"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "7557:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7592:5:8",
														"nodeType": "YulTypedName",
														"src": "7592:5:8",
														"type": ""
													}
												],
												"src": "7557:120:8"
											},
											{
												"body": {
													"nativeSrc": "7745:79:8",
													"nodeType": "YulBlock",
													"src": "7745:79:8",
													"statements": [
														{
															"nativeSrc": "7755:22:8",
															"nodeType": "YulAssignment",
															"src": "7755:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7770:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7770:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7764:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7764:5:8"
																},
																"nativeSrc": "7764:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7764:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7755:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7755:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7812:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7812:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "7786:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "7786:25:8"
																},
																"nativeSrc": "7786:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7786:32:8"
															},
															"nativeSrc": "7786:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "7786:32:8"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "7683:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7723:6:8",
														"nodeType": "YulTypedName",
														"src": "7723:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7731:3:8",
														"nodeType": "YulTypedName",
														"src": "7731:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7739:5:8",
														"nodeType": "YulTypedName",
														"src": "7739:5:8",
														"type": ""
													}
												],
												"src": "7683:141:8"
											},
											{
												"body": {
													"nativeSrc": "7893:80:8",
													"nodeType": "YulBlock",
													"src": "7893:80:8",
													"statements": [
														{
															"nativeSrc": "7903:22:8",
															"nodeType": "YulAssignment",
															"src": "7903:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7918:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7918:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7912:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7912:5:8"
																},
																"nativeSrc": "7912:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7912:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7903:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7903:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7961:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7961:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7934:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "7934:26:8"
																},
																"nativeSrc": "7934:33:8",
																"nodeType": "YulFunctionCall",
																"src": "7934:33:8"
															},
															"nativeSrc": "7934:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "7934:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7830:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7871:6:8",
														"nodeType": "YulTypedName",
														"src": "7871:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7879:3:8",
														"nodeType": "YulTypedName",
														"src": "7879:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7887:5:8",
														"nodeType": "YulTypedName",
														"src": "7887:5:8",
														"type": ""
													}
												],
												"src": "7830:143:8"
											},
											{
												"body": {
													"nativeSrc": "8121:829:8",
													"nodeType": "YulBlock",
													"src": "8121:829:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8168:83:8",
																"nodeType": "YulBlock",
																"src": "8168:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8170:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8170:77:8"
																			},
																			"nativeSrc": "8170:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8170:79:8"
																		},
																		"nativeSrc": "8170:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8170:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8142:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8142:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8151:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8151:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8138:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8138:3:8"
																		},
																		"nativeSrc": "8138:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8138:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8163:3:8",
																		"nodeType": "YulLiteral",
																		"src": "8163:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8134:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8134:3:8"
																},
																"nativeSrc": "8134:33:8",
																"nodeType": "YulFunctionCall",
																"src": "8134:33:8"
															},
															"nativeSrc": "8131:120:8",
															"nodeType": "YulIf",
															"src": "8131:120:8"
														},
														{
															"nativeSrc": "8261:127:8",
															"nodeType": "YulBlock",
															"src": "8261:127:8",
															"statements": [
																{
																	"nativeSrc": "8276:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8276:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8290:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8290:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8280:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8280:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8305:73:8",
																	"nodeType": "YulAssignment",
																	"src": "8305:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8350:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8350:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8361:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8361:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8346:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8346:3:8"
																				},
																				"nativeSrc": "8346:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8346:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8370:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8370:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "8315:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "8315:30:8"
																		},
																		"nativeSrc": "8315:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8315:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8305:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8305:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8398:128:8",
															"nodeType": "YulBlock",
															"src": "8398:128:8",
															"statements": [
																{
																	"nativeSrc": "8413:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8413:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8427:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8427:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8417:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8417:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8443:73:8",
																	"nodeType": "YulAssignment",
																	"src": "8443:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8488:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8488:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8499:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8499:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8484:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8484:3:8"
																				},
																				"nativeSrc": "8484:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8484:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8508:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8508:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "8453:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "8453:30:8"
																		},
																		"nativeSrc": "8453:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8453:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8443:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8443:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8536:129:8",
															"nodeType": "YulBlock",
															"src": "8536:129:8",
															"statements": [
																{
																	"nativeSrc": "8551:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8551:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8565:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8565:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8555:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8555:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8581:74:8",
																	"nodeType": "YulAssignment",
																	"src": "8581:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8627:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8627:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8638:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8638:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8623:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8623:3:8"
																				},
																				"nativeSrc": "8623:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8623:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8647:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8647:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8591:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "8591:31:8"
																		},
																		"nativeSrc": "8591:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8591:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8581:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8581:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8675:129:8",
															"nodeType": "YulBlock",
															"src": "8675:129:8",
															"statements": [
																{
																	"nativeSrc": "8690:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8690:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8704:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8704:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8694:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8694:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8720:74:8",
																	"nodeType": "YulAssignment",
																	"src": "8720:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8766:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8766:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8777:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8777:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8762:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8762:3:8"
																				},
																				"nativeSrc": "8762:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8762:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8786:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8786:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8730:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "8730:31:8"
																		},
																		"nativeSrc": "8730:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8730:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8720:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8720:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8814:129:8",
															"nodeType": "YulBlock",
															"src": "8814:129:8",
															"statements": [
																{
																	"nativeSrc": "8829:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8829:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8843:3:8",
																		"nodeType": "YulLiteral",
																		"src": "8843:3:8",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8833:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8833:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8860:73:8",
																	"nodeType": "YulAssignment",
																	"src": "8860:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8905:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8905:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8916:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8916:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8901:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8901:3:8"
																				},
																				"nativeSrc": "8901:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8901:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8925:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8925:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "8870:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "8870:30:8"
																		},
																		"nativeSrc": "8870:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8870:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "8860:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8860:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "7979:971:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8059:9:8",
														"nodeType": "YulTypedName",
														"src": "8059:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8070:7:8",
														"nodeType": "YulTypedName",
														"src": "8070:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8082:6:8",
														"nodeType": "YulTypedName",
														"src": "8082:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8090:6:8",
														"nodeType": "YulTypedName",
														"src": "8090:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8098:6:8",
														"nodeType": "YulTypedName",
														"src": "8098:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8106:6:8",
														"nodeType": "YulTypedName",
														"src": "8106:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8114:6:8",
														"nodeType": "YulTypedName",
														"src": "8114:6:8",
														"type": ""
													}
												],
												"src": "7979:971:8"
											},
											{
												"body": {
													"nativeSrc": "9000:49:8",
													"nodeType": "YulBlock",
													"src": "9000:49:8",
													"statements": [
														{
															"nativeSrc": "9010:33:8",
															"nodeType": "YulAssignment",
															"src": "9010:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9025:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9025:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9032:10:8",
																		"nodeType": "YulLiteral",
																		"src": "9032:10:8",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9021:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9021:3:8"
																},
																"nativeSrc": "9021:22:8",
																"nodeType": "YulFunctionCall",
																"src": "9021:22:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9010:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9010:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "8956:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8982:5:8",
														"nodeType": "YulTypedName",
														"src": "8982:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8992:7:8",
														"nodeType": "YulTypedName",
														"src": "8992:7:8",
														"type": ""
													}
												],
												"src": "8956:93:8"
											},
											{
												"body": {
													"nativeSrc": "9097:78:8",
													"nodeType": "YulBlock",
													"src": "9097:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9153:16:8",
																"nodeType": "YulBlock",
																"src": "9153:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9162:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9162:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9165:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9165:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9155:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9155:6:8"
																			},
																			"nativeSrc": "9155:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9155:12:8"
																		},
																		"nativeSrc": "9155:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9155:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9120:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9120:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9144:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9144:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "9127:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "9127:16:8"
																				},
																				"nativeSrc": "9127:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9127:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9117:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9117:2:8"
																		},
																		"nativeSrc": "9117:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9117:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9110:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9110:6:8"
																},
																"nativeSrc": "9110:42:8",
																"nodeType": "YulFunctionCall",
																"src": "9110:42:8"
															},
															"nativeSrc": "9107:62:8",
															"nodeType": "YulIf",
															"src": "9107:62:8"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nativeSrc": "9055:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9090:5:8",
														"nodeType": "YulTypedName",
														"src": "9090:5:8",
														"type": ""
													}
												],
												"src": "9055:120:8"
											},
											{
												"body": {
													"nativeSrc": "9243:79:8",
													"nodeType": "YulBlock",
													"src": "9243:79:8",
													"statements": [
														{
															"nativeSrc": "9253:22:8",
															"nodeType": "YulAssignment",
															"src": "9253:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9268:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9268:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9262:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9262:5:8"
																},
																"nativeSrc": "9262:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9262:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9253:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9253:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9310:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9310:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nativeSrc": "9284:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "9284:25:8"
																},
																"nativeSrc": "9284:32:8",
																"nodeType": "YulFunctionCall",
																"src": "9284:32:8"
															},
															"nativeSrc": "9284:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "9284:32:8"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nativeSrc": "9181:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9221:6:8",
														"nodeType": "YulTypedName",
														"src": "9221:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9229:3:8",
														"nodeType": "YulTypedName",
														"src": "9229:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9237:5:8",
														"nodeType": "YulTypedName",
														"src": "9237:5:8",
														"type": ""
													}
												],
												"src": "9181:141:8"
											},
											{
												"body": {
													"nativeSrc": "9372:47:8",
													"nodeType": "YulBlock",
													"src": "9372:47:8",
													"statements": [
														{
															"nativeSrc": "9382:31:8",
															"nodeType": "YulAssignment",
															"src": "9382:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9397:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9397:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9404:8:8",
																		"nodeType": "YulLiteral",
																		"src": "9404:8:8",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9393:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9393:3:8"
																},
																"nativeSrc": "9393:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9393:20:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9382:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9382:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "9328:91:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9354:5:8",
														"nodeType": "YulTypedName",
														"src": "9354:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9364:7:8",
														"nodeType": "YulTypedName",
														"src": "9364:7:8",
														"type": ""
													}
												],
												"src": "9328:91:8"
											},
											{
												"body": {
													"nativeSrc": "9467:78:8",
													"nodeType": "YulBlock",
													"src": "9467:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9523:16:8",
																"nodeType": "YulBlock",
																"src": "9523:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9532:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9532:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9535:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9535:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9525:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9525:6:8"
																			},
																			"nativeSrc": "9525:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9525:12:8"
																		},
																		"nativeSrc": "9525:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9525:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9490:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9490:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9514:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9514:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "9497:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "9497:16:8"
																				},
																				"nativeSrc": "9497:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9497:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9487:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9487:2:8"
																		},
																		"nativeSrc": "9487:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9487:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9480:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9480:6:8"
																},
																"nativeSrc": "9480:42:8",
																"nodeType": "YulFunctionCall",
																"src": "9480:42:8"
															},
															"nativeSrc": "9477:62:8",
															"nodeType": "YulIf",
															"src": "9477:62:8"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nativeSrc": "9425:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9460:5:8",
														"nodeType": "YulTypedName",
														"src": "9460:5:8",
														"type": ""
													}
												],
												"src": "9425:120:8"
											},
											{
												"body": {
													"nativeSrc": "9613:79:8",
													"nodeType": "YulBlock",
													"src": "9613:79:8",
													"statements": [
														{
															"nativeSrc": "9623:22:8",
															"nodeType": "YulAssignment",
															"src": "9623:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9638:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9638:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9632:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9632:5:8"
																},
																"nativeSrc": "9632:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9632:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9623:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9623:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9680:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9680:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nativeSrc": "9654:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "9654:25:8"
																},
																"nativeSrc": "9654:32:8",
																"nodeType": "YulFunctionCall",
																"src": "9654:32:8"
															},
															"nativeSrc": "9654:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "9654:32:8"
														}
													]
												},
												"name": "abi_decode_t_uint24_fromMemory",
												"nativeSrc": "9551:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9591:6:8",
														"nodeType": "YulTypedName",
														"src": "9591:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9599:3:8",
														"nodeType": "YulTypedName",
														"src": "9599:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9607:5:8",
														"nodeType": "YulTypedName",
														"src": "9607:5:8",
														"type": ""
													}
												],
												"src": "9551:141:8"
											},
											{
												"body": {
													"nativeSrc": "9902:1383:8",
													"nodeType": "YulBlock",
													"src": "9902:1383:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9949:83:8",
																"nodeType": "YulBlock",
																"src": "9949:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9951:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "9951:77:8"
																			},
																			"nativeSrc": "9951:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9951:79:8"
																		},
																		"nativeSrc": "9951:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9951:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9923:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9923:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9932:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9932:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9919:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9919:3:8"
																		},
																		"nativeSrc": "9919:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9919:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9944:3:8",
																		"nodeType": "YulLiteral",
																		"src": "9944:3:8",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9915:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9915:3:8"
																},
																"nativeSrc": "9915:33:8",
																"nodeType": "YulFunctionCall",
																"src": "9915:33:8"
															},
															"nativeSrc": "9912:120:8",
															"nodeType": "YulIf",
															"src": "9912:120:8"
														},
														{
															"nativeSrc": "10042:127:8",
															"nodeType": "YulBlock",
															"src": "10042:127:8",
															"statements": [
																{
																	"nativeSrc": "10057:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10057:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10071:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10071:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10061:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10061:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10086:73:8",
																	"nodeType": "YulAssignment",
																	"src": "10086:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10131:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10131:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10142:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10142:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10127:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10127:3:8"
																				},
																				"nativeSrc": "10127:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10127:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10151:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10151:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nativeSrc": "10096:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "10096:30:8"
																		},
																		"nativeSrc": "10096:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10096:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10086:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10086:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10179:128:8",
															"nodeType": "YulBlock",
															"src": "10179:128:8",
															"statements": [
																{
																	"nativeSrc": "10194:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10194:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10208:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10208:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10198:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10198:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10224:73:8",
																	"nodeType": "YulAssignment",
																	"src": "10224:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10269:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10269:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10280:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10280:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10265:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10265:3:8"
																				},
																				"nativeSrc": "10265:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10265:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10289:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10289:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nativeSrc": "10234:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "10234:30:8"
																		},
																		"nativeSrc": "10234:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10234:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10224:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10224:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10317:128:8",
															"nodeType": "YulBlock",
															"src": "10317:128:8",
															"statements": [
																{
																	"nativeSrc": "10332:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10332:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10346:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10346:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10336:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10336:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10362:73:8",
																	"nodeType": "YulAssignment",
																	"src": "10362:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10407:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10407:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10418:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10418:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10403:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10403:3:8"
																				},
																				"nativeSrc": "10403:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10403:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10427:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10427:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nativeSrc": "10372:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "10372:30:8"
																		},
																		"nativeSrc": "10372:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10372:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10362:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10362:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10455:128:8",
															"nodeType": "YulBlock",
															"src": "10455:128:8",
															"statements": [
																{
																	"nativeSrc": "10470:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10470:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10484:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10484:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10474:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10474:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10500:73:8",
																	"nodeType": "YulAssignment",
																	"src": "10500:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10545:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10545:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10556:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10556:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10541:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10541:3:8"
																				},
																				"nativeSrc": "10541:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10541:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10565:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10565:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nativeSrc": "10510:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "10510:30:8"
																		},
																		"nativeSrc": "10510:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10510:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10500:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10500:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10593:129:8",
															"nodeType": "YulBlock",
															"src": "10593:129:8",
															"statements": [
																{
																	"nativeSrc": "10608:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10608:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10622:3:8",
																		"nodeType": "YulLiteral",
																		"src": "10622:3:8",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10612:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10612:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10639:73:8",
																	"nodeType": "YulAssignment",
																	"src": "10639:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10684:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10684:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10695:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10695:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10680:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10680:3:8"
																				},
																				"nativeSrc": "10680:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10680:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10704:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10704:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nativeSrc": "10649:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "10649:30:8"
																		},
																		"nativeSrc": "10649:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10649:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10639:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10639:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10732:129:8",
															"nodeType": "YulBlock",
															"src": "10732:129:8",
															"statements": [
																{
																	"nativeSrc": "10747:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10747:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10761:3:8",
																		"nodeType": "YulLiteral",
																		"src": "10761:3:8",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10751:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10751:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10778:73:8",
																	"nodeType": "YulAssignment",
																	"src": "10778:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10823:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10823:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10834:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10834:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10819:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10819:3:8"
																				},
																				"nativeSrc": "10819:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10819:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10843:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10843:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24_fromMemory",
																			"nativeSrc": "10788:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "10788:30:8"
																		},
																		"nativeSrc": "10788:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10788:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "10778:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10778:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10871:129:8",
															"nodeType": "YulBlock",
															"src": "10871:129:8",
															"statements": [
																{
																	"nativeSrc": "10886:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10886:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10900:3:8",
																		"nodeType": "YulLiteral",
																		"src": "10900:3:8",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10890:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10890:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10917:73:8",
																	"nodeType": "YulAssignment",
																	"src": "10917:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10962:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10962:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10973:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10973:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10958:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10958:3:8"
																				},
																				"nativeSrc": "10958:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10958:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10982:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10982:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24_fromMemory",
																			"nativeSrc": "10927:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "10927:30:8"
																		},
																		"nativeSrc": "10927:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10927:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "10917:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10917:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11010:129:8",
															"nodeType": "YulBlock",
															"src": "11010:129:8",
															"statements": [
																{
																	"nativeSrc": "11025:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11025:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11039:3:8",
																		"nodeType": "YulLiteral",
																		"src": "11039:3:8",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11029:6:8",
																			"nodeType": "YulTypedName",
																			"src": "11029:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11056:73:8",
																	"nodeType": "YulAssignment",
																	"src": "11056:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11101:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "11101:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11112:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "11112:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11097:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11097:3:8"
																				},
																				"nativeSrc": "11097:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11097:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11121:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11121:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24_fromMemory",
																			"nativeSrc": "11066:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "11066:30:8"
																		},
																		"nativeSrc": "11066:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11066:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "11056:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "11056:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11149:129:8",
															"nodeType": "YulBlock",
															"src": "11149:129:8",
															"statements": [
																{
																	"nativeSrc": "11164:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11164:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11178:3:8",
																		"nodeType": "YulLiteral",
																		"src": "11178:3:8",
																		"type": "",
																		"value": "256"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11168:6:8",
																			"nodeType": "YulTypedName",
																			"src": "11168:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11195:73:8",
																	"nodeType": "YulAssignment",
																	"src": "11195:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11240:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "11240:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11251:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "11251:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11236:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11236:3:8"
																				},
																				"nativeSrc": "11236:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11236:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11260:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11260:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24_fromMemory",
																			"nativeSrc": "11205:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "11205:30:8"
																		},
																		"nativeSrc": "11205:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11205:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value8",
																			"nativeSrc": "11195:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "11195:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32t_uint32t_uint32t_uint32t_uint32t_uint24t_uint24t_uint24t_uint24_fromMemory",
												"nativeSrc": "9698:1587:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9808:9:8",
														"nodeType": "YulTypedName",
														"src": "9808:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9819:7:8",
														"nodeType": "YulTypedName",
														"src": "9819:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9831:6:8",
														"nodeType": "YulTypedName",
														"src": "9831:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9839:6:8",
														"nodeType": "YulTypedName",
														"src": "9839:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9847:6:8",
														"nodeType": "YulTypedName",
														"src": "9847:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9855:6:8",
														"nodeType": "YulTypedName",
														"src": "9855:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9863:6:8",
														"nodeType": "YulTypedName",
														"src": "9863:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9871:6:8",
														"nodeType": "YulTypedName",
														"src": "9871:6:8",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9879:6:8",
														"nodeType": "YulTypedName",
														"src": "9879:6:8",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "9887:6:8",
														"nodeType": "YulTypedName",
														"src": "9887:6:8",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "9895:6:8",
														"nodeType": "YulTypedName",
														"src": "9895:6:8",
														"type": ""
													}
												],
												"src": "9698:1587:8"
											},
											{
												"body": {
													"nativeSrc": "11319:152:8",
													"nodeType": "YulBlock",
													"src": "11319:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11336:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11336:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11339:77:8",
																		"nodeType": "YulLiteral",
																		"src": "11339:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11329:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11329:6:8"
																},
																"nativeSrc": "11329:88:8",
																"nodeType": "YulFunctionCall",
																"src": "11329:88:8"
															},
															"nativeSrc": "11329:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "11329:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11433:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11433:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11436:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11436:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11426:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11426:6:8"
																},
																"nativeSrc": "11426:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11426:15:8"
															},
															"nativeSrc": "11426:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11426:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11457:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11457:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11460:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11460:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11450:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11450:6:8"
																},
																"nativeSrc": "11450:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11450:15:8"
															},
															"nativeSrc": "11450:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11450:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11291:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "11291:180:8"
											},
											{
												"body": {
													"nativeSrc": "11525:362:8",
													"nodeType": "YulBlock",
													"src": "11525:362:8",
													"statements": [
														{
															"nativeSrc": "11535:25:8",
															"nodeType": "YulAssignment",
															"src": "11535:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11558:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11558:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11540:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11540:17:8"
																},
																"nativeSrc": "11540:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11540:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11535:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11535:1:8"
																}
															]
														},
														{
															"nativeSrc": "11569:25:8",
															"nodeType": "YulAssignment",
															"src": "11569:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11592:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11592:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11574:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11574:17:8"
																},
																"nativeSrc": "11574:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11574:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11569:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11569:1:8"
																}
															]
														},
														{
															"nativeSrc": "11603:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11603:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11626:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11626:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11629:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11629:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11622:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11622:3:8"
																},
																"nativeSrc": "11622:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11622:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11607:11:8",
																	"nodeType": "YulTypedName",
																	"src": "11607:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11640:41:8",
															"nodeType": "YulAssignment",
															"src": "11640:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11669:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "11669:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11651:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11651:17:8"
																},
																"nativeSrc": "11651:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11651:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11640:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "11640:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11858:22:8",
																"nodeType": "YulBlock",
																"src": "11858:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11860:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11860:16:8"
																			},
																			"nativeSrc": "11860:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11860:18:8"
																		},
																		"nativeSrc": "11860:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11860:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11791:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "11791:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11784:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "11784:6:8"
																				},
																				"nativeSrc": "11784:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11784:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11814:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "11814:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11821:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "11821:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11830:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "11830:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11817:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11817:3:8"
																						},
																						"nativeSrc": "11817:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11817:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11811:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "11811:2:8"
																				},
																				"nativeSrc": "11811:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11811:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11764:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "11764:2:8"
																		},
																		"nativeSrc": "11764:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11764:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11744:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11744:6:8"
																},
																"nativeSrc": "11744:113:8",
																"nodeType": "YulFunctionCall",
																"src": "11744:113:8"
															},
															"nativeSrc": "11741:139:8",
															"nodeType": "YulIf",
															"src": "11741:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11477:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11508:1:8",
														"nodeType": "YulTypedName",
														"src": "11508:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11511:1:8",
														"nodeType": "YulTypedName",
														"src": "11511:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11517:7:8",
														"nodeType": "YulTypedName",
														"src": "11517:7:8",
														"type": ""
													}
												],
												"src": "11477:410:8"
											},
											{
												"body": {
													"nativeSrc": "11921:152:8",
													"nodeType": "YulBlock",
													"src": "11921:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11938:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11938:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11941:77:8",
																		"nodeType": "YulLiteral",
																		"src": "11941:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11931:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11931:6:8"
																},
																"nativeSrc": "11931:88:8",
																"nodeType": "YulFunctionCall",
																"src": "11931:88:8"
															},
															"nativeSrc": "11931:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "11931:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12035:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12035:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12038:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12038:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12028:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12028:6:8"
																},
																"nativeSrc": "12028:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12028:15:8"
															},
															"nativeSrc": "12028:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12028:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12059:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12059:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12062:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12062:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12052:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12052:6:8"
																},
																"nativeSrc": "12052:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12052:15:8"
															},
															"nativeSrc": "12052:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12052:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11893:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "11893:180:8"
											},
											{
												"body": {
													"nativeSrc": "12121:143:8",
													"nodeType": "YulBlock",
													"src": "12121:143:8",
													"statements": [
														{
															"nativeSrc": "12131:25:8",
															"nodeType": "YulAssignment",
															"src": "12131:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12154:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12154:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12136:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12136:17:8"
																},
																"nativeSrc": "12136:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12136:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12131:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12131:1:8"
																}
															]
														},
														{
															"nativeSrc": "12165:25:8",
															"nodeType": "YulAssignment",
															"src": "12165:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12188:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12188:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12170:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12170:17:8"
																},
																"nativeSrc": "12170:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12170:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12165:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12165:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12212:22:8",
																"nodeType": "YulBlock",
																"src": "12212:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12214:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12214:16:8"
																			},
																			"nativeSrc": "12214:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12214:18:8"
																		},
																		"nativeSrc": "12214:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12214:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12209:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12209:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12202:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12202:6:8"
																},
																"nativeSrc": "12202:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12202:9:8"
															},
															"nativeSrc": "12199:35:8",
															"nodeType": "YulIf",
															"src": "12199:35:8"
														},
														{
															"nativeSrc": "12244:14:8",
															"nodeType": "YulAssignment",
															"src": "12244:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12253:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12253:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12256:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12256:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12249:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12249:3:8"
																},
																"nativeSrc": "12249:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12249:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12244:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12244:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12079:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12110:1:8",
														"nodeType": "YulTypedName",
														"src": "12110:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12113:1:8",
														"nodeType": "YulTypedName",
														"src": "12113:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12119:1:8",
														"nodeType": "YulTypedName",
														"src": "12119:1:8",
														"type": ""
													}
												],
												"src": "12079:185:8"
											},
											{
												"body": {
													"nativeSrc": "12314:147:8",
													"nodeType": "YulBlock",
													"src": "12314:147:8",
													"statements": [
														{
															"nativeSrc": "12324:25:8",
															"nodeType": "YulAssignment",
															"src": "12324:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12347:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12347:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12329:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12329:17:8"
																},
																"nativeSrc": "12329:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12329:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12324:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12324:1:8"
																}
															]
														},
														{
															"nativeSrc": "12358:25:8",
															"nodeType": "YulAssignment",
															"src": "12358:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12381:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12381:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12363:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12363:17:8"
																},
																"nativeSrc": "12363:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12363:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12358:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12358:1:8"
																}
															]
														},
														{
															"nativeSrc": "12392:16:8",
															"nodeType": "YulAssignment",
															"src": "12392:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12403:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12403:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12406:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12406:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12399:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12399:3:8"
																},
																"nativeSrc": "12399:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12399:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12392:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12392:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12432:22:8",
																"nodeType": "YulBlock",
																"src": "12432:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12434:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12434:16:8"
																			},
																			"nativeSrc": "12434:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12434:18:8"
																		},
																		"nativeSrc": "12434:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12434:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12424:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12424:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12427:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12427:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12421:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12421:2:8"
																},
																"nativeSrc": "12421:10:8",
																"nodeType": "YulFunctionCall",
																"src": "12421:10:8"
															},
															"nativeSrc": "12418:36:8",
															"nodeType": "YulIf",
															"src": "12418:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12270:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12301:1:8",
														"nodeType": "YulTypedName",
														"src": "12301:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12304:1:8",
														"nodeType": "YulTypedName",
														"src": "12304:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12310:3:8",
														"nodeType": "YulTypedName",
														"src": "12310:3:8",
														"type": ""
													}
												],
												"src": "12270:191:8"
											},
											{
												"body": {
													"nativeSrc": "12563:73:8",
													"nodeType": "YulBlock",
													"src": "12563:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12580:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12580:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12585:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12585:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12573:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12573:6:8"
																},
																"nativeSrc": "12573:19:8",
																"nodeType": "YulFunctionCall",
																"src": "12573:19:8"
															},
															"nativeSrc": "12573:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "12573:19:8"
														},
														{
															"nativeSrc": "12601:29:8",
															"nodeType": "YulAssignment",
															"src": "12601:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12620:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12620:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12625:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12625:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12616:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12616:3:8"
																},
																"nativeSrc": "12616:14:8",
																"nodeType": "YulFunctionCall",
																"src": "12616:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12601:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "12601:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "12467:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12535:3:8",
														"nodeType": "YulTypedName",
														"src": "12535:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12540:6:8",
														"nodeType": "YulTypedName",
														"src": "12540:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12551:11:8",
														"nodeType": "YulTypedName",
														"src": "12551:11:8",
														"type": ""
													}
												],
												"src": "12467:169:8"
											},
											{
												"body": {
													"nativeSrc": "12748:75:8",
													"nodeType": "YulBlock",
													"src": "12748:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12770:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12770:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12778:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12778:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12766:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12766:3:8"
																		},
																		"nativeSrc": "12766:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12766:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "12782:33:8",
																		"nodeType": "YulLiteral",
																		"src": "12782:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12759:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12759:6:8"
																},
																"nativeSrc": "12759:57:8",
																"nodeType": "YulFunctionCall",
																"src": "12759:57:8"
															},
															"nativeSrc": "12759:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "12759:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "12642:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12740:6:8",
														"nodeType": "YulTypedName",
														"src": "12740:6:8",
														"type": ""
													}
												],
												"src": "12642:181:8"
											},
											{
												"body": {
													"nativeSrc": "12975:220:8",
													"nodeType": "YulBlock",
													"src": "12975:220:8",
													"statements": [
														{
															"nativeSrc": "12985:74:8",
															"nodeType": "YulAssignment",
															"src": "12985:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13051:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13051:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13056:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13056:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12992:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12992:58:8"
																},
																"nativeSrc": "12992:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12992:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12985:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12985:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13157:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13157:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "13068:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13068:88:8"
																},
																"nativeSrc": "13068:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13068:93:8"
															},
															"nativeSrc": "13068:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13068:93:8"
														},
														{
															"nativeSrc": "13170:19:8",
															"nodeType": "YulAssignment",
															"src": "13170:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13181:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13181:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13186:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13186:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13177:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13177:3:8"
																},
																"nativeSrc": "13177:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13177:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13170:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13170:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12829:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12963:3:8",
														"nodeType": "YulTypedName",
														"src": "12963:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12971:3:8",
														"nodeType": "YulTypedName",
														"src": "12971:3:8",
														"type": ""
													}
												],
												"src": "12829:366:8"
											},
											{
												"body": {
													"nativeSrc": "13372:248:8",
													"nodeType": "YulBlock",
													"src": "13372:248:8",
													"statements": [
														{
															"nativeSrc": "13382:26:8",
															"nodeType": "YulAssignment",
															"src": "13382:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13394:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13394:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13405:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13405:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13390:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13390:3:8"
																},
																"nativeSrc": "13390:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13390:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13382:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13382:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13429:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13429:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13440:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13440:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13425:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13425:3:8"
																		},
																		"nativeSrc": "13425:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13425:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13448:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13448:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13454:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13454:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13444:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13444:3:8"
																		},
																		"nativeSrc": "13444:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13444:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13418:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13418:6:8"
																},
																"nativeSrc": "13418:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13418:47:8"
															},
															"nativeSrc": "13418:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13418:47:8"
														},
														{
															"nativeSrc": "13474:139:8",
															"nodeType": "YulAssignment",
															"src": "13474:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13608:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13608:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13482:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13482:124:8"
																},
																"nativeSrc": "13482:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13482:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13474:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13474:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13201:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13352:9:8",
														"nodeType": "YulTypedName",
														"src": "13352:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13367:4:8",
														"nodeType": "YulTypedName",
														"src": "13367:4:8",
														"type": ""
													}
												],
												"src": "13201:419:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IVRFCoordinatorV2_$935_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IVRFCoordinatorV2_$935_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IVRFCoordinatorV2_$935_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IVRFCoordinatorV2_$935__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IVRFCoordinatorV2_$935_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IBankRoll_$911_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IBankRoll_$911_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBankRoll_$911_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IBankRoll_$911__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBankRoll_$911_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_uint32t_uint32t_uint32t_uint32t_uint32t_uint24t_uint24t_uint24t_uint24_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_uint24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c80638bd16114116100645780638bd161141461011d5780638d7c16d21461014d578063953995ea1461016b578063ad17836114610189578063d0bcfc0c146101a757610091565b80634dd189d51461009557806356c022bb146100b3578063572b6c05146100d157806363dc4ef514610101575b5f80fd5b61009d6101c5565b6040516100aa919061077d565b60405180910390f35b6100bb6101ea565b6040516100c891906107b6565b60405180910390f35b6100eb60048036038101906100e691906107fd565b61020f565b6040516100f89190610842565b60405180910390f35b61011b600480360381019061011691906107fd565b610267565b005b6101376004803603810190610132919061088e565b6104b4565b60405161014491906108c8565b60405180910390f35b610155610638565b60405161016291906108c8565b60405180910390f35b61017361063e565b60405161018091906107b6565b60405180910390f35b610191610663565b60405161019e9190610901565b60405180910390f35b6101af610688565b6040516101bc919061093a565b60405180910390f35b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b61026f6106ad565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102fd9190610967565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103fb5760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610399573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103bd9190610967565b336040517f23295f0e0000000000000000000000000000000000000000000000000000000081526004016103f2929190610992565b60405180910390fd5b5f60015490505f6001819055505f8273ffffffffffffffffffffffffffffffffffffffff168260405161042d906109e6565b5f6040518083038185875af1925050503d805f8114610467576040519150601f19603f3d011682016040523d82523d5f602084013e61046c565b606091505b50509050806104a7576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50506104b16106fa565b50565b5f8060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610520573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105449190610a80565b5050509150505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fbbc0d26040518163ffffffff1660e01b815260040161012060405180830381865afa1580156105b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105da9190610b68565b50505050505050509050670de0b6b3a7640000828263ffffffff1664e8d4a510006106059190610c59565b61060f9190610c59565b6106199190610cc7565b843a6106259190610c59565b61062f9190610cf7565b92505050919050565b60015481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f54036106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e890610d84565b60405180910390fd5b60025f81905550565b60015f81905550565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61074561074061073b84610703565b610722565b610703565b9050919050565b5f6107568261072b565b9050919050565b5f6107678261074c565b9050919050565b6107778161075d565b82525050565b5f6020820190506107905f83018461076e565b92915050565b5f6107a082610703565b9050919050565b6107b081610796565b82525050565b5f6020820190506107c95f8301846107a7565b92915050565b5f80fd5b6107dc81610796565b81146107e6575f80fd5b50565b5f813590506107f7816107d3565b92915050565b5f60208284031215610812576108116107cf565b5b5f61081f848285016107e9565b91505092915050565b5f8115159050919050565b61083c81610828565b82525050565b5f6020820190506108555f830184610833565b92915050565b5f819050919050565b61086d8161085b565b8114610877575f80fd5b50565b5f8135905061088881610864565b92915050565b5f602082840312156108a3576108a26107cf565b5b5f6108b08482850161087a565b91505092915050565b6108c28161085b565b82525050565b5f6020820190506108db5f8301846108b9565b92915050565b5f6108eb8261074c565b9050919050565b6108fb816108e1565b82525050565b5f6020820190506109145f8301846108f2565b92915050565b5f6109248261074c565b9050919050565b6109348161091a565b82525050565b5f60208201905061094d5f83018461092b565b92915050565b5f81519050610961816107d3565b92915050565b5f6020828403121561097c5761097b6107cf565b5b5f61098984828501610953565b91505092915050565b5f6040820190506109a55f8301856107a7565b6109b260208301846107a7565b9392505050565b5f81905092915050565b50565b5f6109d15f836109b9565b91506109dc826109c3565b5f82019050919050565b5f6109f0826109c6565b9150819050919050565b5f69ffffffffffffffffffff82169050919050565b610a18816109fa565b8114610a22575f80fd5b50565b5f81519050610a3381610a0f565b92915050565b5f819050919050565b610a4b81610a39565b8114610a55575f80fd5b50565b5f81519050610a6681610a42565b92915050565b5f81519050610a7a81610864565b92915050565b5f805f805f60a08688031215610a9957610a986107cf565b5b5f610aa688828901610a25565b9550506020610ab788828901610a58565b9450506040610ac888828901610a6c565b9350506060610ad988828901610a6c565b9250506080610aea88828901610a25565b9150509295509295909350565b5f63ffffffff82169050919050565b610b0f81610af7565b8114610b19575f80fd5b50565b5f81519050610b2a81610b06565b92915050565b5f62ffffff82169050919050565b610b4781610b30565b8114610b51575f80fd5b50565b5f81519050610b6281610b3e565b92915050565b5f805f805f805f805f6101208a8c031215610b8657610b856107cf565b5b5f610b938c828d01610b1c565b9950506020610ba48c828d01610b1c565b9850506040610bb58c828d01610b1c565b9750506060610bc68c828d01610b1c565b9650506080610bd78c828d01610b1c565b95505060a0610be88c828d01610b54565b94505060c0610bf98c828d01610b54565b93505060e0610c0a8c828d01610b54565b925050610100610c1c8c828d01610b54565b9150509295985092959850929598565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c638261085b565b9150610c6e8361085b565b9250828202610c7c8161085b565b91508282048414831517610c9357610c92610c2c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610cd18261085b565b9150610cdc8361085b565b925082610cec57610ceb610c9a565b5b828204905092915050565b5f610d018261085b565b9150610d0c8361085b565b9250828201905080821115610d2457610d23610c2c565b5b92915050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610d6e601f83610d2a565b9150610d7982610d3a565b602082019050919050565b5f6020820190508181035f830152610d9b81610d62565b905091905056fea26469706673582212208ecce7068ac551b06790010a6380579a06b83d9d50a0cf58277b80203433fb7264736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BD16114 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8BD16114 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x8D7C16D2 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x953995EA EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xAD178361 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xD0BCFC0C EQ PUSH2 0x1A7 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x4DD189D5 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x56C022BB EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x63DC4EF5 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x893D20E8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3FB JUMPI PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x893D20E8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x399 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD PUSH32 0x23295F0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F2 SWAP3 SWAP2 SWAP1 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x42D SWAP1 PUSH2 0x9E6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x46C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x4B1 PUSH2 0x6FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x520 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x544 SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5FBBC0D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0xB68 JUMP JUMPDEST POP POP POP POP POP POP POP POP SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 DUP3 PUSH4 0xFFFFFFFF AND PUSH5 0xE8D4A51000 PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0x60F SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0x619 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST DUP5 GASPRICE PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0x62F SWAP2 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x6F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E8 SWAP1 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x745 PUSH2 0x740 PUSH2 0x73B DUP5 PUSH2 0x703 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x756 DUP3 PUSH2 0x72B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x767 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x777 DUP2 PUSH2 0x75D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x790 PUSH0 DUP4 ADD DUP5 PUSH2 0x76E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7A0 DUP3 PUSH2 0x703 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B0 DUP2 PUSH2 0x796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x7A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7DC DUP2 PUSH2 0x796 JUMP JUMPDEST DUP2 EQ PUSH2 0x7E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7F7 DUP2 PUSH2 0x7D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x812 JUMPI PUSH2 0x811 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x81F DUP5 DUP3 DUP6 ADD PUSH2 0x7E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83C DUP2 PUSH2 0x828 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x855 PUSH0 DUP4 ADD DUP5 PUSH2 0x833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86D DUP2 PUSH2 0x85B JUMP JUMPDEST DUP2 EQ PUSH2 0x877 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x888 DUP2 PUSH2 0x864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A3 JUMPI PUSH2 0x8A2 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8B0 DUP5 DUP3 DUP6 ADD PUSH2 0x87A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C2 DUP2 PUSH2 0x85B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8DB PUSH0 DUP4 ADD DUP5 PUSH2 0x8B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8EB DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FB DUP2 PUSH2 0x8E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x914 PUSH0 DUP4 ADD DUP5 PUSH2 0x8F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x924 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x934 DUP2 PUSH2 0x91A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94D PUSH0 DUP4 ADD DUP5 PUSH2 0x92B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x961 DUP2 PUSH2 0x7D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x989 DUP5 DUP3 DUP6 ADD PUSH2 0x953 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9A5 PUSH0 DUP4 ADD DUP6 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x9B2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x9D1 PUSH0 DUP4 PUSH2 0x9B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x9DC DUP3 PUSH2 0x9C3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9F0 DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA18 DUP2 PUSH2 0x9FA JUMP JUMPDEST DUP2 EQ PUSH2 0xA22 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA33 DUP2 PUSH2 0xA0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4B DUP2 PUSH2 0xA39 JUMP JUMPDEST DUP2 EQ PUSH2 0xA55 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA66 DUP2 PUSH2 0xA42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA7A DUP2 PUSH2 0x864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA99 JUMPI PUSH2 0xA98 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAA6 DUP9 DUP3 DUP10 ADD PUSH2 0xA25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xAB7 DUP9 DUP3 DUP10 ADD PUSH2 0xA58 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xAC8 DUP9 DUP3 DUP10 ADD PUSH2 0xA6C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xAD9 DUP9 DUP3 DUP10 ADD PUSH2 0xA6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xAEA DUP9 DUP3 DUP10 ADD PUSH2 0xA25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0F DUP2 PUSH2 0xAF7 JUMP JUMPDEST DUP2 EQ PUSH2 0xB19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB2A DUP2 PUSH2 0xB06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB47 DUP2 PUSH2 0xB30 JUMP JUMPDEST DUP2 EQ PUSH2 0xB51 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB62 DUP2 PUSH2 0xB3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0xB86 JUMPI PUSH2 0xB85 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB93 DUP13 DUP3 DUP14 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0xBA4 DUP13 DUP3 DUP14 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0xBB5 DUP13 DUP3 DUP14 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0xBC6 DUP13 DUP3 DUP14 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0xBD7 DUP13 DUP3 DUP14 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0xBE8 DUP13 DUP3 DUP14 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0xBF9 DUP13 DUP3 DUP14 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 PUSH2 0xC0A DUP13 DUP3 DUP14 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH2 0xC1C DUP13 DUP3 DUP14 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC63 DUP3 PUSH2 0x85B JUMP JUMPDEST SWAP2 POP PUSH2 0xC6E DUP4 PUSH2 0x85B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC7C DUP2 PUSH2 0x85B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC93 JUMPI PUSH2 0xC92 PUSH2 0xC2C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCD1 DUP3 PUSH2 0x85B JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP4 PUSH2 0x85B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0xC9A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD01 DUP3 PUSH2 0x85B JUMP JUMPDEST SWAP2 POP PUSH2 0xD0C DUP4 PUSH2 0x85B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD24 JUMPI PUSH2 0xD23 PUSH2 0xC2C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD6E PUSH1 0x1F DUP4 PUSH2 0xD2A JUMP JUMPDEST SWAP2 POP PUSH2 0xD79 DUP3 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xD62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xCC 0xE7 MOD DUP11 0xC5 MLOAD 0xB0 PUSH8 0x90010A6380579A06 0xB8 RETURNDATASIZE SWAP14 POP LOG0 0xCF PC 0x27 PUSH28 0x80203433FB7264736F6C634300081500330000000000000000000000 ",
							"sourceMap": "1220:9415:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1491:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1355:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9967:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5443:377;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4106:443;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1294:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1322:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1443:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1535:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1491:38;;;;;;;;;;;;;:::o;1355:32::-;;;;;;;;;;;;;:::o;9967:128::-;10035:4;10071:17;;;;;;;;;;;10058:30;;:9;:30;;;10051:37;;9967:128;;;:::o;5443:377::-;2261:21:2;:19;:21::i;:::-;5527:8:7::1;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5513:33;;:10;:33;;;5509:112;;5578:8;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5599:10;5569:41;;;;;;;;;;;;:::i;:::-;;;;;;;;5509:112;5630:11;5644:7;;5630:21;;5671:1;5661:7;:11;;;;5683:12;5717:2;5701:25;;5734:3;5701:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5682:60;;;5757:7;5752:62;;5787:16;;;;;;;;;;;;;;5752:62;5499:321;;2303:20:2::0;:18;:20::i;:::-;5443:377:7;:::o;4106:443::-;4165:11;4191:13;4214;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4188:57;;;;;;4256:37;4313:13;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4255:99;;;;;;;;;;4537:4;4526:6;4468:30;4460:39;;4437:4;:62;;;;:::i;:::-;:96;;;;:::i;:::-;4436:105;;;;:::i;:::-;4410:9;4383:11;:37;;;;:::i;:::-;:159;;;;:::i;:::-;4365:177;;4178:371;;4106:443;;;:::o;1294:22::-;;;;:::o;1322:27::-;;;;;;;;;;;;;:::o;1443:42::-;;;;;;;;;;;;;:::o;1535:25::-;;;;;;;;;;;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;7:126:8:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:151::-;560:9;593:37;624:5;593:37;:::i;:::-;580:50;;485:151;;;:::o;642:181::-;754:62;810:5;754:62;:::i;:::-;749:3;742:75;642:181;;:::o;829:272::-;947:4;985:2;974:9;970:18;962:26;;998:96;1091:1;1080:9;1076:17;1067:6;998:96;:::i;:::-;829:272;;;;:::o;1107:96::-;1144:7;1173:24;1191:5;1173:24;:::i;:::-;1162:35;;1107:96;;;:::o;1209:118::-;1296:24;1314:5;1296:24;:::i;:::-;1291:3;1284:37;1209:118;;:::o;1333:222::-;1426:4;1464:2;1453:9;1449:18;1441:26;;1477:71;1545:1;1534:9;1530:17;1521:6;1477:71;:::i;:::-;1333:222;;;;:::o;1642:117::-;1751:1;1748;1741:12;1888:122;1961:24;1979:5;1961:24;:::i;:::-;1954:5;1951:35;1941:63;;2000:1;1997;1990:12;1941:63;1888:122;:::o;2016:139::-;2062:5;2100:6;2087:20;2078:29;;2116:33;2143:5;2116:33;:::i;:::-;2016:139;;;;:::o;2161:329::-;2220:6;2269:2;2257:9;2248:7;2244:23;2240:32;2237:119;;;2275:79;;:::i;:::-;2237:119;2395:1;2420:53;2465:7;2456:6;2445:9;2441:22;2420:53;:::i;:::-;2410:63;;2366:117;2161:329;;;;:::o;2496:90::-;2530:7;2573:5;2566:13;2559:21;2548:32;;2496:90;;;:::o;2592:109::-;2673:21;2688:5;2673:21;:::i;:::-;2668:3;2661:34;2592:109;;:::o;2707:210::-;2794:4;2832:2;2821:9;2817:18;2809:26;;2845:65;2907:1;2896:9;2892:17;2883:6;2845:65;:::i;:::-;2707:210;;;;:::o;2923:77::-;2960:7;2989:5;2978:16;;2923:77;;;:::o;3006:122::-;3079:24;3097:5;3079:24;:::i;:::-;3072:5;3069:35;3059:63;;3118:1;3115;3108:12;3059:63;3006:122;:::o;3134:139::-;3180:5;3218:6;3205:20;3196:29;;3234:33;3261:5;3234:33;:::i;:::-;3134:139;;;;:::o;3279:329::-;3338:6;3387:2;3375:9;3366:7;3362:23;3358:32;3355:119;;;3393:79;;:::i;:::-;3355:119;3513:1;3538:53;3583:7;3574:6;3563:9;3559:22;3538:53;:::i;:::-;3528:63;;3484:117;3279:329;;;;:::o;3614:118::-;3701:24;3719:5;3701:24;:::i;:::-;3696:3;3689:37;3614:118;;:::o;3738:222::-;3831:4;3869:2;3858:9;3854:18;3846:26;;3882:71;3950:1;3939:9;3935:17;3926:6;3882:71;:::i;:::-;3738:222;;;;:::o;3966:154::-;4044:9;4077:37;4108:5;4077:37;:::i;:::-;4064:50;;3966:154;;;:::o;4126:187::-;4241:65;4300:5;4241:65;:::i;:::-;4236:3;4229:78;4126:187;;:::o;4319:278::-;4440:4;4478:2;4467:9;4463:18;4455:26;;4491:99;4587:1;4576:9;4572:17;4563:6;4491:99;:::i;:::-;4319:278;;;;:::o;4603:143::-;4670:9;4703:37;4734:5;4703:37;:::i;:::-;4690:50;;4603:143;;;:::o;4752:165::-;4856:54;4904:5;4856:54;:::i;:::-;4851:3;4844:67;4752:165;;:::o;4923:256::-;5033:4;5071:2;5060:9;5056:18;5048:26;;5084:88;5169:1;5158:9;5154:17;5145:6;5084:88;:::i;:::-;4923:256;;;;:::o;5185:143::-;5242:5;5273:6;5267:13;5258:22;;5289:33;5316:5;5289:33;:::i;:::-;5185:143;;;;:::o;5334:351::-;5404:6;5453:2;5441:9;5432:7;5428:23;5424:32;5421:119;;;5459:79;;:::i;:::-;5421:119;5579:1;5604:64;5660:7;5651:6;5640:9;5636:22;5604:64;:::i;:::-;5594:74;;5550:128;5334:351;;;;:::o;5691:332::-;5812:4;5850:2;5839:9;5835:18;5827:26;;5863:71;5931:1;5920:9;5916:17;5907:6;5863:71;:::i;:::-;5944:72;6012:2;6001:9;5997:18;5988:6;5944:72;:::i;:::-;5691:332;;;;;:::o;6029:147::-;6130:11;6167:3;6152:18;;6029:147;;;;:::o;6182:114::-;;:::o;6302:398::-;6461:3;6482:83;6563:1;6558:3;6482:83;:::i;:::-;6475:90;;6574:93;6663:3;6574:93;:::i;:::-;6692:1;6687:3;6683:11;6676:18;;6302:398;;;:::o;6706:379::-;6890:3;6912:147;7055:3;6912:147;:::i;:::-;6905:154;;7076:3;7069:10;;6706:379;;;:::o;7091:105::-;7127:7;7167:22;7160:5;7156:34;7145:45;;7091:105;;;:::o;7202:120::-;7274:23;7291:5;7274:23;:::i;:::-;7267:5;7264:34;7254:62;;7312:1;7309;7302:12;7254:62;7202:120;:::o;7328:141::-;7384:5;7415:6;7409:13;7400:22;;7431:32;7457:5;7431:32;:::i;:::-;7328:141;;;;:::o;7475:76::-;7511:7;7540:5;7529:16;;7475:76;;;:::o;7557:120::-;7629:23;7646:5;7629:23;:::i;:::-;7622:5;7619:34;7609:62;;7667:1;7664;7657:12;7609:62;7557:120;:::o;7683:141::-;7739:5;7770:6;7764:13;7755:22;;7786:32;7812:5;7786:32;:::i;:::-;7683:141;;;;:::o;7830:143::-;7887:5;7918:6;7912:13;7903:22;;7934:33;7961:5;7934:33;:::i;:::-;7830:143;;;;:::o;7979:971::-;8082:6;8090;8098;8106;8114;8163:3;8151:9;8142:7;8138:23;8134:33;8131:120;;;8170:79;;:::i;:::-;8131:120;8290:1;8315:63;8370:7;8361:6;8350:9;8346:22;8315:63;:::i;:::-;8305:73;;8261:127;8427:2;8453:63;8508:7;8499:6;8488:9;8484:22;8453:63;:::i;:::-;8443:73;;8398:128;8565:2;8591:64;8647:7;8638:6;8627:9;8623:22;8591:64;:::i;:::-;8581:74;;8536:129;8704:2;8730:64;8786:7;8777:6;8766:9;8762:22;8730:64;:::i;:::-;8720:74;;8675:129;8843:3;8870:63;8925:7;8916:6;8905:9;8901:22;8870:63;:::i;:::-;8860:73;;8814:129;7979:971;;;;;;;;:::o;8956:93::-;8992:7;9032:10;9025:5;9021:22;9010:33;;8956:93;;;:::o;9055:120::-;9127:23;9144:5;9127:23;:::i;:::-;9120:5;9117:34;9107:62;;9165:1;9162;9155:12;9107:62;9055:120;:::o;9181:141::-;9237:5;9268:6;9262:13;9253:22;;9284:32;9310:5;9284:32;:::i;:::-;9181:141;;;;:::o;9328:91::-;9364:7;9404:8;9397:5;9393:20;9382:31;;9328:91;;;:::o;9425:120::-;9497:23;9514:5;9497:23;:::i;:::-;9490:5;9487:34;9477:62;;9535:1;9532;9525:12;9477:62;9425:120;:::o;9551:141::-;9607:5;9638:6;9632:13;9623:22;;9654:32;9680:5;9654:32;:::i;:::-;9551:141;;;;:::o;9698:1587::-;9831:6;9839;9847;9855;9863;9871;9879;9887;9895;9944:3;9932:9;9923:7;9919:23;9915:33;9912:120;;;9951:79;;:::i;:::-;9912:120;10071:1;10096:63;10151:7;10142:6;10131:9;10127:22;10096:63;:::i;:::-;10086:73;;10042:127;10208:2;10234:63;10289:7;10280:6;10269:9;10265:22;10234:63;:::i;:::-;10224:73;;10179:128;10346:2;10372:63;10427:7;10418:6;10407:9;10403:22;10372:63;:::i;:::-;10362:73;;10317:128;10484:2;10510:63;10565:7;10556:6;10545:9;10541:22;10510:63;:::i;:::-;10500:73;;10455:128;10622:3;10649:63;10704:7;10695:6;10684:9;10680:22;10649:63;:::i;:::-;10639:73;;10593:129;10761:3;10788:63;10843:7;10834:6;10823:9;10819:22;10788:63;:::i;:::-;10778:73;;10732:129;10900:3;10927:63;10982:7;10973:6;10962:9;10958:22;10927:63;:::i;:::-;10917:73;;10871:129;11039:3;11066:63;11121:7;11112:6;11101:9;11097:22;11066:63;:::i;:::-;11056:73;;11010:129;11178:3;11205:63;11260:7;11251:6;11240:9;11236:22;11205:63;:::i;:::-;11195:73;;11149:129;9698:1587;;;;;;;;;;;:::o;11291:180::-;11339:77;11336:1;11329:88;11436:4;11433:1;11426:15;11460:4;11457:1;11450:15;11477:410;11517:7;11540:20;11558:1;11540:20;:::i;:::-;11535:25;;11574:20;11592:1;11574:20;:::i;:::-;11569:25;;11629:1;11626;11622:9;11651:30;11669:11;11651:30;:::i;:::-;11640:41;;11830:1;11821:7;11817:15;11814:1;11811:22;11791:1;11784:9;11764:83;11741:139;;11860:18;;:::i;:::-;11741:139;11525:362;11477:410;;;;:::o;11893:180::-;11941:77;11938:1;11931:88;12038:4;12035:1;12028:15;12062:4;12059:1;12052:15;12079:185;12119:1;12136:20;12154:1;12136:20;:::i;:::-;12131:25;;12170:20;12188:1;12170:20;:::i;:::-;12165:25;;12209:1;12199:35;;12214:18;;:::i;:::-;12199:35;12256:1;12253;12249:9;12244:14;;12079:185;;;;:::o;12270:191::-;12310:3;12329:20;12347:1;12329:20;:::i;:::-;12324:25;;12363:20;12381:1;12363:20;:::i;:::-;12358:25;;12406:1;12403;12399:9;12392:16;;12427:3;12424:1;12421:10;12418:36;;;12434:18;;:::i;:::-;12418:36;12270:191;;;;:::o;12467:169::-;12551:11;12585:6;12580:3;12573:19;12625:4;12620:3;12616:14;12601:29;;12467:169;;;;:::o;12642:181::-;12782:33;12778:1;12770:6;12766:14;12759:57;12642:181;:::o;12829:366::-;12971:3;12992:67;13056:2;13051:3;12992:67;:::i;:::-;12985:74;;13068:93;13157:3;13068:93;:::i;:::-;13186:2;13181:3;13177:12;13170:19;;12829:366;;;:::o;13201:419::-;13367:4;13405:2;13394:9;13390:18;13382:26;;13454:9;13448:4;13444:20;13440:1;13429:9;13425:17;13418:47;13482:131;13608:4;13482:131;:::i;:::-;13474:139;;13201:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "708800",
								"executionCost": "22852",
								"totalCost": "731652"
							},
							"external": {
								"Bankroll()": "infinite",
								"ChainLinkVRF()": "2552",
								"IChainLinkVRF()": "infinite",
								"LINK_ETH_FEED()": "infinite",
								"VRFFees()": "2447",
								"_trustedForwarder()": "2531",
								"getVRFFee(uint256)": "infinite",
								"isTrustedForwarder(address)": "2845",
								"transferFees(address)": "infinite"
							},
							"internal": {
								"_msgSender()": "infinite",
								"_payVRFFee(uint256)": "infinite",
								"_refundExcessValue(uint256)": "infinite",
								"_requestRandomWords(uint32)": "infinite",
								"_transferHouseEdgePvP(uint256,address)": "infinite",
								"_transferPayout(address,uint256,address)": "infinite",
								"_transferPayoutPvP(address,uint256,address)": "infinite",
								"_transferToBankroll(address,uint256)": "infinite",
								"_transferWager(address,uint256,uint256,address)": "infinite",
								"_transferWagerPvP(address,uint256,uint256)": "infinite",
								"_transferWagerPvPNoVRF(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1220,
									"end": 10635,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 10635,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ecce7068ac551b06790010a6380579a06b83d9d50a0cf58277b80203433fb7264736f6c63430008150033",
									".code": [
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "8BD16114"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "8BD16114"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "8D7C16D2"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "953995EA"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "AD178361"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "D0BCFC0C"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "4DD189D5"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "56C022BB"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "572B6C05"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "63DC4EF5"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 10635,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1491,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1491,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1355,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1355,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 9967,
											"end": 10095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9967,
											"end": 10095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9967,
											"end": 10095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5443,
											"end": 5820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5443,
											"end": 5820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4106,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 4106,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4106,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1294,
											"end": 1316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1294,
											"end": 1316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1443,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1443,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1535,
											"end": 1560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1535,
											"end": 1560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10035,
											"end": 10039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10088,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10058,
											"end": 10088,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10088,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10058,
											"end": 10088,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10088,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10051,
											"end": 10088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10051,
											"end": 10088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5527,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5527,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5535,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5527,
											"end": 5535,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5535,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5527,
											"end": 5535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5527,
											"end": 5544,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "893D20E8"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5527,
											"end": 5546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5527,
											"end": 5546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5513,
											"end": 5546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5523,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5513,
											"end": 5546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5546,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5509,
											"end": 5621,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5578,
											"end": 5586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5586,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5578,
											"end": 5586,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5586,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5578,
											"end": 5586,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5578,
											"end": 5595,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "893D20E8"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5597,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5578,
											"end": 5597,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5578,
											"end": 5597,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5609,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "23295F0E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5569,
											"end": 5610,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5610,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5509,
											"end": 5621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5644,
											"end": 5651,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5661,
											"end": 5672,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5661,
											"end": 5672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5661,
											"end": 5672,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5661,
											"end": 5672,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5719,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5701,
											"end": 5726,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5737,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 5701,
											"end": 5742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5757,
											"end": 5764,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5752,
											"end": 5814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5752,
											"end": 5814,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5803,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5752,
											"end": 5814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5752,
											"end": 5814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5820,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5820,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4204,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4243,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4214,
											"end": 4243,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4243,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 4214,
											"end": 4245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4214,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4245,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4293,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4352,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4352,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4352,
											"name": "PUSH",
											"source": 7,
											"value": "5FBBC0D2"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4313,
											"end": 4354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4313,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4537,
											"end": 4541,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4468,
											"end": 4498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4460,
											"end": 4499,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4460,
											"end": 4499,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4441,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 4437,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 4437,
											"end": 4499,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4437,
											"end": 4499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4499,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 4437,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4437,
											"end": 4533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4437,
											"end": 4533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4533,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4437,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4436,
											"end": 4541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4436,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4541,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4436,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4410,
											"end": 4419,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "GASPRICE",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4383,
											"end": 4420,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4383,
											"end": 4420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4420,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4383,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4383,
											"end": 4542,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4383,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4542,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4383,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4542,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4178,
											"end": 4549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4178,
											"end": 4549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 485,
											"end": 636,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 485,
											"end": 636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 560,
											"end": 569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 624,
											"end": 629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 593,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 593,
											"end": 630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 593,
											"end": 630,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 593,
											"end": 630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 580,
											"end": 630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 485,
											"end": 636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 485,
											"end": 636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 485,
											"end": 636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 485,
											"end": 636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 642,
											"end": 823,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 642,
											"end": 823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 754,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 810,
											"end": 815,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 754,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 754,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 754,
											"end": 816,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 754,
											"end": 816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 752,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 742,
											"end": 817,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 642,
											"end": 823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 642,
											"end": 823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 642,
											"end": 823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 1101,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 829,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 947,
											"end": 951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 970,
											"end": 988,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 962,
											"end": 988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 962,
											"end": 988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1091,
											"end": 1092,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1067,
											"end": 1073,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 998,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 829,
											"end": 1101,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 829,
											"end": 1101,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 1101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 1101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 1101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1203,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1107,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1191,
											"end": 1196,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1173,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1209,
											"end": 1327,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1209,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1296,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1314,
											"end": 1319,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1296,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1296,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1296,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1296,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1294,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1321,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1209,
											"end": 1327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1209,
											"end": 1327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1209,
											"end": 1327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1555,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1466,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1467,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1477,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1545,
											"end": 1546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1543,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1527,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1477,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1477,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1477,
											"end": 1548,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1477,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1555,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1555,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1642,
											"end": 1759,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1642,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1741,
											"end": 1753,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 2010,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1888,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1979,
											"end": 1984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1961,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 1959,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 1986,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1941,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1941,
											"end": 2004,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 1998,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1941,
											"end": 2004,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1941,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 2010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 2010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2155,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2016,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2107,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2116,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2116,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2116,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2116,
											"end": 2149,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2116,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2155,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2155,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2490,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2161,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2275,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2275,
											"end": 2354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2354,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2275,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2462,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2454,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2463,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2420,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2490,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2490,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2586,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2496,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2579,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2559,
											"end": 2580,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2580,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2586,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2701,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2592,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2688,
											"end": 2693,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2673,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2694,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2673,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2917,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2707,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2834,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2817,
											"end": 2835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2845,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2905,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2845,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2845,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2845,
											"end": 2910,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2845,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 3000,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2923,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2960,
											"end": 2967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 3000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 3000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 3000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 3000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3128,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 3006,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3097,
											"end": 3102,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 3079,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3103,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3079,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3072,
											"end": 3077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3104,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 3059,
											"end": 3122,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3118,
											"end": 3119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3115,
											"end": 3116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3120,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3122,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 3059,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3273,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3134,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3225,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3234,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 3261,
											"end": 3266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3234,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 3234,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3234,
											"end": 3267,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 3234,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3273,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3273,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3273,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3273,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3608,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3279,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3338,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3373,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3385,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3390,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3474,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3355,
											"end": 3474,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3393,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3393,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3393,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3474,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3355,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 3583,
											"end": 3590,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 3580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3563,
											"end": 3572,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3581,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3538,
											"end": 3591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3591,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3484,
											"end": 3601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3608,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3608,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3732,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3614,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3719,
											"end": 3724,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 3701,
											"end": 3725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3725,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3701,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3696,
											"end": 3699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3960,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3738,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3831,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3871,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3948,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3882,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 3953,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 3882,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3960,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3960,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 4120,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 3966,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4044,
											"end": 4053,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4077,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 4077,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4077,
											"end": 4114,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4077,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 4120,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 4120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 4120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 4120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4126,
											"end": 4313,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4126,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4241,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4306,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4241,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4126,
											"end": 4313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4126,
											"end": 4313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4126,
											"end": 4313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4597,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4319,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4480,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4467,
											"end": 4476,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4463,
											"end": 4481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4455,
											"end": 4481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4455,
											"end": 4481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4585,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4491,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4590,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 4491,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4597,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4746,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4603,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4734,
											"end": 4739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 4703,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4703,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4690,
											"end": 4740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4690,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4917,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4752,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 4904,
											"end": 4909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4856,
											"end": 4910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4910,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 4856,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4851,
											"end": 4854,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4844,
											"end": 4911,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 5179,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 4923,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5033,
											"end": 5037,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5073,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5060,
											"end": 5069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5056,
											"end": 5074,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5048,
											"end": 5074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5048,
											"end": 5074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5084,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 5169,
											"end": 5170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5167,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5145,
											"end": 5151,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5084,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5084,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5084,
											"end": 5172,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 5084,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 5179,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 5179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 5179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 5179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 5179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5328,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 5185,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5247,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5279,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5289,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 5316,
											"end": 5321,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5289,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5289,
											"end": 5322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5289,
											"end": 5322,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 5289,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5328,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5328,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5685,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5334,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5450,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5439,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5424,
											"end": 5456,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5540,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 5421,
											"end": 5540,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5459,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 5459,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5459,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5459,
											"end": 5538,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 5459,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5540,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 5421,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5649,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5604,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 5604,
											"end": 5668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5604,
											"end": 5668,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 5604,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5668,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5550,
											"end": 5678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 6023,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5691,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5839,
											"end": 5848,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5853,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 5931,
											"end": 5932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5929,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5916,
											"end": 5933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5907,
											"end": 5913,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5863,
											"end": 5934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5934,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 5863,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 6012,
											"end": 6014,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6001,
											"end": 6010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 5994,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5944,
											"end": 6016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6016,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5944,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 6023,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 6023,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 6023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 6023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 6023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 6023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6176,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 6029,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6130,
											"end": 6141,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6152,
											"end": 6170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6152,
											"end": 6170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6176,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6176,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6182,
											"end": 6296,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 6182,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6182,
											"end": 6296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6182,
											"end": 6296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6302,
											"end": 6700,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 6302,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6482,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 6563,
											"end": 6564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6561,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6482,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 6482,
											"end": 6565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6482,
											"end": 6565,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 6482,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6565,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6574,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 6663,
											"end": 6666,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6574,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 6574,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6574,
											"end": 6667,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 6574,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6692,
											"end": 6693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6683,
											"end": 6694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6302,
											"end": 6700,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6302,
											"end": 6700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6302,
											"end": 6700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6302,
											"end": 6700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 7085,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6706,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 6893,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 7055,
											"end": 7058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6912,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 6912,
											"end": 7059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6912,
											"end": 7059,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 6912,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6905,
											"end": 7059,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6905,
											"end": 7059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7076,
											"end": 7079,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7069,
											"end": 7079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7069,
											"end": 7079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 7085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 7085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 7085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 7085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7196,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 7091,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7127,
											"end": 7134,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7167,
											"end": 7189,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7160,
											"end": 7165,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7156,
											"end": 7190,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7145,
											"end": 7190,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7145,
											"end": 7190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7202,
											"end": 7322,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7202,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 7291,
											"end": 7296,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 7274,
											"end": 7297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7297,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 7274,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7264,
											"end": 7298,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 7254,
											"end": 7316,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7310,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7302,
											"end": 7314,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7316,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 7254,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7202,
											"end": 7322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7202,
											"end": 7322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7469,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 7328,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 7422,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7400,
											"end": 7422,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7400,
											"end": 7422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7431,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 7457,
											"end": 7462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7431,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7431,
											"end": 7463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7431,
											"end": 7463,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 7431,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7469,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7475,
											"end": 7551,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 7475,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7511,
											"end": 7518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7475,
											"end": 7551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7475,
											"end": 7551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7475,
											"end": 7551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7475,
											"end": 7551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7557,
											"end": 7677,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 7557,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7629,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 7646,
											"end": 7651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7629,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 7629,
											"end": 7652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7629,
											"end": 7652,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 7629,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7622,
											"end": 7627,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7619,
											"end": 7653,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 7609,
											"end": 7671,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7667,
											"end": 7668,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7665,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7671,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 7609,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7557,
											"end": 7677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7557,
											"end": 7677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 7824,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 7683,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7739,
											"end": 7744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7770,
											"end": 7776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7764,
											"end": 7777,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7755,
											"end": 7777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7755,
											"end": 7777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7786,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 7812,
											"end": 7817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7786,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 7786,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7786,
											"end": 7818,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 7786,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 7824,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 7824,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 7824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 7824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 7824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7973,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 7830,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7887,
											"end": 7892,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7924,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7912,
											"end": 7925,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7903,
											"end": 7925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7903,
											"end": 7925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 7961,
											"end": 7966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 7934,
											"end": 7967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7967,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 7934,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7973,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7973,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8950,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 7979,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 8088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8090,
											"end": 8096,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8098,
											"end": 8104,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8114,
											"end": 8120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8166,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 8151,
											"end": 8160,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8142,
											"end": 8149,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8138,
											"end": 8161,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8167,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8251,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 8131,
											"end": 8251,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8170,
											"end": 8249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 8170,
											"end": 8249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 8170,
											"end": 8249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8170,
											"end": 8249,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 8170,
											"end": 8249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8251,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 8131,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8315,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 8370,
											"end": 8377,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8361,
											"end": 8367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8359,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8346,
											"end": 8368,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 8315,
											"end": 8378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 8315,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8305,
											"end": 8378,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8305,
											"end": 8378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8261,
											"end": 8388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8427,
											"end": 8429,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 8508,
											"end": 8515,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8499,
											"end": 8505,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8497,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8484,
											"end": 8506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8453,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 8453,
											"end": 8516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8453,
											"end": 8516,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 8453,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8443,
											"end": 8516,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8443,
											"end": 8516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8398,
											"end": 8526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8565,
											"end": 8567,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8591,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 8647,
											"end": 8654,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8638,
											"end": 8644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8627,
											"end": 8636,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8623,
											"end": 8645,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8591,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 8591,
											"end": 8655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8591,
											"end": 8655,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 8591,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8655,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8536,
											"end": 8665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8704,
											"end": 8706,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8730,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 8786,
											"end": 8793,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8766,
											"end": 8775,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8762,
											"end": 8784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 8730,
											"end": 8794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8794,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 8730,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8720,
											"end": 8794,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8720,
											"end": 8794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8675,
											"end": 8804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8843,
											"end": 8846,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8870,
											"end": 8933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 8925,
											"end": 8932,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8922,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8905,
											"end": 8914,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8901,
											"end": 8923,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8870,
											"end": 8933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 8870,
											"end": 8933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8870,
											"end": 8933,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 8870,
											"end": 8933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8933,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8814,
											"end": 8943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8950,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8950,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8950,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8950,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8950,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8956,
											"end": 9049,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 8956,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8992,
											"end": 8999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9032,
											"end": 9042,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9025,
											"end": 9030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9021,
											"end": 9043,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9010,
											"end": 9043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9010,
											"end": 9043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8956,
											"end": 9049,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8956,
											"end": 9049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8956,
											"end": 9049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8956,
											"end": 9049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9055,
											"end": 9175,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 9055,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9127,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 9144,
											"end": 9149,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9127,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9127,
											"end": 9150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9127,
											"end": 9150,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 9127,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9120,
											"end": 9125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9117,
											"end": 9151,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9107,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 9107,
											"end": 9169,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9165,
											"end": 9166,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9163,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9155,
											"end": 9167,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9107,
											"end": 9169,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 9107,
											"end": 9169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9055,
											"end": 9175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9055,
											"end": 9175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9181,
											"end": 9322,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 9181,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9237,
											"end": 9242,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9268,
											"end": 9274,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9262,
											"end": 9275,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9253,
											"end": 9275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9253,
											"end": 9275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9284,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 9310,
											"end": 9315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9284,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 9284,
											"end": 9316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9284,
											"end": 9316,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 9284,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9181,
											"end": 9322,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9181,
											"end": 9322,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9181,
											"end": 9322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9181,
											"end": 9322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9181,
											"end": 9322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9328,
											"end": 9419,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 9328,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9364,
											"end": 9371,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9404,
											"end": 9412,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 9397,
											"end": 9402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9413,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9413,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9328,
											"end": 9419,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9328,
											"end": 9419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9328,
											"end": 9419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9328,
											"end": 9419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9425,
											"end": 9545,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 9425,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 9514,
											"end": 9519,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 9497,
											"end": 9520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9520,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 9497,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9490,
											"end": 9495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9487,
											"end": 9521,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9477,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 9477,
											"end": 9539,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9535,
											"end": 9536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9532,
											"end": 9533,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9525,
											"end": 9537,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9477,
											"end": 9539,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 9477,
											"end": 9539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9425,
											"end": 9545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9425,
											"end": 9545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9551,
											"end": 9692,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 9551,
											"end": 9692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9607,
											"end": 9612,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9638,
											"end": 9644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9632,
											"end": 9645,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 9680,
											"end": 9685,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 9654,
											"end": 9686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9686,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 9654,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9551,
											"end": 9692,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9551,
											"end": 9692,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9551,
											"end": 9692,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9551,
											"end": 9692,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9551,
											"end": 9692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9831,
											"end": 9837,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9839,
											"end": 9845,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9847,
											"end": 9853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9861,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9863,
											"end": 9869,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9871,
											"end": 9877,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 9893,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9895,
											"end": 9901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9944,
											"end": 9947,
											"name": "PUSH",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 9932,
											"end": 9941,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 9923,
											"end": 9930,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 9919,
											"end": 9942,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9915,
											"end": 9948,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9912,
											"end": 10032,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9912,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 9912,
											"end": 10032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9951,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9951,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 9951,
											"end": 10030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9951,
											"end": 10030,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9951,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9912,
											"end": 10032,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 9912,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10071,
											"end": 10072,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10096,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 10151,
											"end": 10158,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10131,
											"end": 10140,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10127,
											"end": 10149,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10096,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 10096,
											"end": 10159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10096,
											"end": 10159,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 10096,
											"end": 10159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10086,
											"end": 10159,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 10086,
											"end": 10159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10208,
											"end": 10210,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10234,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 10289,
											"end": 10296,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10269,
											"end": 10278,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10234,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 10234,
											"end": 10297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10234,
											"end": 10297,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 10234,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10224,
											"end": 10297,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 10224,
											"end": 10297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10179,
											"end": 10307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10348,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10372,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 10427,
											"end": 10434,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 10418,
											"end": 10424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10407,
											"end": 10416,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10403,
											"end": 10425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10372,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 10372,
											"end": 10435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10372,
											"end": 10435,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 10372,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10362,
											"end": 10435,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 10362,
											"end": 10435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10484,
											"end": 10486,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10510,
											"end": 10573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 10565,
											"end": 10572,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10562,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10545,
											"end": 10554,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10541,
											"end": 10563,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10510,
											"end": 10573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 10510,
											"end": 10573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10510,
											"end": 10573,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 10510,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10573,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10455,
											"end": 10583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10622,
											"end": 10625,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 10649,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10704,
											"end": 10711,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 10695,
											"end": 10701,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10684,
											"end": 10693,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10680,
											"end": 10702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10649,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 10649,
											"end": 10712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10649,
											"end": 10712,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10649,
											"end": 10712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10639,
											"end": 10712,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 10639,
											"end": 10712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10593,
											"end": 10722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10761,
											"end": 10764,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 10788,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 10843,
											"end": 10850,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 10834,
											"end": 10840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10823,
											"end": 10832,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10841,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 10788,
											"end": 10851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 10851,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 10788,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10778,
											"end": 10851,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10778,
											"end": 10851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10900,
											"end": 10903,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 10927,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 10982,
											"end": 10989,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10962,
											"end": 10971,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10958,
											"end": 10980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10927,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 10927,
											"end": 10990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10927,
											"end": 10990,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 10927,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10917,
											"end": 10990,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10917,
											"end": 10990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10871,
											"end": 11000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11039,
											"end": 11042,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 11066,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 11121,
											"end": 11128,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 11112,
											"end": 11118,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11101,
											"end": 11110,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 11097,
											"end": 11119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11066,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 11066,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11066,
											"end": 11129,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 11066,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11056,
											"end": 11129,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11056,
											"end": 11129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11139,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11178,
											"end": 11181,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11205,
											"end": 11268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 11260,
											"end": 11267,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11240,
											"end": 11249,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 11236,
											"end": 11258,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11205,
											"end": 11268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 11205,
											"end": 11268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11205,
											"end": 11268,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 11205,
											"end": 11268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11195,
											"end": 11268,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11195,
											"end": 11268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11149,
											"end": 11278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 11285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11291,
											"end": 11471,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 11291,
											"end": 11471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11339,
											"end": 11416,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11336,
											"end": 11337,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11329,
											"end": 11417,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11436,
											"end": 11440,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 11433,
											"end": 11434,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11426,
											"end": 11441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11460,
											"end": 11464,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11457,
											"end": 11458,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11477,
											"end": 11887,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 11477,
											"end": 11887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11517,
											"end": 11524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11540,
											"end": 11560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 11558,
											"end": 11559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 11540,
											"end": 11560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11560,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 11540,
											"end": 11560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11535,
											"end": 11560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11535,
											"end": 11560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 11592,
											"end": 11593,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 11574,
											"end": 11594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11594,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 11574,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11569,
											"end": 11594,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11569,
											"end": 11594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11630,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11626,
											"end": 11627,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11622,
											"end": 11631,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11651,
											"end": 11681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 11669,
											"end": 11680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11651,
											"end": 11681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 11651,
											"end": 11681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11651,
											"end": 11681,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 11651,
											"end": 11681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11640,
											"end": 11681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11640,
											"end": 11681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11830,
											"end": 11831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11821,
											"end": 11828,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11817,
											"end": 11832,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11814,
											"end": 11815,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11811,
											"end": 11833,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11791,
											"end": 11792,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11784,
											"end": 11793,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11764,
											"end": 11847,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11741,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 11741,
											"end": 11880,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11860,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 11860,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 11860,
											"end": 11878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11860,
											"end": 11878,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 11860,
											"end": 11878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11741,
											"end": 11880,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 11741,
											"end": 11880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11525,
											"end": 11887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11477,
											"end": 11887,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11477,
											"end": 11887,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11477,
											"end": 11887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11477,
											"end": 11887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11477,
											"end": 11887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11893,
											"end": 12073,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 11893,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11941,
											"end": 12018,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11938,
											"end": 11939,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11931,
											"end": 12019,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12038,
											"end": 12042,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 12035,
											"end": 12036,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12028,
											"end": 12043,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12062,
											"end": 12066,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12059,
											"end": 12060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12052,
											"end": 12067,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12079,
											"end": 12264,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 12079,
											"end": 12264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12119,
											"end": 12120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12136,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 12154,
											"end": 12155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12136,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 12136,
											"end": 12156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12136,
											"end": 12156,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 12136,
											"end": 12156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12131,
											"end": 12156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12131,
											"end": 12156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 12188,
											"end": 12189,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 12170,
											"end": 12190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12190,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 12170,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12165,
											"end": 12190,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12165,
											"end": 12190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12209,
											"end": 12210,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12199,
											"end": 12234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 12199,
											"end": 12234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 12214,
											"end": 12232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12199,
											"end": 12234,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 12199,
											"end": 12234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12256,
											"end": 12257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12253,
											"end": 12254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12249,
											"end": 12258,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12244,
											"end": 12258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12244,
											"end": 12258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12079,
											"end": 12264,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12079,
											"end": 12264,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12079,
											"end": 12264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12079,
											"end": 12264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12079,
											"end": 12264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12461,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 12270,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12310,
											"end": 12313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12329,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 12347,
											"end": 12348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12329,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 12329,
											"end": 12349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12329,
											"end": 12349,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 12329,
											"end": 12349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12324,
											"end": 12349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12324,
											"end": 12349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12363,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 12381,
											"end": 12382,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12363,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 12363,
											"end": 12383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12363,
											"end": 12383,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 12363,
											"end": 12383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12358,
											"end": 12383,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12358,
											"end": 12383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12406,
											"end": 12407,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12403,
											"end": 12404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12399,
											"end": 12408,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12392,
											"end": 12408,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12392,
											"end": 12408,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12427,
											"end": 12430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12424,
											"end": 12425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12421,
											"end": 12431,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12454,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 12418,
											"end": 12454,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 12434,
											"end": 12452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12454,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 12418,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12461,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12461,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12467,
											"end": 12636,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 12467,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12551,
											"end": 12562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12585,
											"end": 12591,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12580,
											"end": 12583,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12573,
											"end": 12592,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12625,
											"end": 12629,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12620,
											"end": 12623,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12616,
											"end": 12630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12601,
											"end": 12630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12601,
											"end": 12630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12467,
											"end": 12636,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12467,
											"end": 12636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12467,
											"end": 12636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12467,
											"end": 12636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12467,
											"end": 12636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12642,
											"end": 12823,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 12642,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12782,
											"end": 12815,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12778,
											"end": 12779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12770,
											"end": 12776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12766,
											"end": 12780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12759,
											"end": 12816,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12642,
											"end": 12823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12642,
											"end": 12823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12829,
											"end": 13195,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 12829,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12971,
											"end": 12974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12992,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 13056,
											"end": 13058,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13051,
											"end": 13054,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12992,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 12992,
											"end": 13059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12992,
											"end": 13059,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 12992,
											"end": 13059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12985,
											"end": 13059,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12985,
											"end": 13059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13068,
											"end": 13161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 13157,
											"end": 13160,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13068,
											"end": 13161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 13068,
											"end": 13161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13068,
											"end": 13161,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 13068,
											"end": 13161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13186,
											"end": 13188,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13181,
											"end": 13184,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13177,
											"end": 13189,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13170,
											"end": 13189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13170,
											"end": 13189,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12829,
											"end": 13195,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12829,
											"end": 13195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12829,
											"end": 13195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12829,
											"end": 13195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13201,
											"end": 13620,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 13201,
											"end": 13620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13367,
											"end": 13371,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13405,
											"end": 13407,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13394,
											"end": 13403,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13390,
											"end": 13408,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13454,
											"end": 13463,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13448,
											"end": 13452,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13444,
											"end": 13464,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13440,
											"end": 13441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13429,
											"end": 13438,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13418,
											"end": 13465,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13482,
											"end": 13613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 13608,
											"end": 13612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13482,
											"end": 13613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 13482,
											"end": 13613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13482,
											"end": 13613,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 13482,
											"end": 13613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13474,
											"end": 13613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13474,
											"end": 13613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13201,
											"end": 13620,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13201,
											"end": 13620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13201,
											"end": 13620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13201,
											"end": 13620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"Common.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Bankroll()": "d0bcfc0c",
							"ChainLinkVRF()": "953995ea",
							"IChainLinkVRF()": "4dd189d5",
							"LINK_ETH_FEED()": "ad178361",
							"VRFFees()": "8d7c16d2",
							"_trustedForwarder()": "56c022bb",
							"getVRFFee(uint256)": "8bd16114",
							"isTrustedForwarder(address)": "572b6c05",
							"transferFees(address)": "63dc4ef5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"}],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotApprovedBankroll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"}],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"suspensionTime\",\"type\":\"uint256\"}],\"name\":\"PlayerSuspended\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RefundFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroWager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Bankroll\",\"outputs\":[{\"internalType\":\"contract IBankRoll\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ChainLinkVRF\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IChainLinkVRF\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK_ETH_FEED\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VRFFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasAmount\",\"type\":\"uint256\"}],\"name\":\"getVRFFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getVRFFee(uint256)\":{\"details\":\"calculates in form of native token the fee charged by chainlink VRF\",\"returns\":{\"fee\":\"amount of fee user has to pay\"}},\"transferFees(address)\":{\"details\":\"function to transfer VRF fees acumulated in the contract to the Bankroll Can only be called by owner\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Common.sol\":\"Common\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"Common.sol\":{\"keccak256\":\"0xd96bbe24947a125b9e0b956b333bceb62a0da5f983145fe68349ac2ee44e325f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4b48bfb9aaf17b1b4869757a672c4639f5c6f6c16ae0aa4bfa6c49eecbd3bec7\",\"dweb:/ipfs/QmTAaMJCDojLTvZgUNH42VHBGDUTAw1i9yfgJraA6a7oZp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 152,
								"contract": "Common.sol:Common",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 943,
								"contract": "Common.sol:Common",
								"label": "VRFFees",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 945,
								"contract": "Common.sol:Common",
								"label": "ChainLinkVRF",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 947,
								"contract": "Common.sol:Common",
								"label": "_trustedForwarder",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 953,
								"contract": "Common.sol:Common",
								"label": "LINK_ETH_FEED",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 956,
								"contract": "Common.sol:Common",
								"label": "IChainLinkVRF",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IVRFCoordinatorV2)935"
							},
							{
								"astId": 959,
								"contract": "Common.sol:Common",
								"label": "Bankroll",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IBankRoll)911"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IBankRoll)911": {
								"encoding": "inplace",
								"label": "contract IBankRoll",
								"numberOfBytes": "20"
							},
							"t_contract(IVRFCoordinatorV2)935": {
								"encoding": "inplace",
								"label": "contract IVRFCoordinatorV2",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBankRoll": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "game",
									"type": "address"
								}
							],
							"name": "getIsGame",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "game",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "getIsValidWager",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "isPlayerSuspended",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "payout",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "transferPayout",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getIsGame(address)": "298729d8",
							"getIsValidWager(address,address)": "bfd7f9cc",
							"getOwner()": "893d20e8",
							"isPlayerSuspended(address)": "0a5748a8",
							"transferPayout(address,uint256,address)": "6c025ec2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"}],\"name\":\"getIsGame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getIsValidWager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"isPlayerSuspended\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferPayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Common.sol\":\"IBankRoll\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"Common.sol\":{\"keccak256\":\"0xd96bbe24947a125b9e0b956b333bceb62a0da5f983145fe68349ac2ee44e325f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4b48bfb9aaf17b1b4869757a672c4639f5c6f6c16ae0aa4bfa6c49eecbd3bec7\",\"dweb:/ipfs/QmTAaMJCDojLTvZgUNH42VHBGDUTAw1i9yfgJraA6a7oZp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IVRFCoordinatorV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "acceptSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "addConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "cancelSubscription",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createSubscription",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFeeConfig",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								},
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								},
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								},
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRequestConfig",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "getSubscription",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "balance",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "reqCount",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "consumers",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "pendingRequestExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "removeConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "keyHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "uint16",
									"name": "minimumRequestConfirmations",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "callbackGasLimit",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "numWords",
									"type": "uint32"
								}
							],
							"name": "requestRandomWords",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "requestSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint64)": {
								"details": "will revert if original owner of subId has not requested that msg.sender become the new owner.",
								"params": {
									"subId": "- ID of the subscription"
								}
							},
							"addConsumer(uint64,address)": {
								"params": {
									"consumer": "- New consumer which can use the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"cancelSubscription(uint64,address)": {
								"params": {
									"subId": "- ID of the subscription",
									"to": "- Where to send the remaining LINK to"
								}
							},
							"createSubscription()": {
								"details": "You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));",
								"returns": {
									"subId": "- A unique subscription id."
								}
							},
							"getRequestConfig()": {
								"returns": {
									"_0": "minimumRequestConfirmations global min for request confirmations",
									"_1": "maxGasLimit global max for request gas limit",
									"_2": "s_provingKeyHashes list of registered key hashes"
								}
							},
							"getSubscription(uint64)": {
								"params": {
									"subId": "- ID of the subscription"
								},
								"returns": {
									"balance": "- LINK balance of the subscription in juels.",
									"consumers": "- list of consumer address which are able to use this subscription.",
									"owner": "- owner of the subscription.",
									"reqCount": "- number of requests for this subscription, determines fee tier."
								}
							},
							"removeConsumer(uint64,address)": {
								"params": {
									"consumer": "- Consumer to remove from the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": {
								"params": {
									"callbackGasLimit": "- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]",
									"keyHash": "- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.",
									"minimumRequestConfirmations": "- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].",
									"numWords": "- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.",
									"subId": "- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."
								},
								"returns": {
									"requestId": "- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."
								}
							},
							"requestSubscriptionOwnerTransfer(uint64,address)": {
								"params": {
									"newOwner": "- proposed new owner of the subscription",
									"subId": "- ID of the subscription"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptSubscriptionOwnerTransfer(uint64)": "82359740",
							"addConsumer(uint64,address)": "7341c10c",
							"cancelSubscription(uint64,address)": "d7ae1d30",
							"createSubscription()": "a21a23e4",
							"getFeeConfig()": "5fbbc0d2",
							"getRequestConfig()": "00012291",
							"getSubscription(uint64)": "a47c7696",
							"pendingRequestExists(uint64)": "e82ad7d4",
							"removeConsumer(uint64,address)": "9f87fad7",
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": "5d3b1d30",
							"requestSubscriptionOwnerTransfer(uint64,address)": "04c357cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeConfig\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Common.sol\":\"IVRFCoordinatorV2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"Common.sol\":{\"keccak256\":\"0xd96bbe24947a125b9e0b956b333bceb62a0da5f983145fe68349ac2ee44e325f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4b48bfb9aaf17b1b4869757a672c4639f5c6f6c16ae0aa4bfa6c49eecbd3bec7\",\"dweb:/ipfs/QmTAaMJCDojLTvZgUNH42VHBGDUTAw1i9yfgJraA6a7oZp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint64)": {
								"notice": "Request subscription owner transfer."
							},
							"addConsumer(uint64,address)": {
								"notice": "Add a consumer to a VRF subscription."
							},
							"cancelSubscription(uint64,address)": {
								"notice": "Cancel a subscription"
							},
							"createSubscription()": {
								"notice": "Create a VRF subscription."
							},
							"getRequestConfig()": {
								"notice": "Get configuration relevant for making requests"
							},
							"getSubscription(uint64)": {
								"notice": "Get a VRF subscription."
							},
							"removeConsumer(uint64,address)": {
								"notice": "Remove a consumer from a VRF subscription."
							},
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": {
								"notice": "Request a set of random words."
							},
							"requestSubscriptionOwnerTransfer(uint64,address)": {
								"notice": "Request subscription owner transfer."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
					"exportedSymbols": {
						"VRFCoordinatorV2Interface": [
							141
						]
					},
					"id": 142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VRFCoordinatorV2Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 141,
							"linearizedBaseContracts": [
								141
							],
							"name": "VRFCoordinatorV2Interface",
							"nameLocation": "67:25:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "97:267:1",
										"text": " @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"
									},
									"functionSelector": "00012291",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestConfig",
									"nameLocation": "376:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "418:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 50,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "418:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "426:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 52,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "426:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "434:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 54,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "434:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 55,
													"nodeType": "ArrayTypeName",
													"src": "434:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:34:1"
									},
									"scope": 141,
									"src": "367:85:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "456:1511:1",
										"text": " @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."
									},
									"functionSelector": "5d3b1d30",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomWords",
									"nameLocation": "1979:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "keyHash",
												"nameLocation": "2011:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2003:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 60,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "2031:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2024:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 62,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2024:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "minimumRequestConfirmations",
												"nameLocation": "2049:27:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2042:34:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 64,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2042:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "callbackGasLimit",
												"nameLocation": "2089:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2082:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 66,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2082:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "numWords",
												"nameLocation": "2118:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2111:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 68,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2111:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:133:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2157:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2149:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:19:1"
									},
									"scope": 141,
									"src": "1970:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2172:384:1",
										"text": " @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"
									},
									"functionSelector": "a21a23e4",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createSubscription",
									"nameLocation": "2568:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2586:2:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "2614:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2607:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 77,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2607:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:14:1"
									},
									"scope": 141,
									"src": "2559:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2625:381:1",
										"text": " @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."
									},
									"functionSelector": "a47c7696",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSubscription",
									"nameLocation": "3018:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3046:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3039:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 82,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3039:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3033:22:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3086:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3079:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 85,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3079:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "reqCount",
												"nameLocation": "3102:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3095:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 87,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3095:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3120:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3112:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "consumers",
												"nameLocation": "3144:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3127:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 91,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3127:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 92,
													"nodeType": "ArrayTypeName",
													"src": "3127:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3078:76:1"
									},
									"scope": 141,
									"src": "3009:146:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "3159:164:1",
										"text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"
									},
									"functionSelector": "04c357cb",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestSubscriptionOwnerTransfer",
									"nameLocation": "3335:32:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3375:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3368:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 97,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3368:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3390:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3382:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3367:32:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3408:0:1"
									},
									"scope": 141,
									"src": "3326:83:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3413:212:1",
										"text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."
									},
									"functionSelector": "82359740",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptSubscriptionOwnerTransfer",
									"nameLocation": "3637:31:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3676:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3669:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 105,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3669:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3668:14:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:0:1"
									},
									"scope": 141,
									"src": "3628:64:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "3696:170:1",
										"text": " @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"
									},
									"functionSelector": "7341c10c",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addConsumer",
									"nameLocation": "3878:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3897:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3890:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 111,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3890:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "3912:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3904:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3889:32:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3930:0:1"
									},
									"scope": 141,
									"src": "3869:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "3935:172:1",
										"text": " @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"
									},
									"functionSelector": "9f87fad7",
									"id": 125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeConsumer",
									"nameLocation": "4119:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4141:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "4134:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 119,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4134:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "4156:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "4148:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4148:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4133:32:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4174:0:1"
									},
									"scope": 141,
									"src": "4110:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "4179:140:1",
										"text": " @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"
									},
									"functionSelector": "d7ae1d30",
									"id": 133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelSubscription",
									"nameLocation": "4331:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4357:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 127,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4350:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4372:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4364:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4349:26:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4384:0:1"
									},
									"scope": 141,
									"src": "4322:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e82ad7d4",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingRequestExists",
									"nameLocation": "4690:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4718:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "4711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 134,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4711:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4710:14:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "4748:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4748:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4747:6:1"
									},
									"scope": 141,
									"src": "4681:73:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 142,
							"src": "57:4699:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:4725:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							206
						]
					},
					"id": 207,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 144,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 147,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 206,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 146,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 150,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 206,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 149,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 206,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 160,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 206,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 163,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 166,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 167,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 171,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 175,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 176,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 181,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 182,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 206,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 189,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 190,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 206,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 201,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 206,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 207,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							284
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 209,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 218,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 227,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 284,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 284,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 284,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 284,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 284,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 284,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 285,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								218,
								227
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3093:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 297,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3136:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3155:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:4"
									},
									"scope": 320,
									"src": "2997:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:4"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:4"
									},
									"scope": 320,
									"src": "3485:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:4"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3791:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 316,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:4"
									},
									"scope": 320,
									"src": "3740:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 321,
							"src": "2113:1689:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							863
						],
						"IERC20": [
							284
						],
						"IERC20Permit": [
							320
						],
						"SafeERC20": [
							610
						]
					},
					"id": 611,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 611,
							"sourceUnit": 285,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 284,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 611,
							"sourceUnit": 321,
							"src": "179:60:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "187:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 611,
							"sourceUnit": 864,
							"src": "240:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 863,
										"src": "248:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 329,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 610,
							"linearizedBaseContracts": [
								610
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 332,
									"libraryName": {
										"id": 330,
										"name": "Address",
										"nameLocations": [
											"781:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 863,
										"src": "781:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:5",
									"typeName": {
										"id": 331,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:5",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 337,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "907:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:5"
									},
									"src": "876:46:5"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 346,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1043:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1060:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1086:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:5"
									},
									"src": "1004:109:5"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "1375:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 358,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "1405:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$284",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 361,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "1427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 251,
																	"src": "1427:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 363,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 352,
																			"src": "1444:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 364,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "1448:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 365,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 359,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$284",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 357,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1385:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:5"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1325:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$284",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 348,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 284,
														"src": "1325:6:5"
													},
													"referencedDeclaration": 284,
													"src": "1325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$284",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1339:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1351:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:5"
									},
									"scope": 610,
									"src": "1303:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1792:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 384,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "1822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$284",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 387,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "1844:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 283,
																	"src": "1844:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 389,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 376,
																			"src": "1865:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 390,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "1871:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "1875:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 392,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 385,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$284",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 383,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1802:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:5"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1728:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$284",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 373,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 372,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 284,
														"src": "1728:6:5"
													},
													"referencedDeclaration": 284,
													"src": "1728:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$284",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1742:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1756:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1768:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:5"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:5"
									},
									"scope": 610,
									"src": "1702:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2167:139:5",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "2177:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 414,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$610",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$610",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "2231:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 410,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "2200:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$284",
																"typeString": "contract IERC20"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "2200:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 420,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "2262:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$284",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 421,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "2269:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 422,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "2278:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 423,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "2293:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$284",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "2249:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:5"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2112:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$284",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 400,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 399,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 284,
														"src": "2112:6:5"
													},
													"referencedDeclaration": 284,
													"src": "2112:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$284",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2126:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:5"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:5"
									},
									"scope": 610,
									"src": "2081:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "2607:370:5",
										"statements": [
											{
												"id": 469,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:5",
												"statements": [
													{
														"assignments": [
															440
														],
														"declarations": [
															{
																"constant": false,
																"id": 440,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 469,
																"src": "2641:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 439,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 449,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 445,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$610",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$610",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 443,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 447,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "2699:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 441,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "2668:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$284",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 261,
																"src": "2668:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 450,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "2725:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 451,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "2744:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 460,
														"nodeType": "IfStatement",
														"src": "2721:160:5",
														"trueBody": {
															"id": 459,
															"nodeType": "Block",
															"src": "2763:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 454,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "2821:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 455,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 440,
																				"src": "2830:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 456,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 436,
																				"src": "2848:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 453,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "2788:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 458,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 462,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "2907:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$284",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 463,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "2914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 464,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 440,
																		"src": "2923:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 465,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "2942:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$284",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 461,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "2894:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 468,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "2540:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$284",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 431,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 430,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 284,
														"src": "2540:6:5"
													},
													"referencedDeclaration": 284,
													"src": "2540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$284",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "2554:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "2571:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:5"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:5"
									},
									"scope": 610,
									"src": "2509:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "3373:303:5",
										"statements": [
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 517,
														"src": "3383:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 482,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 486,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "3426:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$284",
																	"typeString": "contract IERC20"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 271,
															"src": "3426:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 488,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "3442:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 489,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "3451:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 490,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 484,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:5"
											},
											{
												"condition": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 494,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "3498:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$284",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 495,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "3505:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$284",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 493,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "3474:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"nodeType": "IfStatement",
												"src": "3469:201:5",
												"trueBody": {
													"id": 515,
													"nodeType": "Block",
													"src": "3520:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 499,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "3554:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 502,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 475,
																					"src": "3576:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$284",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 271,
																				"src": "3576:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 504,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 477,
																						"src": "3592:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 505,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 506,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 500,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 498,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "3534:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 509,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 511,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "3639:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 512,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "3646:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 510,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "3619:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "3318:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$284",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 473,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 284,
														"src": "3318:6:5"
													},
													"referencedDeclaration": 284,
													"src": "3318:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$284",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "3332:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "3349:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:5"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:5"
									},
									"scope": 610,
									"src": "3296:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "4129:559:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "4478:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"arguments": [
														{
															"id": 534,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "4532:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 531,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "4512:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$284",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$284",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 529,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 684,
														"src": "4504:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 537,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "4551:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 543,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "4589:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 544,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:5",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 546,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 541,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:5",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "4547:135:5",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "4610:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 553,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "4664:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$284",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$284",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 551,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 550,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "4631:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 556,
															"nodeType": "RevertStatement",
															"src": "4624:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "4088:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$284",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 521,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 520,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 284,
														"src": "4088:6:5"
													},
													"referencedDeclaration": 284,
													"src": "4088:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$284",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "4102:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 523,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:5"
									},
									"scope": 610,
									"src": "4059:629:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "5278:489:5",
										"statements": [
											{
												"assignments": [
													572,
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 572,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "5574:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 571,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "5588:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 573,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 582,
												"initialValue": {
													"arguments": [
														{
															"id": 580,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "5635:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 577,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "5623:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$284",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$284",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 583,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "5657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 584,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 574,
																				"src": "5669:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 590,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 574,
																				"src": "5706:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 592,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 591,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 593,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 588,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 596,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 600,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "5738:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$284",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$284",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 598,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 570,
												"id": 607,
												"nodeType": "Return",
												"src": "5650:110:5"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5222:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$284",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 563,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 562,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 284,
														"src": "5222:6:5"
													},
													"referencedDeclaration": 284,
													"src": "5222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$284",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:5"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5272:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:5"
									},
									"scope": 610,
									"src": "5189:578:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 611,
							"src": "751:5018:5",
							"usedErrors": [
								337,
								346
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							863
						]
					},
					"id": 864,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 612,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 613,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 863,
							"linearizedBaseContracts": [
								863
							],
							"name": "Address",
							"nameLocation": "203:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:6",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 618,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "349:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:6"
									},
									"src": "316:50:6"
								},
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:6",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 623,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "475:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:6"
									},
									"src": "452:39:6"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:6",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 626,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:6"
									},
									"src": "591:24:6"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "1602:260:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$863",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$863",
																		"typeString": "library Address"
																	}
																],
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 634,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 639,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "1640:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 649,
												"nodeType": "IfStatement",
												"src": "1612:109:6",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "1648:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 644,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$863",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$863",
																					"typeString": "library Address"
																				}
																			],
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 642,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 641,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "1669:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 647,
															"nodeType": "RevertStatement",
															"src": "1662:48:6"
														}
													]
												}
											},
											{
												"assignments": [
													651,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "1732:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 650,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 658,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 652,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "1750:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 654,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "1772:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:6"
											},
											{
												"condition": {
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:6",
													"subExpression": {
														"id": 659,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "1798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 665,
												"nodeType": "IfStatement",
												"src": "1793:63:6",
												"trueBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "1807:49:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 661,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "1828:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 663,
															"nodeType": "RevertStatement",
															"src": "1821:24:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1550:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1577:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:6"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:6"
									},
									"scope": 863,
									"src": "1531:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "2794:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "2833:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "2841:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 677,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2811:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 676,
												"id": 682,
												"nodeType": "Return",
												"src": "2804:45:6"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2727:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2743:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 671,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:6"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2780:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:6"
									},
									"scope": 863,
									"src": "2705:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "3293:279:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 698,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$863",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$863",
																		"typeString": "library Address"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 701,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "3331:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"nodeType": "IfStatement",
												"src": "3303:108:6",
												"trueBody": {
													"id": 710,
													"nodeType": "Block",
													"src": "3338:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 706,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$863",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$863",
																					"typeString": "library Address"
																				}
																			],
																			"id": 705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 704,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 703,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "3359:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 709,
															"nodeType": "RevertStatement",
															"src": "3352:48:6"
														}
													]
												}
											},
											{
												"assignments": [
													713,
													715
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 729,
														"src": "3421:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 712,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 729,
														"src": "3435:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 714,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [
														{
															"id": 720,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "3488:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 716,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "3462:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 718,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "3481:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 724,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "3537:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "3545:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 726,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "3554:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 723,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "3510:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 695,
												"id": 728,
												"nodeType": "Return",
												"src": "3503:62:6"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3211:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3227:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3246:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:6"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3279:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:6"
									},
									"scope": 863,
									"src": "3180:392:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "3811:154:6",
										"statements": [
											{
												"assignments": [
													741,
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 741,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 755,
														"src": "3822:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 740,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 755,
														"src": "3836:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 742,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 748,
												"initialValue": {
													"arguments": [
														{
															"id": 746,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3881:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 744,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "3863:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 750,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "3930:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "3938:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 752,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "3947:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 749,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "3903:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 739,
												"id": 754,
												"nodeType": "Return",
												"src": "3896:62:6"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3739:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3755:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 734,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:6"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3797:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 737,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:6"
									},
									"scope": 863,
									"src": "3711:254:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "4203:156:6",
										"statements": [
											{
												"assignments": [
													767,
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 781,
														"src": "4214:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 766,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 781,
														"src": "4228:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 768,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 774,
												"initialValue": {
													"arguments": [
														{
															"id": 772,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "4275:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 770,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4255:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 776,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4324:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "4332:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 778,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "4341:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 775,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "4297:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 765,
												"id": 780,
												"nodeType": "Return",
												"src": "4290:62:6"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4136:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4152:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 760,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:6"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4189:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:6"
									},
									"scope": 863,
									"src": "4106:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "4783:424:6",
										"statements": [
											{
												"condition": {
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:6",
													"subExpression": {
														"id": 794,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "4798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 819,
													"nodeType": "Block",
													"src": "4857:344:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 801,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 789,
																			"src": "5045:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 805,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 785,
																				"src": "5071:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 816,
															"nodeType": "IfStatement",
															"src": "5041:119:6",
															"trueBody": {
																"id": 815,
																"nodeType": "Block",
																"src": "5096:64:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 812,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 785,
																					"src": "5138:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 811,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 623,
																				"src": "5121:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 814,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 817,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "5180:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 793,
															"id": 818,
															"nodeType": "Return",
															"src": "5173:17:6"
														}
													]
												},
												"id": 820,
												"nodeType": "IfStatement",
												"src": "4793:408:6",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "4807:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 797,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "4829:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 796,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "4821:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 799,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "4670:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "4694:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "4716:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 788,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:6"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "4769:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 791,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:6"
									},
									"scope": 863,
									"src": "4625:582:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "5509:122:6",
										"statements": [
											{
												"condition": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:6",
													"subExpression": {
														"id": 832,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "5524:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "5583:42:6",
													"statements": [
														{
															"expression": {
																"id": 839,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "5604:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 831,
															"id": 840,
															"nodeType": "Return",
															"src": "5597:17:6"
														}
													]
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "5519:106:6",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "5533:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 835,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 827,
																		"src": "5555:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 834,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "5547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 837,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:6",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "5433:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 824,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "5447:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 826,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:6"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "5495:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:6"
									},
									"scope": 863,
									"src": "5407:224:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "5798:461:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 850,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "5874:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "6204:49:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 856,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6225:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 858,
															"nodeType": "RevertStatement",
															"src": "6218:24:6"
														}
													]
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "5870:383:6",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "5897:301:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:6",
																"nodeType": "YulBlock",
																"src": "6055:133:6",
																"statements": [
																	{
																		"nativeSrc": "6073:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:6"
																			},
																			"nativeSrc": "6096:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:6",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:6",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:6"
																					},
																					"nativeSrc": "6137:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:6"
																			},
																			"nativeSrc": "6130:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:6"
																		},
																		"nativeSrc": "6130:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 847,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 847,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:6",
																	"valueSize": 1
																}
															],
															"id": 854,
															"nodeType": "InlineAssembly",
															"src": "6046:142:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:6",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "5760:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 846,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:6"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:6"
									},
									"scope": 863,
									"src": "5743:516:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 864,
							"src": "195:6066:6",
							"usedErrors": [
								618,
								623,
								626
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:6"
				},
				"id": 6
			},
			"Common.sol": {
				"ast": {
					"absolutePath": "Common.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Common": [
							1670
						],
						"IBankRoll": [
							911
						],
						"IERC20": [
							284
						],
						"IVRFCoordinatorV2": [
							935
						],
						"ReentrancyGuard": [
							206
						],
						"SafeERC20": [
							610
						],
						"VRFCoordinatorV2Interface": [
							141
						]
					},
					"id": 1671,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 865,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:7"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
							"id": 866,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1671,
							"sourceUnit": 142,
							"src": "61:80:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 867,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1671,
							"sourceUnit": 46,
							"src": "142:76:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 868,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1671,
							"sourceUnit": 207,
							"src": "219:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1671,
							"sourceUnit": 611,
							"src": "282:90:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 869,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 610,
										"src": "290:9:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 870,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 284,
										"src": "301:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBankRoll",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 911,
							"linearizedBaseContracts": [
								911
							],
							"name": "IBankRoll",
							"nameLocation": "417:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "298729d8",
									"id": 878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIsGame",
									"nameLocation": "442:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "460:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "452:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:14:7"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "489:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:7"
									},
									"scope": 911,
									"src": "433:62:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bfd7f9cc",
									"id": 887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIsValidWager",
									"nameLocation": "510:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "543:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "535:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "565:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "557:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:58:7"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "607:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "607:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:6:7"
									},
									"scope": 911,
									"src": "501:112:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6c025ec2",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferPayout",
									"nameLocation": "628:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "660:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "652:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "payout",
												"nameLocation": "684:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "676:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "708:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "700:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:77:7"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:0:7"
									},
									"scope": 911,
									"src": "619:110:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "893d20e8",
									"id": 901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "744:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:2:7"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "778:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:9:7"
									},
									"scope": 911,
									"src": "735:52:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0a5748a8",
									"id": 910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPlayerSuspended",
									"nameLocation": "802:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "837:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "829:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:30:7"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "873:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 905,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "873:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "879:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:15:7"
									},
									"scope": 911,
									"src": "793:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1671,
							"src": "407:483:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 912,
										"name": "VRFCoordinatorV2Interface",
										"nameLocations": [
											"923:25:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 141,
										"src": "923:25:7"
									},
									"id": 913,
									"nodeType": "InheritanceSpecifier",
									"src": "923:25:7"
								}
							],
							"canonicalName": "IVRFCoordinatorV2",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 935,
							"linearizedBaseContracts": [
								935,
								141
							],
							"name": "IVRFCoordinatorV2",
							"nameLocation": "902:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5fbbc0d2",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeConfig",
									"nameLocation": "964:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "976:2:7"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1039:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 915,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1039:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1059:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 917,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1059:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1079:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 919,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1079:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1099:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 921,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1099:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1119:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 923,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1119:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1139:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 925,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1139:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1159:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 927,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1159:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1179:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 929,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1179:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1199:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 931,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1199:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:190:7"
									},
									"scope": 935,
									"src": "955:261:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1671,
							"src": "892:326:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 936,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1239:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "1239:15:7"
									},
									"id": 937,
									"nodeType": "InheritanceSpecifier",
									"src": "1239:15:7"
								}
							],
							"canonicalName": "Common",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1670,
							"linearizedBaseContracts": [
								1670,
								206
							],
							"name": "Common",
							"nameLocation": "1229:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 941,
									"libraryName": {
										"id": 938,
										"name": "SafeERC20",
										"nameLocations": [
											"1267:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 610,
										"src": "1267:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "1261:27:7",
									"typeName": {
										"id": 940,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 939,
											"name": "IERC20",
											"nameLocations": [
												"1281:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 284,
											"src": "1281:6:7"
										},
										"referencedDeclaration": 284,
										"src": "1281:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$284",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8d7c16d2",
									"id": 943,
									"mutability": "mutable",
									"name": "VRFFees",
									"nameLocation": "1309:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1670,
									"src": "1294:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1294:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "953995ea",
									"id": 945,
									"mutability": "mutable",
									"name": "ChainLinkVRF",
									"nameLocation": "1337:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1670,
									"src": "1322:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 944,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1322:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56c022bb",
									"id": 947,
									"mutability": "mutable",
									"name": "_trustedForwarder",
									"nameLocation": "1370:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1670,
									"src": "1355:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 946,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1355:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 950,
									"mutability": "constant",
									"name": "BLOCK_NUMBER_REFUND",
									"nameLocation": "1410:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1670,
									"src": "1394:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 948,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1394:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 949,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1432:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ad178361",
									"id": 953,
									"mutability": "mutable",
									"name": "LINK_ETH_FEED",
									"nameLocation": "1472:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1670,
									"src": "1443:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 952,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 951,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"1443:21:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "1443:21:7"
										},
										"referencedDeclaration": 45,
										"src": "1443:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4dd189d5",
									"id": 956,
									"mutability": "mutable",
									"name": "IChainLinkVRF",
									"nameLocation": "1516:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1670,
									"src": "1491:38:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVRFCoordinatorV2_$935",
										"typeString": "contract IVRFCoordinatorV2"
									},
									"typeName": {
										"id": 955,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 954,
											"name": "IVRFCoordinatorV2",
											"nameLocations": [
												"1491:17:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 935,
											"src": "1491:17:7"
										},
										"referencedDeclaration": 935,
										"src": "1491:17:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVRFCoordinatorV2_$935",
											"typeString": "contract IVRFCoordinatorV2"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0bcfc0c",
									"id": 959,
									"mutability": "mutable",
									"name": "Bankroll",
									"nameLocation": "1552:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1670,
									"src": "1535:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBankRoll_$911",
										"typeString": "contract IBankRoll"
									},
									"typeName": {
										"id": 958,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 957,
											"name": "IBankRoll",
											"nameLocations": [
												"1535:9:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 911,
											"src": "1535:9:7"
										},
										"referencedDeclaration": 911,
										"src": "1535:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBankRoll_$911",
											"typeString": "contract IBankRoll"
										}
									},
									"visibility": "public"
								},
								{
									"errorSelector": "51c3b94f",
									"id": 961,
									"name": "NotApprovedBankroll",
									"nameLocation": "1573:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1592:2:7"
									},
									"src": "1567:28:7"
								},
								{
									"errorSelector": "de9b74a1",
									"id": 967,
									"name": "InvalidValue",
									"nameLocation": "1606:12:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "required",
												"nameLocation": "1627:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1619:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1619:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "sent",
												"nameLocation": "1645:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1637:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1618:32:7"
									},
									"src": "1600:51:7"
								},
								{
									"errorSelector": "90b8ec18",
									"id": 969,
									"name": "TransferFailed",
									"nameLocation": "1662:14:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1676:2:7"
									},
									"src": "1656:23:7"
								},
								{
									"errorSelector": "f0c49d44",
									"id": 971,
									"name": "RefundFailed",
									"nameLocation": "1690:12:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1702:2:7"
									},
									"src": "1684:21:7"
								},
								{
									"errorSelector": "23295f0e",
									"id": 977,
									"name": "NotOwner",
									"nameLocation": "1716:8:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "want",
												"nameLocation": "1733:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "1725:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "have",
												"nameLocation": "1747:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "1739:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1724:28:7"
									},
									"src": "1710:43:7"
								},
								{
									"errorSelector": "07375c84",
									"id": 979,
									"name": "ZeroWager",
									"nameLocation": "1764:9:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:7"
									},
									"src": "1758:18:7"
								},
								{
									"errorSelector": "6c2775f5",
									"id": 983,
									"name": "PlayerSuspended",
									"nameLocation": "1787:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "suspensionTime",
												"nameLocation": "1811:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "1803:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:24:7"
									},
									"src": "1781:46:7"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "2276:1024:7",
										"statements": [
											{
												"condition": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2290:54:7",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1001,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2324:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Common_$1670",
																			"typeString": "contract Common"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Common_$1670",
																			"typeString": "contract Common"
																		}
																	],
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2316:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 999,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2316:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2316:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1003,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "2331:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 997,
																"name": "Bankroll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "2291:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBankRoll_$911",
																	"typeString": "contract IBankRoll"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2300:15:7",
															"memberName": "getIsValidWager",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 887,
															"src": "2291:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address) view external returns (bool)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2291:53:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "2286:113:7",
												"trueBody": {
													"id": 1009,
													"nodeType": "Block",
													"src": "2346:53:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1006,
																	"name": "NotApprovedBankroll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "2367:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2367:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1008,
															"nodeType": "RevertStatement",
															"src": "2360:28:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1011,
														"name": "wager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2412:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2421:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2412:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "IfStatement",
												"src": "2408:59:7",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "2424:43:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1014,
																	"name": "ZeroWager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "2445:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2445:11:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1016,
															"nodeType": "RevertStatement",
															"src": "2438:18:7"
														}
													]
												}
											},
											{
												"assignments": [
													1020,
													1022
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "suspended",
														"nameLocation": "2482:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1111,
														"src": "2477:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1019,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2477:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1022,
														"mutability": "mutable",
														"name": "suspendedTime",
														"nameLocation": "2501:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1111,
														"src": "2493:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1021,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2493:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1027,
												"initialValue": {
													"arguments": [
														{
															"id": 1025,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "2558:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1023,
															"name": "Bankroll",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "2518:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBankRoll_$911",
																"typeString": "contract IBankRoll"
															}
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2527:17:7",
														"memberName": "isPlayerSuspended",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 910,
														"src": "2518:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (address) view external returns (bool,uint256)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2518:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2476:101:7"
											},
											{
												"condition": {
													"id": 1028,
													"name": "suspended",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1020,
													"src": "2591:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1034,
												"nodeType": "IfStatement",
												"src": "2587:77:7",
												"trueBody": {
													"id": 1033,
													"nodeType": "Block",
													"src": "2602:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1030,
																		"name": "suspendedTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "2639:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1029,
																	"name": "PlayerSuspended",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "2623:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2623:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1032,
															"nodeType": "RevertStatement",
															"src": "2616:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1035,
														"name": "VRFfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "2673:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1037,
																"name": "gasAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "2692:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1036,
															"name": "getVRFFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "2682:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2682:20:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2673:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "2673:29:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2717:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2741:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2733:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1042,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2733:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2733:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "2948:319:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1074,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2966:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2970:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2966:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1076,
																	"name": "VRFfee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2978:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2966:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1085,
															"nodeType": "IfStatement",
															"src": "2962:95:7",
															"trueBody": {
																"id": 1084,
																"nodeType": "Block",
																"src": "2986:71:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1079,
																					"name": "VRFfee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 995,
																					"src": "3024:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1080,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3032:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1081,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3036:5:7",
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"src": "3032:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1078,
																				"name": "InvalidValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "3011:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256) pure"
																				}
																			},
																			"id": 1082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3011:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1083,
																		"nodeType": "RevertStatement",
																		"src": "3004:38:7"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1090,
																		"name": "msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "3126:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1093,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3161:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Common_$1670",
																					"typeString": "contract Common"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Common_$1670",
																					"typeString": "contract Common"
																				}
																			],
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3153:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1091,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3153:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3153:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1095,
																		"name": "wager",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "3184:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1087,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "3078:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1086,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 284,
																			"src": "3071:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$284_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3071:20:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3092:16:7",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 397,
																	"src": "3071:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$284_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3071:132:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1097,
															"nodeType": "ExpressionStatement",
															"src": "3071:132:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1099,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3237:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3241:5:7",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "3237:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1101,
																			"name": "VRFfee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "3249:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3237:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1098,
																	"name": "_refundExcessValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "3218:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3218:38:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1104,
															"nodeType": "ExpressionStatement",
															"src": "3218:38:7"
														}
													]
												},
												"id": 1106,
												"nodeType": "IfStatement",
												"src": "2713:554:7",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "2745:197:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1047,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2763:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2767:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2763:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1049,
																		"name": "wager",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "2775:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1050,
																		"name": "VRFfee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "2783:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2775:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2763:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1062,
															"nodeType": "IfStatement",
															"src": "2759:111:7",
															"trueBody": {
																"id": 1061,
																"nodeType": "Block",
																"src": "2791:79:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1056,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1054,
																						"name": "wager",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 988,
																						"src": "2829:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1055,
																						"name": "VRFfee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 995,
																						"src": "2837:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2829:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1057,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2845:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1058,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2849:5:7",
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"src": "2845:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1053,
																				"name": "InvalidValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "2816:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256) pure"
																				}
																			},
																			"id": 1059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2816:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1060,
																		"nodeType": "RevertStatement",
																		"src": "2809:46:7"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1064,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2902:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2906:5:7",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2902:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1068,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1066,
																						"name": "VRFfee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 995,
																						"src": "2915:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1067,
																						"name": "wager",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 988,
																						"src": "2924:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2915:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1069,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2914:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2902:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1063,
																	"name": "_refundExcessValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "2883:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2883:48:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1072,
															"nodeType": "ExpressionStatement",
															"src": "2883:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1107,
														"name": "VRFFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "3276:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1108,
														"name": "VRFfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "3287:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3276:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "3276:17:7"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "1833:266:7",
										"text": " @dev function to transfer the player wager to bankroll, and charge for VRF fee\n , reverts if bankroll doesn't approve game or token\n @param tokenAddress address of the token the wager is made on\n @param wager total amount wagered"
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferWager",
									"nameLocation": "2114:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "2146:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2138:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "wager",
												"nameLocation": "2176:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2168:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2168:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "gasAmount",
												"nameLocation": "2199:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2191:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "2226:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2218:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:113:7"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "VRFfee",
												"nameLocation": "2268:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2260:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2260:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:16:7"
									},
									"scope": 1670,
									"src": "2105:1195:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "3611:344:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1120,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "3625:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3649:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3641:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1121,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3641:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3641:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3625:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1160,
													"nodeType": "Block",
													"src": "3864:85:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1155,
																				"name": "Bankroll",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "3920:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBankRoll_$911",
																					"typeString": "contract IBankRoll"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IBankRoll_$911",
																					"typeString": "contract IBankRoll"
																				}
																			],
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3912:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1153,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3912:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3912:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1157,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "3931:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1150,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1115,
																				"src": "3885:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1149,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 284,
																			"src": "3878:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$284_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3878:20:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3899:12:7",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 370,
																	"src": "3878:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$284_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3878:60:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1159,
															"nodeType": "ExpressionStatement",
															"src": "3878:60:7"
														}
													]
												},
												"id": 1161,
												"nodeType": "IfStatement",
												"src": "3621:328:7",
												"trueBody": {
													"id": 1148,
													"nodeType": "Block",
													"src": "3653:205:7",
													"statements": [
														{
															"assignments": [
																1127,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1127,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "3673:7:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1148,
																	"src": "3668:12:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1126,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3668:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1140,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3750:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1132,
																							"name": "Bankroll",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 959,
																							"src": "3702:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IBankRoll_$911",
																								"typeString": "contract IBankRoll"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IBankRoll_$911",
																								"typeString": "contract IBankRoll"
																							}
																						],
																						"id": 1131,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3694:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1130,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "3694:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3694:17:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3686:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1128,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3686:8:7",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3686:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3713:4:7",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "3686:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1136,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "3725:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "3686:46:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3686:80:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3667:99:7"
														},
														{
															"condition": {
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3784:8:7",
																"subExpression": {
																	"id": 1141,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "3785:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1147,
															"nodeType": "IfStatement",
															"src": "3780:68:7",
															"trueBody": {
																"id": 1146,
																"nodeType": "Block",
																"src": "3794:54:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1143,
																				"name": "RefundFailed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 971,
																				"src": "3819:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3819:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1145,
																		"nodeType": "RevertStatement",
																		"src": "3812:21:7"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "3306:202:7",
										"text": " @dev function to transfer the wager held by the game contract to the bankroll\n @param tokenAddress address of the token to transfer\n @param amount token amount to transfer"
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToBankroll",
									"nameLocation": "3522:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "3559:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "3551:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3589:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "3581:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3541:60:7"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3611:0:7"
									},
									"scope": 1670,
									"src": "3513:442:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "4178:371:7",
										"statements": [
											{
												"assignments": [
													null,
													1172,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1172,
														"mutability": "mutable",
														"name": "answer",
														"nameLocation": "4198:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1207,
														"src": "4191:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1171,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4191:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1176,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1173,
															"name": "LINK_ETH_FEED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "4214:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4228:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "4214:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4188:57:7"
											},
											{
												"assignments": [
													1178,
													null,
													null,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1178,
														"mutability": "mutable",
														"name": "fulfillmentFlatFeeLinkPPMTier1",
														"nameLocation": "4263:30:7",
														"nodeType": "VariableDeclaration",
														"scope": 1207,
														"src": "4256:37:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1177,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4256:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 1182,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1179,
															"name": "IChainLinkVRF",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "4313:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVRFCoordinatorV2_$935",
																"typeString": "contract IVRFCoordinatorV2"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4340:12:7",
														"memberName": "getFeeConfig",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 934,
														"src": "4313:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint24_$_t_uint24_$_t_uint24_$_t_uint24_$",
															"typeString": "function () view external returns (uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4313:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint24_$_t_uint24_$_t_uint24_$_t_uint24_$",
														"typeString": "tuple(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4255:99:7"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1183,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "4365:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1184,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "4383:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4386:8:7",
																"memberName": "gasprice",
																"nodeType": "MemberAccess",
																"src": "4383:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"id": 1186,
																		"name": "gasAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "4410:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1187,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4409:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4383:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31653132",
																						"id": 1189,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4437:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000_by_1",
																							"typeString": "int_const 1000000000000"
																						},
																						"value": "1e12"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 1192,
																								"name": "fulfillmentFlatFeeLinkPPMTier1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1178,
																								"src": "4468:30:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							],
																							"id": 1191,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4460:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1190,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "4460:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1193,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4460:39:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4437:62:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [
																						{
																							"id": 1197,
																							"name": "answer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1172,
																							"src": "4526:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						],
																						"id": 1196,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4518:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1195,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4518:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4518:15:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4437:96:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1200,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4436:98:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4537:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "4436:105:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1203,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4435:107:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4383:159:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4365:177:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "4365:177:7"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "3961:140:7",
										"text": " @dev calculates in form of native token the fee charged by chainlink VRF\n @return fee amount of fee user has to pay"
									},
									"functionSelector": "8bd16114",
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVRFFee",
									"nameLocation": "4115:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "gasAmount",
												"nameLocation": "4133:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "4125:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:19:7"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4173:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "4165:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:13:7"
									},
									"scope": 1670,
									"src": "4106:443:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "4740:205:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1214,
														"name": "refund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "4754:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4764:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4754:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1219,
												"nodeType": "IfStatement",
												"src": "4750:48:7",
												"trueBody": {
													"id": 1218,
													"nodeType": "Block",
													"src": "4767:31:7",
													"statements": [
														{
															"functionReturnParameters": 1213,
															"id": 1217,
															"nodeType": "Return",
															"src": "4781:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1221,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4813:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1240,
														"src": "4808:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1220,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4808:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1232,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1224,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4834:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4838:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4834:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4826:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1222,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4826:8:7",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4826:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4846:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4826:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1228,
																"name": "refund",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "4858:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4826:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4826:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4807:62:7"
											},
											{
												"condition": {
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4883:8:7",
													"subExpression": {
														"id": 1233,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "4884:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1239,
												"nodeType": "IfStatement",
												"src": "4879:60:7",
												"trueBody": {
													"id": 1238,
													"nodeType": "Block",
													"src": "4893:46:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1235,
																	"name": "RefundFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "4914:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4914:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1237,
															"nodeType": "RevertStatement",
															"src": "4907:21:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "4555:127:7",
										"text": " @dev returns to user the excess fee sent to pay for the VRF\n @param refund amount to send back to user"
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_refundExcessValue",
									"nameLocation": "4696:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "refund",
												"nameLocation": "4723:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4715:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4714:16:7"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4740:0:7"
									},
									"scope": 1670,
									"src": "4687:258:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "5084:217:7",
										"statements": [
											{
												"expression": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1249,
														"name": "VRFfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "5094:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1251,
																"name": "gasAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "5113:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1250,
															"name": "getVRFFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "5103:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5103:20:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5094:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "5094:29:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1255,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5137:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5141:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5137:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1257,
														"name": "VRFfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "5149:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5137:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1266,
												"nodeType": "IfStatement",
												"src": "5133:87:7",
												"trueBody": {
													"id": 1265,
													"nodeType": "Block",
													"src": "5157:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1260,
																		"name": "VRFfee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "5191:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1261,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5199:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5203:5:7",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "5199:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1259,
																	"name": "InvalidValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "5178:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5178:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1264,
															"nodeType": "RevertStatement",
															"src": "5171:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1268,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5248:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5252:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5248:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1270,
																"name": "VRFfee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "5260:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5248:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1267,
														"name": "_refundExcessValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "5229:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "5229:38:7"
											},
											{
												"expression": {
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1274,
														"name": "VRFFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "5277:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1275,
														"name": "VRFfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "5288:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5277:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "5277:17:7"
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "4951:55:7",
										"text": " @dev function to charge user for VRF"
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payVRFFee",
									"nameLocation": "5020:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "gasAmount",
												"nameLocation": "5039:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "5031:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5031:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5030:19:7"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "VRFfee",
												"nameLocation": "5076:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "5068:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5068:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5067:16:7"
									},
									"scope": 1670,
									"src": "5011:290:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "5499:321:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1287,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5513:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5517:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5513:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1289,
																"name": "Bankroll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "5527:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBankRoll_$911",
																	"typeString": "contract IBankRoll"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5536:8:7",
															"memberName": "getOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 901,
															"src": "5527:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5527:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5513:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1302,
												"nodeType": "IfStatement",
												"src": "5509:112:7",
												"trueBody": {
													"id": 1301,
													"nodeType": "Block",
													"src": "5548:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1294,
																				"name": "Bankroll",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "5578:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBankRoll_$911",
																					"typeString": "contract IBankRoll"
																				}
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5587:8:7",
																			"memberName": "getOwner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 901,
																			"src": "5578:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5578:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1297,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5599:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5603:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5599:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1293,
																	"name": "NotOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "5569:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5569:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1300,
															"nodeType": "RevertStatement",
															"src": "5562:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1304
												],
												"declarations": [
													{
														"constant": false,
														"id": 1304,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "5638:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "5630:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5630:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"initialValue": {
													"id": 1305,
													"name": "VRFFees",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 943,
													"src": "5644:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5630:21:7"
											},
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1307,
														"name": "VRFFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "5661:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5671:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5661:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "5661:11:7"
											},
											{
												"assignments": [
													1312,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5688:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "5683:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1311,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5683:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1325,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5739:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1317,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1282,
																				"src": "5717:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5709:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1315,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5709:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5709:11:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5701:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1313,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5701:8:7",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5701:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5722:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5701:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1321,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "5734:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5701:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5701:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5682:60:7"
											},
											{
												"condition": {
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5756:8:7",
													"subExpression": {
														"id": 1326,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "5757:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1332,
												"nodeType": "IfStatement",
												"src": "5752:62:7",
												"trueBody": {
													"id": 1331,
													"nodeType": "Block",
													"src": "5766:48:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1328,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "5787:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:16:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1330,
															"nodeType": "RevertStatement",
															"src": "5780:23:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "5307:131:7",
										"text": " @dev function to transfer VRF fees acumulated in the contract to the Bankroll\n Can only be called by owner"
									},
									"functionSelector": "63dc4ef5",
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1285,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1284,
												"name": "nonReentrant",
												"nameLocations": [
													"5486:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 171,
												"src": "5486:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5486:12:7"
										}
									],
									"name": "transferFees",
									"nameLocation": "5452:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5473:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "5465:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5464:12:7"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5499:0:7"
									},
									"scope": 1670,
									"src": "5443:377:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "6118:455:7",
										"statements": [
											{
												"condition": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6132:54:7",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1346,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6166:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Common_$1670",
																			"typeString": "contract Common"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Common_$1670",
																			"typeString": "contract Common"
																		}
																	],
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6158:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1344,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6158:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6158:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1348,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "6173:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1342,
																"name": "Bankroll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "6133:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBankRoll_$911",
																	"typeString": "contract IBankRoll"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6142:15:7",
															"memberName": "getIsValidWager",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 887,
															"src": "6133:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address) view external returns (bool)"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6133:53:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1355,
												"nodeType": "IfStatement",
												"src": "6128:113:7",
												"trueBody": {
													"id": 1354,
													"nodeType": "Block",
													"src": "6188:53:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1351,
																	"name": "NotApprovedBankroll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "6209:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6209:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1353,
															"nodeType": "RevertStatement",
															"src": "6202:28:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1356,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "6254:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6278:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6270:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1357,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6270:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6270:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6254:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1390,
													"nodeType": "Block",
													"src": "6409:158:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1381,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6478:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6482:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6478:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1385,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6514:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Common_$1670",
																					"typeString": "contract Common"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Common_$1670",
																					"typeString": "contract Common"
																				}
																			],
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6506:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1383,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6506:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6506:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1387,
																		"name": "wager",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "6537:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1378,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1337,
																				"src": "6430:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1377,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 284,
																			"src": "6423:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$284_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6423:20:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6444:16:7",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 397,
																	"src": "6423:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$284_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6423:133:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1389,
															"nodeType": "ExpressionStatement",
															"src": "6423:133:7"
														}
													]
												},
												"id": 1391,
												"nodeType": "IfStatement",
												"src": "6250:317:7",
												"trueBody": {
													"id": 1376,
													"nodeType": "Block",
													"src": "6282:121:7",
													"statements": [
														{
															"condition": {
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "6300:21:7",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1362,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6302:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6306:5:7",
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"src": "6302:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1364,
																				"name": "wager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1339,
																				"src": "6315:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6302:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1366,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6301:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1375,
															"nodeType": "IfStatement",
															"src": "6296:97:7",
															"trueBody": {
																"id": 1374,
																"nodeType": "Block",
																"src": "6323:70:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1369,
																					"name": "wager",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1339,
																					"src": "6361:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1370,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "6368:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6372:5:7",
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"src": "6368:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1368,
																				"name": "InvalidValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "6348:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256) pure"
																				}
																			},
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6348:30:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1373,
																		"nodeType": "RevertStatement",
																		"src": "6341:37:7"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "5826:187:7",
										"text": " @dev function to transfer wager to game contract, without charging for VRF\n @param tokenAddress tokenAddress the wager is made on\n @param wager wager amount"
									},
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferWagerPvPNoVRF",
									"nameLocation": "6027:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "6067:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "6059:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6059:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "wager",
												"nameLocation": "6097:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "6089:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6089:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6049:59:7"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6118:0:7"
									},
									"scope": 1670,
									"src": "6018:555:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "6893:759:7",
										"statements": [
											{
												"condition": {
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6907:54:7",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1407,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6941:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Common_$1670",
																			"typeString": "contract Common"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Common_$1670",
																			"typeString": "contract Common"
																		}
																	],
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6933:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1405,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6933:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6933:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1409,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "6948:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1403,
																"name": "Bankroll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "6908:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBankRoll_$911",
																	"typeString": "contract IBankRoll"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6917:15:7",
															"memberName": "getIsValidWager",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 887,
															"src": "6908:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address) view external returns (bool)"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6908:53:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1416,
												"nodeType": "IfStatement",
												"src": "6903:113:7",
												"trueBody": {
													"id": 1415,
													"nodeType": "Block",
													"src": "6963:53:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1412,
																	"name": "NotApprovedBankroll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "6984:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6984:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1414,
															"nodeType": "RevertStatement",
															"src": "6977:28:7"
														}
													]
												}
											},
											{
												"assignments": [
													1418
												],
												"declarations": [
													{
														"constant": false,
														"id": 1418,
														"mutability": "mutable",
														"name": "VRFfee",
														"nameLocation": "7034:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "7026:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1417,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7026:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1422,
												"initialValue": {
													"arguments": [
														{
															"id": 1420,
															"name": "gasAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "7053:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1419,
														"name": "getVRFFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "7043:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7043:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7026:37:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1423,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "7077:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7101:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7093:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1424,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7093:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7093:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7077:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1486,
													"nodeType": "Block",
													"src": "7300:319:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1454,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7318:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7322:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "7318:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1456,
																	"name": "VRFfee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "7330:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7318:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1465,
															"nodeType": "IfStatement",
															"src": "7314:95:7",
															"trueBody": {
																"id": 1464,
																"nodeType": "Block",
																"src": "7338:71:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1459,
																					"name": "VRFfee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1418,
																					"src": "7376:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1460,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "7384:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1461,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7388:5:7",
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"src": "7384:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1458,
																				"name": "InvalidValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "7363:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256) pure"
																				}
																			},
																			"id": 1462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7363:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1463,
																		"nodeType": "RevertStatement",
																		"src": "7356:38:7"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1470,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7478:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7482:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7478:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1474,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7514:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Common_$1670",
																					"typeString": "contract Common"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Common_$1670",
																					"typeString": "contract Common"
																				}
																			],
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7506:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1472,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7506:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7506:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1476,
																		"name": "wager",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "7537:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1467,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1396,
																				"src": "7430:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1466,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 284,
																			"src": "7423:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$284_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7423:20:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7444:16:7",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 397,
																	"src": "7423:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$284_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7423:133:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1478,
															"nodeType": "ExpressionStatement",
															"src": "7423:133:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1480,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7589:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7593:5:7",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "7589:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1482,
																			"name": "VRFfee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "7601:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7589:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1479,
																	"name": "_refundExcessValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "7570:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7570:38:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1485,
															"nodeType": "ExpressionStatement",
															"src": "7570:38:7"
														}
													]
												},
												"id": 1487,
												"nodeType": "IfStatement",
												"src": "7073:546:7",
												"trueBody": {
													"id": 1453,
													"nodeType": "Block",
													"src": "7105:189:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1429,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7123:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7127:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "7123:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1431,
																		"name": "wager",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "7135:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1432,
																		"name": "VRFfee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "7143:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7135:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7123:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1442,
															"nodeType": "IfStatement",
															"src": "7119:102:7",
															"trueBody": {
																"id": 1441,
																"nodeType": "Block",
																"src": "7151:70:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1436,
																					"name": "wager",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1398,
																					"src": "7189:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1437,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "7196:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1438,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7200:5:7",
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"src": "7196:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1435,
																				"name": "InvalidValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "7176:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256) pure"
																				}
																			},
																			"id": 1439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7176:30:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1440,
																		"nodeType": "RevertStatement",
																		"src": "7169:37:7"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1444,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7254:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7258:5:7",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "7254:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1448,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1446,
																						"name": "VRFfee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1418,
																						"src": "7267:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1447,
																						"name": "wager",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1398,
																						"src": "7276:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7267:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1449,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7266:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7254:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1443,
																	"name": "_refundExcessValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "7235:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7235:48:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1452,
															"nodeType": "ExpressionStatement",
															"src": "7235:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1488,
														"name": "VRFFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "7628:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1489,
														"name": "VRFfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "7639:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7628:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "7628:17:7"
											}
										]
									},
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "6579:187:7",
										"text": " @dev function to transfer wager to game contract, including charge for VRF\n @param tokenAddress tokenAddress the wager is made on\n @param wager wager amount"
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferWagerPvP",
									"nameLocation": "6780:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "6815:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "6807:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6807:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "wager",
												"nameLocation": "6845:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "6837:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6837:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "gasAmount",
												"nameLocation": "6868:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "6860:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6860:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6797:86:7"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6893:0:7"
									},
									"scope": 1670,
									"src": "6771:881:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "8060:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1503,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "8074:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8098:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8090:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1504,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8090:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8090:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8074:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1537,
													"nodeType": "Block",
													"src": "8274:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1533,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "8322:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1534,
																		"name": "payout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1498,
																		"src": "8330:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1530,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1500,
																				"src": "8295:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1529,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 284,
																			"src": "8288:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$284_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8288:20:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8309:12:7",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 370,
																	"src": "8288:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$284_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8288:49:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1536,
															"nodeType": "ExpressionStatement",
															"src": "8288:49:7"
														}
													]
												},
												"id": 1538,
												"nodeType": "IfStatement",
												"src": "8070:278:7",
												"trueBody": {
													"id": 1528,
													"nodeType": "Block",
													"src": "8102:166:7",
													"statements": [
														{
															"assignments": [
																1510,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1510,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "8122:7:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1528,
																	"src": "8117:12:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1509,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "8117:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1520,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8171:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1513,
																					"name": "player",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1496,
																					"src": "8143:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8135:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1511,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8135:8:7",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8135:15:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8151:4:7",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "8135:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1516,
																			"name": "payout",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "8163:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "8135:35:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8135:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8116:58:7"
														},
														{
															"condition": {
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8192:8:7",
																"subExpression": {
																	"id": 1521,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "8193:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1527,
															"nodeType": "IfStatement",
															"src": "8188:70:7",
															"trueBody": {
																"id": 1526,
																"nodeType": "Block",
																"src": "8202:56:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1523,
																				"name": "TransferFailed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "8227:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8227:16:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1525,
																		"nodeType": "RevertStatement",
																		"src": "8220:23:7"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "7658:276:7",
										"text": " @dev transfers payout from the game contract to the players\n @param player address of the player to transfer the payout to\n @param payout amount of payout to transfer\n @param tokenAddress address of the token that payout will be transfered"
									},
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferPayoutPvP",
									"nameLocation": "7948:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "7984:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "7976:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7976:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "payout",
												"nameLocation": "8008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "8000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8000:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "8032:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "8024:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8024:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7966:84:7"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8060:0:7"
									},
									"scope": 1670,
									"src": "7939:415:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "8636:346:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1548,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "8650:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8674:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8666:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1549,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8666:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8666:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8650:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1588,
													"nodeType": "Block",
													"src": "8891:85:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1583,
																				"name": "Bankroll",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "8947:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBankRoll_$911",
																					"typeString": "contract IBankRoll"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IBankRoll_$911",
																					"typeString": "contract IBankRoll"
																				}
																			],
																			"id": 1582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8939:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1581,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8939:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8939:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1585,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1543,
																		"src": "8958:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1578,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1545,
																				"src": "8912:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1577,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 284,
																			"src": "8905:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$284_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8905:20:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$284",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8926:12:7",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 370,
																	"src": "8905:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$284_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$284_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8905:60:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1587,
															"nodeType": "ExpressionStatement",
															"src": "8905:60:7"
														}
													]
												},
												"id": 1589,
												"nodeType": "IfStatement",
												"src": "8646:330:7",
												"trueBody": {
													"id": 1576,
													"nodeType": "Block",
													"src": "8678:207:7",
													"statements": [
														{
															"assignments": [
																1555,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1555,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "8698:7:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1576,
																	"src": "8693:12:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1554,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "8693:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1568,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8775:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1560,
																							"name": "Bankroll",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 959,
																							"src": "8727:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IBankRoll_$911",
																								"typeString": "contract IBankRoll"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IBankRoll_$911",
																								"typeString": "contract IBankRoll"
																							}
																						],
																						"id": 1559,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "8719:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1558,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "8719:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1561,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8719:17:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8711:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1556,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8711:8:7",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8711:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8738:4:7",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "8711:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1564,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1543,
																			"src": "8750:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "8711:46:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8711:80:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8692:99:7"
														},
														{
															"condition": {
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8809:8:7",
																"subExpression": {
																	"id": 1569,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "8810:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1575,
															"nodeType": "IfStatement",
															"src": "8805:70:7",
															"trueBody": {
																"id": 1574,
																"nodeType": "Block",
																"src": "8819:56:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1571,
																				"name": "TransferFailed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "8844:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8844:16:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1573,
																		"nodeType": "RevertStatement",
																		"src": "8837:23:7"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "8360:171:7",
										"text": " @dev transfers house edge from game contract to bankroll\n @param amount amount to transfer\n @param tokenAddress address of token to transfer"
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferHouseEdgePvP",
									"nameLocation": "8545:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8584:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "8576:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "8608:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "8600:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8566:60:7"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8636:0:7"
									},
									"scope": 1670,
									"src": "8536:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "9353:70:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1604,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "9387:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1605,
															"name": "payout",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "9395:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1606,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "9403:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1601,
															"name": "Bankroll",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "9363:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBankRoll_$911",
																"typeString": "contract IBankRoll"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9372:14:7",
														"memberName": "transferPayout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 896,
														"src": "9363:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address) external"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9363:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "9363:53:7"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "8988:242:7",
										"text": " @dev function to request bankroll to give payout to player\n @param player address of the player\n @param payout amount of payout to give\n @param tokenAddress address of the token in which to give the payout"
									},
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferPayout",
									"nameLocation": "9244:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "9277:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "9269:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9269:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "payout",
												"nameLocation": "9301:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "9293:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9293:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "9325:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "9317:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9317:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9259:84:7"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9353:0:7"
									},
									"scope": 1670,
									"src": "9235:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "9670:291:7",
										"statements": [
											{
												"expression": {
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1618,
														"name": "s_requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "9680:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307864373239646338346532316165353766666236626530303533626632623036363861613261616633303061326137623264646637646330626236653837356138",
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9783:66:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_97321225141779083734580700388688017054475875654987195679909363163396091442600_by_1",
																	"typeString": "int_const 9732...(69 digits omitted)...2600"
																},
																"value": "0xd729dc84e21ae57ffb6be0053bf2b0668aa2aaf300a2a7b2ddf7dc0bb6e875a8"
															},
															{
																"hexValue": "353736",
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9867:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_576_by_1",
																	"typeString": "int_const 576"
																},
																"value": "576"
															},
															{
																"hexValue": "33",
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9888:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															{
																"hexValue": "32353030303030",
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9907:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500000_by_1",
																	"typeString": "int_const 2500000"
																},
																"value": "2500000"
															},
															{
																"id": 1627,
																"name": "numWords",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1613,
																"src": "9932:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_97321225141779083734580700388688017054475875654987195679909363163396091442600_by_1",
																	"typeString": "int_const 9732...(69 digits omitted)...2600"
																},
																{
																	"typeIdentifier": "t_rational_576_by_1",
																	"typeString": "int_const 576"
																},
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																{
																	"typeIdentifier": "t_rational_2500000_by_1",
																	"typeString": "int_const 2500000"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1620,
																		"name": "ChainLinkVRF",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "9720:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1619,
																	"name": "VRFCoordinatorV2Interface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "9694:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_VRFCoordinatorV2Interface_$141_$",
																		"typeString": "type(contract VRFCoordinatorV2Interface)"
																	}
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9694:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$141",
																	"typeString": "contract VRFCoordinatorV2Interface"
																}
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9747:18:7",
															"memberName": "requestRandomWords",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 74,
															"src": "9694:71:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$",
																"typeString": "function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9694:260:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9680:274:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "9680:274:7"
											}
										]
									},
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "9429:137:7",
										"text": " @dev function to send the request for randomness to chainlink\n @param numWords number of random numbers required"
									},
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requestRandomWords",
									"nameLocation": "9580:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "numWords",
												"nameLocation": "9616:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "9609:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1612,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "9609:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9599:31:7"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "s_requestId",
												"nameLocation": "9657:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "9649:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9649:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9648:21:7"
									},
									"scope": 1670,
									"src": "9571:390:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "10041:54:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1639,
														"name": "forwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "10058:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1640,
														"name": "_trustedForwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "10071:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10058:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1638,
												"id": 1642,
												"nodeType": "Return",
												"src": "10051:37:7"
											}
										]
									},
									"functionSelector": "572b6c05",
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedForwarder",
									"nameLocation": "9976:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "10003:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "9995:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9995:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9994:19:7"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "10035:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1636,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10035:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10034:6:7"
									},
									"scope": 1670,
									"src": "9967:128:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "10159:474:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 1649,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10173:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10177:4:7",
																"memberName": "data",
																"nodeType": "MemberAccess",
																"src": "10173:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10182:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10173:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "3230",
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10192:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "10173:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1655,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10217:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10221:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10217:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1654,
															"name": "isTrustedForwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "10198:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10198:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10173:55:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1666,
													"nodeType": "Block",
													"src": "10586:41:7",
													"statements": [
														{
															"expression": {
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1661,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "10600:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1662,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10606:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10610:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10606:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10600:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1665,
															"nodeType": "ExpressionStatement",
															"src": "10600:16:7"
														}
													]
												},
												"id": 1667,
												"nodeType": "IfStatement",
												"src": "10169:458:7",
												"trueBody": {
													"id": 1660,
													"nodeType": "Block",
													"src": "10230:350:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "10485:85:7",
																"nodeType": "YulBlock",
																"src": "10485:85:7",
																"statements": [
																	{
																		"nativeSrc": "10503:53:7",
																		"nodeType": "YulAssignment",
																		"src": "10503:53:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10514:2:7",
																					"nodeType": "YulLiteral",
																					"src": "10514:2:7",
																					"type": "",
																					"value": "96"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "calldatasize",
																										"nativeSrc": "10535:12:7",
																										"nodeType": "YulIdentifier",
																										"src": "10535:12:7"
																									},
																									"nativeSrc": "10535:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "10535:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10551:2:7",
																									"nodeType": "YulLiteral",
																									"src": "10551:2:7",
																									"type": "",
																									"value": "20"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "10531:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "10531:3:7"
																							},
																							"nativeSrc": "10531:23:7",
																							"nodeType": "YulFunctionCall",
																							"src": "10531:23:7"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nativeSrc": "10518:12:7",
																						"nodeType": "YulIdentifier",
																						"src": "10518:12:7"
																					},
																					"nativeSrc": "10518:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10518:37:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "10510:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "10510:3:7"
																			},
																			"nativeSrc": "10510:46:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10510:46:7"
																		},
																		"variableNames": [
																			{
																				"name": "ret",
																				"nativeSrc": "10503:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "10503:3:7"
																			}
																		]
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1647,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "10503:3:7",
																	"valueSize": 1
																}
															],
															"id": 1659,
															"nodeType": "InlineAssembly",
															"src": "10476:94:7"
														}
													]
												}
											}
										]
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "10110:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10120:2:7"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "10154:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "10146:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10146:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10145:13:7"
									},
									"scope": 1670,
									"src": "10101:532:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1671,
							"src": "1220:9415:7",
							"usedErrors": [
								961,
								967,
								969,
								971,
								977,
								979,
								983
							],
							"usedEvents": []
						}
					],
					"src": "36:10599:7"
				},
				"id": 7
			}
		}
	}
}